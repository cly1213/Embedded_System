
002_sorting.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001778  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a8  08001928  08001928  00011928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001ad0  08001ad0  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08001ad0  08001ad0  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001ad0  08001ad0  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001ad0  08001ad0  00011ad0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001ad4  08001ad4  00011ad4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001ad8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  200000ac  08001b84  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000e4  08001b84  000200e4  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000252c  00000000  00000000  000200d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000006ee  00000000  00000000  00022602  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00022cf0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00022e30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000297e  00000000  00000000  00022f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000164a  00000000  00000000  000258b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008e80  00000000  00000000  00026f00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002fd80  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000f58  00000000  00000000  0002fdd4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000024  00000000  00000000  00030d2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  00030d50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000ac 	.word	0x200000ac
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001910 	.word	0x08001910

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b0 	.word	0x200000b0
 80001ec:	08001910 	.word	0x08001910

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <array_fill_numbers>:
int numbers[] = {456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b084      	sub	sp, #16
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800029a:	2300      	movs	r3, #0
 800029c:	60fb      	str	r3, [r7, #12]
 800029e:	e015      	b.n	80002cc <array_fill_numbers+0x3c>
    {
    	pNumbers[i] = rand() % 1000;
 80002a0:	f000 faba 	bl	8000818 <rand>
 80002a4:	4602      	mov	r2, r0
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	009b      	lsls	r3, r3, #2
 80002aa:	6879      	ldr	r1, [r7, #4]
 80002ac:	4419      	add	r1, r3
 80002ae:	4b0c      	ldr	r3, [pc, #48]	; (80002e0 <array_fill_numbers+0x50>)
 80002b0:	fb83 0302 	smull	r0, r3, r3, r2
 80002b4:	1198      	asrs	r0, r3, #6
 80002b6:	17d3      	asrs	r3, r2, #31
 80002b8:	1ac3      	subs	r3, r0, r3
 80002ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002be:	fb00 f303 	mul.w	r3, r0, r3
 80002c2:	1ad3      	subs	r3, r2, r3
 80002c4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	3301      	adds	r3, #1
 80002ca:	60fb      	str	r3, [r7, #12]
 80002cc:	68fa      	ldr	r2, [r7, #12]
 80002ce:	683b      	ldr	r3, [r7, #0]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d3e5      	bcc.n	80002a0 <array_fill_numbers+0x10>
    }

}
 80002d4:	bf00      	nop
 80002d6:	bf00      	nop
 80002d8:	3710      	adds	r7, #16
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	10624dd3 	.word	0x10624dd3

080002e4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b086      	sub	sp, #24
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	60f8      	str	r0, [r7, #12]
 80002ec:	60b9      	str	r1, [r7, #8]
 80002ee:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002f0:	6879      	ldr	r1, [r7, #4]
 80002f2:	480e      	ldr	r0, [pc, #56]	; (800032c <display_numbers+0x48>)
 80002f4:	f000 fa36 	bl	8000764 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00b      	b.n	8000316 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002fe:	697b      	ldr	r3, [r7, #20]
 8000300:	009b      	lsls	r3, r3, #2
 8000302:	68fa      	ldr	r2, [r7, #12]
 8000304:	4413      	add	r3, r2
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	4619      	mov	r1, r3
 800030a:	4809      	ldr	r0, [pc, #36]	; (8000330 <display_numbers+0x4c>)
 800030c:	f000 fa2a 	bl	8000764 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000310:	697b      	ldr	r3, [r7, #20]
 8000312:	3301      	adds	r3, #1
 8000314:	617b      	str	r3, [r7, #20]
 8000316:	697a      	ldr	r2, [r7, #20]
 8000318:	68bb      	ldr	r3, [r7, #8]
 800031a:	429a      	cmp	r2, r3
 800031c:	d3ef      	bcc.n	80002fe <display_numbers+0x1a>
    }

    printf("\n");
 800031e:	200a      	movs	r0, #10
 8000320:	f000 fa38 	bl	8000794 <putchar>
}
 8000324:	bf00      	nop
 8000326:	3718      	adds	r7, #24
 8000328:	46bd      	mov	sp, r7
 800032a:	bd80      	pop	{r7, pc}
 800032c:	08001928 	.word	0x08001928
 8000330:	0800192c 	.word	0x0800192c

08000334 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000334:	b480      	push	{r7}
 8000336:	b085      	sub	sp, #20
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
 800033c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000344:	683b      	ldr	r3, [r7, #0]
 8000346:	681a      	ldr	r2, [r3, #0]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800034c:	683b      	ldr	r3, [r7, #0]
 800034e:	68fa      	ldr	r2, [r7, #12]
 8000350:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000352:	4b04      	ldr	r3, [pc, #16]	; (8000364 <swap_numbers+0x30>)
 8000354:	220a      	movs	r2, #10
 8000356:	601a      	str	r2, [r3, #0]
}
 8000358:	bf00      	nop
 800035a:	3714      	adds	r7, #20
 800035c:	46bd      	mov	sp, r7
 800035e:	bc80      	pop	{r7}
 8000360:	4770      	bx	lr
 8000362:	bf00      	nop
 8000364:	20000044 	.word	0x20000044

08000368 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b086      	sub	sp, #24
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
 8000370:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000372:	2300      	movs	r3, #0
 8000374:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000376:	2300      	movs	r3, #0
 8000378:	617b      	str	r3, [r7, #20]
 800037a:	e02f      	b.n	80003dc <bubble_sort+0x74>
    {
        flag=0;
 800037c:	2300      	movs	r3, #0
 800037e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000380:	2300      	movs	r3, #0
 8000382:	613b      	str	r3, [r7, #16]
 8000384:	e01d      	b.n	80003c2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000386:	693b      	ldr	r3, [r7, #16]
 8000388:	009b      	lsls	r3, r3, #2
 800038a:	687a      	ldr	r2, [r7, #4]
 800038c:	4413      	add	r3, r2
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	693b      	ldr	r3, [r7, #16]
 8000392:	3301      	adds	r3, #1
 8000394:	009b      	lsls	r3, r3, #2
 8000396:	6879      	ldr	r1, [r7, #4]
 8000398:	440b      	add	r3, r1
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	429a      	cmp	r2, r3
 800039e:	dd0d      	ble.n	80003bc <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003a0:	693b      	ldr	r3, [r7, #16]
 80003a2:	009b      	lsls	r3, r3, #2
 80003a4:	687a      	ldr	r2, [r7, #4]
 80003a6:	18d0      	adds	r0, r2, r3
 80003a8:	693b      	ldr	r3, [r7, #16]
 80003aa:	3301      	adds	r3, #1
 80003ac:	009b      	lsls	r3, r3, #2
 80003ae:	687a      	ldr	r2, [r7, #4]
 80003b0:	4413      	add	r3, r2
 80003b2:	4619      	mov	r1, r3
 80003b4:	f7ff ffbe 	bl	8000334 <swap_numbers>
                flag=1;
 80003b8:	2301      	movs	r3, #1
 80003ba:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003bc:	693b      	ldr	r3, [r7, #16]
 80003be:	3301      	adds	r3, #1
 80003c0:	613b      	str	r3, [r7, #16]
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	683a      	ldr	r2, [r7, #0]
 80003c6:	1ad3      	subs	r3, r2, r3
 80003c8:	1e5a      	subs	r2, r3, #1
 80003ca:	693b      	ldr	r3, [r7, #16]
 80003cc:	429a      	cmp	r2, r3
 80003ce:	d8da      	bhi.n	8000386 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003d0:	68fb      	ldr	r3, [r7, #12]
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d008      	beq.n	80003e8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003d6:	697b      	ldr	r3, [r7, #20]
 80003d8:	3301      	adds	r3, #1
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	1e5a      	subs	r2, r3, #1
 80003e0:	697b      	ldr	r3, [r7, #20]
 80003e2:	429a      	cmp	r2, r3
 80003e4:	d8ca      	bhi.n	800037c <bubble_sort+0x14>
            break;
    }
}
 80003e6:	e000      	b.n	80003ea <bubble_sort+0x82>
            break;
 80003e8:	bf00      	nop
}
 80003ea:	bf00      	nop
 80003ec:	3718      	adds	r7, #24
 80003ee:	46bd      	mov	sp, r7
 80003f0:	bd80      	pop	{r7, pc}

080003f2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b087      	sub	sp, #28
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	6078      	str	r0, [r7, #4]
 80003fa:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003fc:	2301      	movs	r3, #1
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	e02c      	b.n	800045c <insertion_sort+0x6a>
     {
         j=i-1;
 8000402:	697b      	ldr	r3, [r7, #20]
 8000404:	3b01      	subs	r3, #1
 8000406:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000408:	697b      	ldr	r3, [r7, #20]
 800040a:	009b      	lsls	r3, r3, #2
 800040c:	687a      	ldr	r2, [r7, #4]
 800040e:	4413      	add	r3, r2
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000414:	e00d      	b.n	8000432 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000416:	693b      	ldr	r3, [r7, #16]
 8000418:	009b      	lsls	r3, r3, #2
 800041a:	687a      	ldr	r2, [r7, #4]
 800041c:	441a      	add	r2, r3
 800041e:	693b      	ldr	r3, [r7, #16]
 8000420:	3301      	adds	r3, #1
 8000422:	009b      	lsls	r3, r3, #2
 8000424:	6879      	ldr	r1, [r7, #4]
 8000426:	440b      	add	r3, r1
 8000428:	6812      	ldr	r2, [r2, #0]
 800042a:	601a      	str	r2, [r3, #0]
             j--;
 800042c:	693b      	ldr	r3, [r7, #16]
 800042e:	3b01      	subs	r3, #1
 8000430:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000432:	693b      	ldr	r3, [r7, #16]
 8000434:	2b00      	cmp	r3, #0
 8000436:	db07      	blt.n	8000448 <insertion_sort+0x56>
 8000438:	693b      	ldr	r3, [r7, #16]
 800043a:	009b      	lsls	r3, r3, #2
 800043c:	687a      	ldr	r2, [r7, #4]
 800043e:	4413      	add	r3, r2
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	68fa      	ldr	r2, [r7, #12]
 8000444:	429a      	cmp	r2, r3
 8000446:	dbe6      	blt.n	8000416 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000448:	693b      	ldr	r3, [r7, #16]
 800044a:	3301      	adds	r3, #1
 800044c:	009b      	lsls	r3, r3, #2
 800044e:	687a      	ldr	r2, [r7, #4]
 8000450:	4413      	add	r3, r2
 8000452:	68fa      	ldr	r2, [r7, #12]
 8000454:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000456:	697b      	ldr	r3, [r7, #20]
 8000458:	3301      	adds	r3, #1
 800045a:	617b      	str	r3, [r7, #20]
 800045c:	697b      	ldr	r3, [r7, #20]
 800045e:	683a      	ldr	r2, [r7, #0]
 8000460:	429a      	cmp	r2, r3
 8000462:	d8ce      	bhi.n	8000402 <insertion_sort+0x10>
     }


}
 8000464:	bf00      	nop
 8000466:	bf00      	nop
 8000468:	371c      	adds	r7, #28
 800046a:	46bd      	mov	sp, r7
 800046c:	bc80      	pop	{r7}
 800046e:	4770      	bx	lr

08000470 <main>:



int main()
{
 8000470:	b580      	push	{r7, lr}
 8000472:	b082      	sub	sp, #8
 8000474:	af00      	add	r7, sp, #0
	srand(time(NULL));
 8000476:	2000      	movs	r0, #0
 8000478:	f000 fa0e 	bl	8000898 <time>
 800047c:	4602      	mov	r2, r0
 800047e:	460b      	mov	r3, r1
 8000480:	4613      	mov	r3, r2
 8000482:	4618      	mov	r0, r3
 8000484:	f000 f99a 	bl	80007bc <srand>

    unsigned int len = sizeof(numbers)/sizeof(int);
 8000488:	2311      	movs	r3, #17
 800048a:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800048c:	6879      	ldr	r1, [r7, #4]
 800048e:	4814      	ldr	r0, [pc, #80]	; (80004e0 <main+0x70>)
 8000490:	f7ff fefe 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000494:	4a13      	ldr	r2, [pc, #76]	; (80004e4 <main+0x74>)
 8000496:	6879      	ldr	r1, [r7, #4]
 8000498:	4811      	ldr	r0, [pc, #68]	; (80004e0 <main+0x70>)
 800049a:	f7ff ff23 	bl	80002e4 <display_numbers>

    bubble_sort(numbers,len);
 800049e:	6879      	ldr	r1, [r7, #4]
 80004a0:	480f      	ldr	r0, [pc, #60]	; (80004e0 <main+0x70>)
 80004a2:	f7ff ff61 	bl	8000368 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 80004a6:	4a10      	ldr	r2, [pc, #64]	; (80004e8 <main+0x78>)
 80004a8:	6879      	ldr	r1, [r7, #4]
 80004aa:	480d      	ldr	r0, [pc, #52]	; (80004e0 <main+0x70>)
 80004ac:	f7ff ff1a 	bl	80002e4 <display_numbers>

    array_fill_numbers(numbers,len);
 80004b0:	6879      	ldr	r1, [r7, #4]
 80004b2:	480b      	ldr	r0, [pc, #44]	; (80004e0 <main+0x70>)
 80004b4:	f7ff feec 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004b8:	4a0c      	ldr	r2, [pc, #48]	; (80004ec <main+0x7c>)
 80004ba:	6879      	ldr	r1, [r7, #4]
 80004bc:	4808      	ldr	r0, [pc, #32]	; (80004e0 <main+0x70>)
 80004be:	f7ff ff11 	bl	80002e4 <display_numbers>

    insertion_sort(numbers,len);
 80004c2:	6879      	ldr	r1, [r7, #4]
 80004c4:	4806      	ldr	r0, [pc, #24]	; (80004e0 <main+0x70>)
 80004c6:	f7ff ff94 	bl	80003f2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004ca:	4a09      	ldr	r2, [pc, #36]	; (80004f0 <main+0x80>)
 80004cc:	6879      	ldr	r1, [r7, #4]
 80004ce:	4804      	ldr	r0, [pc, #16]	; (80004e0 <main+0x70>)
 80004d0:	f7ff ff08 	bl	80002e4 <display_numbers>

    return 0;
 80004d4:	2300      	movs	r3, #0
}
 80004d6:	4618      	mov	r0, r3
 80004d8:	3708      	adds	r7, #8
 80004da:	46bd      	mov	sp, r7
 80004dc:	bd80      	pop	{r7, pc}
 80004de:	bf00      	nop
 80004e0:	20000000 	.word	0x20000000
 80004e4:	08001934 	.word	0x08001934
 80004e8:	08001948 	.word	0x08001948
 80004ec:	0800195c 	.word	0x0800195c
 80004f0:	08001970 	.word	0x08001970

080004f4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80004f4:	b480      	push	{r7}
 80004f6:	b083      	sub	sp, #12
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	4603      	mov	r3, r0
 80004fc:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80004fe:	4b0e      	ldr	r3, [pc, #56]	; (8000538 <ITM_SendChar+0x44>)
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	4a0d      	ldr	r2, [pc, #52]	; (8000538 <ITM_SendChar+0x44>)
 8000504:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000508:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800050a:	4b0c      	ldr	r3, [pc, #48]	; (800053c <ITM_SendChar+0x48>)
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a0b      	ldr	r2, [pc, #44]	; (800053c <ITM_SendChar+0x48>)
 8000510:	f043 0301 	orr.w	r3, r3, #1
 8000514:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000516:	bf00      	nop
 8000518:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	f003 0301 	and.w	r3, r3, #1
 8000522:	2b00      	cmp	r3, #0
 8000524:	d0f8      	beq.n	8000518 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000526:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800052a:	79fb      	ldrb	r3, [r7, #7]
 800052c:	6013      	str	r3, [r2, #0]
}
 800052e:	bf00      	nop
 8000530:	370c      	adds	r7, #12
 8000532:	46bd      	mov	sp, r7
 8000534:	bc80      	pop	{r7}
 8000536:	4770      	bx	lr
 8000538:	e000edfc 	.word	0xe000edfc
 800053c:	e0000e00 	.word	0xe0000e00

08000540 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000540:	b480      	push	{r7}
 8000542:	af00      	add	r7, sp, #0
	return 1;
 8000544:	2301      	movs	r3, #1
}
 8000546:	4618      	mov	r0, r3
 8000548:	46bd      	mov	sp, r7
 800054a:	bc80      	pop	{r7}
 800054c:	4770      	bx	lr

0800054e <_kill>:

int _kill(int pid, int sig)
{
 800054e:	b580      	push	{r7, lr}
 8000550:	b082      	sub	sp, #8
 8000552:	af00      	add	r7, sp, #0
 8000554:	6078      	str	r0, [r7, #4]
 8000556:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8000558:	f000 f8d2 	bl	8000700 <__errno>
 800055c:	4603      	mov	r3, r0
 800055e:	2216      	movs	r2, #22
 8000560:	601a      	str	r2, [r3, #0]
	return -1;
 8000562:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000566:	4618      	mov	r0, r3
 8000568:	3708      	adds	r7, #8
 800056a:	46bd      	mov	sp, r7
 800056c:	bd80      	pop	{r7, pc}

0800056e <_exit>:

void _exit (int status)
{
 800056e:	b580      	push	{r7, lr}
 8000570:	b082      	sub	sp, #8
 8000572:	af00      	add	r7, sp, #0
 8000574:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8000576:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800057a:	6878      	ldr	r0, [r7, #4]
 800057c:	f7ff ffe7 	bl	800054e <_kill>
	while (1) {}		/* Make sure we hang here */
 8000580:	e7fe      	b.n	8000580 <_exit+0x12>

08000582 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000582:	b580      	push	{r7, lr}
 8000584:	b086      	sub	sp, #24
 8000586:	af00      	add	r7, sp, #0
 8000588:	60f8      	str	r0, [r7, #12]
 800058a:	60b9      	str	r1, [r7, #8]
 800058c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800058e:	2300      	movs	r3, #0
 8000590:	617b      	str	r3, [r7, #20]
 8000592:	e00a      	b.n	80005aa <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000594:	f3af 8000 	nop.w
 8000598:	4601      	mov	r1, r0
 800059a:	68bb      	ldr	r3, [r7, #8]
 800059c:	1c5a      	adds	r2, r3, #1
 800059e:	60ba      	str	r2, [r7, #8]
 80005a0:	b2ca      	uxtb	r2, r1
 80005a2:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005a4:	697b      	ldr	r3, [r7, #20]
 80005a6:	3301      	adds	r3, #1
 80005a8:	617b      	str	r3, [r7, #20]
 80005aa:	697a      	ldr	r2, [r7, #20]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	429a      	cmp	r2, r3
 80005b0:	dbf0      	blt.n	8000594 <_read+0x12>
	}

return len;
 80005b2:	687b      	ldr	r3, [r7, #4]
}
 80005b4:	4618      	mov	r0, r3
 80005b6:	3718      	adds	r7, #24
 80005b8:	46bd      	mov	sp, r7
 80005ba:	bd80      	pop	{r7, pc}

080005bc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	b086      	sub	sp, #24
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	60f8      	str	r0, [r7, #12]
 80005c4:	60b9      	str	r1, [r7, #8]
 80005c6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005c8:	2300      	movs	r3, #0
 80005ca:	617b      	str	r3, [r7, #20]
 80005cc:	e009      	b.n	80005e2 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80005ce:	68bb      	ldr	r3, [r7, #8]
 80005d0:	1c5a      	adds	r2, r3, #1
 80005d2:	60ba      	str	r2, [r7, #8]
 80005d4:	781b      	ldrb	r3, [r3, #0]
 80005d6:	4618      	mov	r0, r3
 80005d8:	f7ff ff8c 	bl	80004f4 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005dc:	697b      	ldr	r3, [r7, #20]
 80005de:	3301      	adds	r3, #1
 80005e0:	617b      	str	r3, [r7, #20]
 80005e2:	697a      	ldr	r2, [r7, #20]
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	429a      	cmp	r2, r3
 80005e8:	dbf1      	blt.n	80005ce <_write+0x12>
	}
	return len;
 80005ea:	687b      	ldr	r3, [r7, #4]
}
 80005ec:	4618      	mov	r0, r3
 80005ee:	3718      	adds	r7, #24
 80005f0:	46bd      	mov	sp, r7
 80005f2:	bd80      	pop	{r7, pc}

080005f4 <_close>:

int _close(int file)
{
 80005f4:	b480      	push	{r7}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
	return -1;
 80005fc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000600:	4618      	mov	r0, r3
 8000602:	370c      	adds	r7, #12
 8000604:	46bd      	mov	sp, r7
 8000606:	bc80      	pop	{r7}
 8000608:	4770      	bx	lr

0800060a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800060a:	b480      	push	{r7}
 800060c:	b083      	sub	sp, #12
 800060e:	af00      	add	r7, sp, #0
 8000610:	6078      	str	r0, [r7, #4]
 8000612:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000614:	683b      	ldr	r3, [r7, #0]
 8000616:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800061a:	605a      	str	r2, [r3, #4]
	return 0;
 800061c:	2300      	movs	r3, #0
}
 800061e:	4618      	mov	r0, r3
 8000620:	370c      	adds	r7, #12
 8000622:	46bd      	mov	sp, r7
 8000624:	bc80      	pop	{r7}
 8000626:	4770      	bx	lr

08000628 <_isatty>:

int _isatty(int file)
{
 8000628:	b480      	push	{r7}
 800062a:	b083      	sub	sp, #12
 800062c:	af00      	add	r7, sp, #0
 800062e:	6078      	str	r0, [r7, #4]
	return 1;
 8000630:	2301      	movs	r3, #1
}
 8000632:	4618      	mov	r0, r3
 8000634:	370c      	adds	r7, #12
 8000636:	46bd      	mov	sp, r7
 8000638:	bc80      	pop	{r7}
 800063a:	4770      	bx	lr

0800063c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800063c:	b480      	push	{r7}
 800063e:	b085      	sub	sp, #20
 8000640:	af00      	add	r7, sp, #0
 8000642:	60f8      	str	r0, [r7, #12]
 8000644:	60b9      	str	r1, [r7, #8]
 8000646:	607a      	str	r2, [r7, #4]
	return 0;
 8000648:	2300      	movs	r3, #0
}
 800064a:	4618      	mov	r0, r3
 800064c:	3714      	adds	r7, #20
 800064e:	46bd      	mov	sp, r7
 8000650:	bc80      	pop	{r7}
 8000652:	4770      	bx	lr

08000654 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000654:	b580      	push	{r7, lr}
 8000656:	b084      	sub	sp, #16
 8000658:	af00      	add	r7, sp, #0
 800065a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800065c:	4b11      	ldr	r3, [pc, #68]	; (80006a4 <_sbrk+0x50>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	2b00      	cmp	r3, #0
 8000662:	d102      	bne.n	800066a <_sbrk+0x16>
		heap_end = &end;
 8000664:	4b0f      	ldr	r3, [pc, #60]	; (80006a4 <_sbrk+0x50>)
 8000666:	4a10      	ldr	r2, [pc, #64]	; (80006a8 <_sbrk+0x54>)
 8000668:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800066a:	4b0e      	ldr	r3, [pc, #56]	; (80006a4 <_sbrk+0x50>)
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000670:	4b0c      	ldr	r3, [pc, #48]	; (80006a4 <_sbrk+0x50>)
 8000672:	681a      	ldr	r2, [r3, #0]
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	4413      	add	r3, r2
 8000678:	466a      	mov	r2, sp
 800067a:	4293      	cmp	r3, r2
 800067c:	d907      	bls.n	800068e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800067e:	f000 f83f 	bl	8000700 <__errno>
 8000682:	4603      	mov	r3, r0
 8000684:	220c      	movs	r2, #12
 8000686:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8000688:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800068c:	e006      	b.n	800069c <_sbrk+0x48>
	}

	heap_end += incr;
 800068e:	4b05      	ldr	r3, [pc, #20]	; (80006a4 <_sbrk+0x50>)
 8000690:	681a      	ldr	r2, [r3, #0]
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	4413      	add	r3, r2
 8000696:	4a03      	ldr	r2, [pc, #12]	; (80006a4 <_sbrk+0x50>)
 8000698:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800069a:	68fb      	ldr	r3, [r7, #12]
}
 800069c:	4618      	mov	r0, r3
 800069e:	3710      	adds	r7, #16
 80006a0:	46bd      	mov	sp, r7
 80006a2:	bd80      	pop	{r7, pc}
 80006a4:	200000c8 	.word	0x200000c8
 80006a8:	200000e8 	.word	0x200000e8

080006ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ac:	480d      	ldr	r0, [pc, #52]	; (80006e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ae:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 80006b0:	480d      	ldr	r0, [pc, #52]	; (80006e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80006b2:	490e      	ldr	r1, [pc, #56]	; (80006ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80006b4:	4a0e      	ldr	r2, [pc, #56]	; (80006f0 <LoopForever+0xe>)
  movs r3, #0
 80006b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006b8:	e002      	b.n	80006c0 <LoopCopyDataInit>

080006ba <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 80006ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006be:	3304      	adds	r3, #4

080006c0 <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 80006c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006c2:	428c      	cmp	r4, r1



  bcc CopyDataInit
 80006c4:	d3f9      	bcc.n	80006ba <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006c6:	4a0b      	ldr	r2, [pc, #44]	; (80006f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006c8:	4c0b      	ldr	r4, [pc, #44]	; (80006f8 <LoopForever+0x16>)
  movs r3, #0
 80006ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006cc:	e001      	b.n	80006d2 <LoopFillZerobss>

080006ce <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 80006ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006d0:	3204      	adds	r2, #4

080006d2 <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 80006d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006d4:	d3fb      	bcc.n	80006ce <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80006d6:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80006da:	f000 f817 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006de:	f7ff fec7 	bl	8000470 <main>

080006e2 <LoopForever>:

LoopForever:
    b LoopForever
 80006e2:	e7fe      	b.n	80006e2 <LoopForever>
  ldr   r0, =_estack
 80006e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006ec:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006f0:	08001ad8 	.word	0x08001ad8
  ldr r2, =_sbss
 80006f4:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006f8:	200000e4 	.word	0x200000e4

080006fc <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006fc:	e7fe      	b.n	80006fc <ADC_IRQHandler>
	...

08000700 <__errno>:
 8000700:	4b01      	ldr	r3, [pc, #4]	; (8000708 <__errno+0x8>)
 8000702:	6818      	ldr	r0, [r3, #0]
 8000704:	4770      	bx	lr
 8000706:	bf00      	nop
 8000708:	20000048 	.word	0x20000048

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	4d0d      	ldr	r5, [pc, #52]	; (8000744 <__libc_init_array+0x38>)
 8000710:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000712:	1b64      	subs	r4, r4, r5
 8000714:	10a4      	asrs	r4, r4, #2
 8000716:	2600      	movs	r6, #0
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	4d0b      	ldr	r5, [pc, #44]	; (800074c <__libc_init_array+0x40>)
 800071e:	4c0c      	ldr	r4, [pc, #48]	; (8000750 <__libc_init_array+0x44>)
 8000720:	f001 f8f6 	bl	8001910 <_init>
 8000724:	1b64      	subs	r4, r4, r5
 8000726:	10a4      	asrs	r4, r4, #2
 8000728:	2600      	movs	r6, #0
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	08001ad0 	.word	0x08001ad0
 8000748:	08001ad0 	.word	0x08001ad0
 800074c:	08001ad0 	.word	0x08001ad0
 8000750:	08001ad4 	.word	0x08001ad4

08000754 <memset>:
 8000754:	4402      	add	r2, r0
 8000756:	4603      	mov	r3, r0
 8000758:	4293      	cmp	r3, r2
 800075a:	d100      	bne.n	800075e <memset+0xa>
 800075c:	4770      	bx	lr
 800075e:	f803 1b01 	strb.w	r1, [r3], #1
 8000762:	e7f9      	b.n	8000758 <memset+0x4>

08000764 <iprintf>:
 8000764:	b40f      	push	{r0, r1, r2, r3}
 8000766:	4b0a      	ldr	r3, [pc, #40]	; (8000790 <iprintf+0x2c>)
 8000768:	b513      	push	{r0, r1, r4, lr}
 800076a:	681c      	ldr	r4, [r3, #0]
 800076c:	b124      	cbz	r4, 8000778 <iprintf+0x14>
 800076e:	69a3      	ldr	r3, [r4, #24]
 8000770:	b913      	cbnz	r3, 8000778 <iprintf+0x14>
 8000772:	4620      	mov	r0, r4
 8000774:	f000 f920 	bl	80009b8 <__sinit>
 8000778:	ab05      	add	r3, sp, #20
 800077a:	9a04      	ldr	r2, [sp, #16]
 800077c:	68a1      	ldr	r1, [r4, #8]
 800077e:	9301      	str	r3, [sp, #4]
 8000780:	4620      	mov	r0, r4
 8000782:	f000 fab7 	bl	8000cf4 <_vfiprintf_r>
 8000786:	b002      	add	sp, #8
 8000788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800078c:	b004      	add	sp, #16
 800078e:	4770      	bx	lr
 8000790:	20000048 	.word	0x20000048

08000794 <putchar>:
 8000794:	b538      	push	{r3, r4, r5, lr}
 8000796:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <putchar+0x24>)
 8000798:	681c      	ldr	r4, [r3, #0]
 800079a:	4605      	mov	r5, r0
 800079c:	b124      	cbz	r4, 80007a8 <putchar+0x14>
 800079e:	69a3      	ldr	r3, [r4, #24]
 80007a0:	b913      	cbnz	r3, 80007a8 <putchar+0x14>
 80007a2:	4620      	mov	r0, r4
 80007a4:	f000 f908 	bl	80009b8 <__sinit>
 80007a8:	68a2      	ldr	r2, [r4, #8]
 80007aa:	4629      	mov	r1, r5
 80007ac:	4620      	mov	r0, r4
 80007ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007b2:	f000 bd63 	b.w	800127c <_putc_r>
 80007b6:	bf00      	nop
 80007b8:	20000048 	.word	0x20000048

080007bc <srand>:
 80007bc:	b538      	push	{r3, r4, r5, lr}
 80007be:	4b10      	ldr	r3, [pc, #64]	; (8000800 <srand+0x44>)
 80007c0:	681d      	ldr	r5, [r3, #0]
 80007c2:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80007c4:	4604      	mov	r4, r0
 80007c6:	b9b3      	cbnz	r3, 80007f6 <srand+0x3a>
 80007c8:	2018      	movs	r0, #24
 80007ca:	f000 f9bb 	bl	8000b44 <malloc>
 80007ce:	4602      	mov	r2, r0
 80007d0:	63a8      	str	r0, [r5, #56]	; 0x38
 80007d2:	b920      	cbnz	r0, 80007de <srand+0x22>
 80007d4:	4b0b      	ldr	r3, [pc, #44]	; (8000804 <srand+0x48>)
 80007d6:	480c      	ldr	r0, [pc, #48]	; (8000808 <srand+0x4c>)
 80007d8:	2142      	movs	r1, #66	; 0x42
 80007da:	f000 f877 	bl	80008cc <__assert_func>
 80007de:	490b      	ldr	r1, [pc, #44]	; (800080c <srand+0x50>)
 80007e0:	4b0b      	ldr	r3, [pc, #44]	; (8000810 <srand+0x54>)
 80007e2:	e9c0 1300 	strd	r1, r3, [r0]
 80007e6:	4b0b      	ldr	r3, [pc, #44]	; (8000814 <srand+0x58>)
 80007e8:	6083      	str	r3, [r0, #8]
 80007ea:	230b      	movs	r3, #11
 80007ec:	8183      	strh	r3, [r0, #12]
 80007ee:	2100      	movs	r1, #0
 80007f0:	2001      	movs	r0, #1
 80007f2:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80007f6:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80007f8:	2200      	movs	r2, #0
 80007fa:	611c      	str	r4, [r3, #16]
 80007fc:	615a      	str	r2, [r3, #20]
 80007fe:	bd38      	pop	{r3, r4, r5, pc}
 8000800:	20000048 	.word	0x20000048
 8000804:	08001988 	.word	0x08001988
 8000808:	0800199f 	.word	0x0800199f
 800080c:	abcd330e 	.word	0xabcd330e
 8000810:	e66d1234 	.word	0xe66d1234
 8000814:	0005deec 	.word	0x0005deec

08000818 <rand>:
 8000818:	4b17      	ldr	r3, [pc, #92]	; (8000878 <rand+0x60>)
 800081a:	b510      	push	{r4, lr}
 800081c:	681c      	ldr	r4, [r3, #0]
 800081e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000820:	b9b3      	cbnz	r3, 8000850 <rand+0x38>
 8000822:	2018      	movs	r0, #24
 8000824:	f000 f98e 	bl	8000b44 <malloc>
 8000828:	4602      	mov	r2, r0
 800082a:	63a0      	str	r0, [r4, #56]	; 0x38
 800082c:	b920      	cbnz	r0, 8000838 <rand+0x20>
 800082e:	4b13      	ldr	r3, [pc, #76]	; (800087c <rand+0x64>)
 8000830:	4813      	ldr	r0, [pc, #76]	; (8000880 <rand+0x68>)
 8000832:	214e      	movs	r1, #78	; 0x4e
 8000834:	f000 f84a 	bl	80008cc <__assert_func>
 8000838:	4912      	ldr	r1, [pc, #72]	; (8000884 <rand+0x6c>)
 800083a:	4b13      	ldr	r3, [pc, #76]	; (8000888 <rand+0x70>)
 800083c:	e9c0 1300 	strd	r1, r3, [r0]
 8000840:	4b12      	ldr	r3, [pc, #72]	; (800088c <rand+0x74>)
 8000842:	6083      	str	r3, [r0, #8]
 8000844:	230b      	movs	r3, #11
 8000846:	8183      	strh	r3, [r0, #12]
 8000848:	2100      	movs	r1, #0
 800084a:	2001      	movs	r0, #1
 800084c:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8000850:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8000852:	480f      	ldr	r0, [pc, #60]	; (8000890 <rand+0x78>)
 8000854:	690a      	ldr	r2, [r1, #16]
 8000856:	694b      	ldr	r3, [r1, #20]
 8000858:	4c0e      	ldr	r4, [pc, #56]	; (8000894 <rand+0x7c>)
 800085a:	4350      	muls	r0, r2
 800085c:	fb04 0003 	mla	r0, r4, r3, r0
 8000860:	fba2 3404 	umull	r3, r4, r2, r4
 8000864:	1c5a      	adds	r2, r3, #1
 8000866:	4404      	add	r4, r0
 8000868:	f144 0000 	adc.w	r0, r4, #0
 800086c:	e9c1 2004 	strd	r2, r0, [r1, #16]
 8000870:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8000874:	bd10      	pop	{r4, pc}
 8000876:	bf00      	nop
 8000878:	20000048 	.word	0x20000048
 800087c:	08001988 	.word	0x08001988
 8000880:	0800199f 	.word	0x0800199f
 8000884:	abcd330e 	.word	0xabcd330e
 8000888:	e66d1234 	.word	0xe66d1234
 800088c:	0005deec 	.word	0x0005deec
 8000890:	5851f42d 	.word	0x5851f42d
 8000894:	4c957f2d 	.word	0x4c957f2d

08000898 <time>:
 8000898:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800089a:	4b0b      	ldr	r3, [pc, #44]	; (80008c8 <time+0x30>)
 800089c:	4604      	mov	r4, r0
 800089e:	2200      	movs	r2, #0
 80008a0:	6818      	ldr	r0, [r3, #0]
 80008a2:	4669      	mov	r1, sp
 80008a4:	f000 f938 	bl	8000b18 <_gettimeofday_r>
 80008a8:	2800      	cmp	r0, #0
 80008aa:	da05      	bge.n	80008b8 <time+0x20>
 80008ac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80008b0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80008b4:	e9cd 2300 	strd	r2, r3, [sp]
 80008b8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80008bc:	b10c      	cbz	r4, 80008c2 <time+0x2a>
 80008be:	e9c4 0100 	strd	r0, r1, [r4]
 80008c2:	b004      	add	sp, #16
 80008c4:	bd10      	pop	{r4, pc}
 80008c6:	bf00      	nop
 80008c8:	20000048 	.word	0x20000048

080008cc <__assert_func>:
 80008cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80008ce:	4614      	mov	r4, r2
 80008d0:	461a      	mov	r2, r3
 80008d2:	4b09      	ldr	r3, [pc, #36]	; (80008f8 <__assert_func+0x2c>)
 80008d4:	681b      	ldr	r3, [r3, #0]
 80008d6:	4605      	mov	r5, r0
 80008d8:	68d8      	ldr	r0, [r3, #12]
 80008da:	b14c      	cbz	r4, 80008f0 <__assert_func+0x24>
 80008dc:	4b07      	ldr	r3, [pc, #28]	; (80008fc <__assert_func+0x30>)
 80008de:	9100      	str	r1, [sp, #0]
 80008e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80008e4:	4906      	ldr	r1, [pc, #24]	; (8000900 <__assert_func+0x34>)
 80008e6:	462b      	mov	r3, r5
 80008e8:	f000 f8e4 	bl	8000ab4 <fiprintf>
 80008ec:	f000 fe34 	bl	8001558 <abort>
 80008f0:	4b04      	ldr	r3, [pc, #16]	; (8000904 <__assert_func+0x38>)
 80008f2:	461c      	mov	r4, r3
 80008f4:	e7f3      	b.n	80008de <__assert_func+0x12>
 80008f6:	bf00      	nop
 80008f8:	20000048 	.word	0x20000048
 80008fc:	080019fe 	.word	0x080019fe
 8000900:	08001a0b 	.word	0x08001a0b
 8000904:	08001a39 	.word	0x08001a39

08000908 <std>:
 8000908:	2300      	movs	r3, #0
 800090a:	b510      	push	{r4, lr}
 800090c:	4604      	mov	r4, r0
 800090e:	e9c0 3300 	strd	r3, r3, [r0]
 8000912:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000916:	6083      	str	r3, [r0, #8]
 8000918:	8181      	strh	r1, [r0, #12]
 800091a:	6643      	str	r3, [r0, #100]	; 0x64
 800091c:	81c2      	strh	r2, [r0, #14]
 800091e:	6183      	str	r3, [r0, #24]
 8000920:	4619      	mov	r1, r3
 8000922:	2208      	movs	r2, #8
 8000924:	305c      	adds	r0, #92	; 0x5c
 8000926:	f7ff ff15 	bl	8000754 <memset>
 800092a:	4b05      	ldr	r3, [pc, #20]	; (8000940 <std+0x38>)
 800092c:	6263      	str	r3, [r4, #36]	; 0x24
 800092e:	4b05      	ldr	r3, [pc, #20]	; (8000944 <std+0x3c>)
 8000930:	62a3      	str	r3, [r4, #40]	; 0x28
 8000932:	4b05      	ldr	r3, [pc, #20]	; (8000948 <std+0x40>)
 8000934:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000936:	4b05      	ldr	r3, [pc, #20]	; (800094c <std+0x44>)
 8000938:	6224      	str	r4, [r4, #32]
 800093a:	6323      	str	r3, [r4, #48]	; 0x30
 800093c:	bd10      	pop	{r4, pc}
 800093e:	bf00      	nop
 8000940:	0800132d 	.word	0x0800132d
 8000944:	0800134f 	.word	0x0800134f
 8000948:	08001387 	.word	0x08001387
 800094c:	080013ab 	.word	0x080013ab

08000950 <_cleanup_r>:
 8000950:	4901      	ldr	r1, [pc, #4]	; (8000958 <_cleanup_r+0x8>)
 8000952:	f000 b8c1 	b.w	8000ad8 <_fwalk_reent>
 8000956:	bf00      	nop
 8000958:	08001695 	.word	0x08001695

0800095c <__sfmoreglue>:
 800095c:	b570      	push	{r4, r5, r6, lr}
 800095e:	1e4a      	subs	r2, r1, #1
 8000960:	2568      	movs	r5, #104	; 0x68
 8000962:	4355      	muls	r5, r2
 8000964:	460e      	mov	r6, r1
 8000966:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800096a:	f000 f941 	bl	8000bf0 <_malloc_r>
 800096e:	4604      	mov	r4, r0
 8000970:	b140      	cbz	r0, 8000984 <__sfmoreglue+0x28>
 8000972:	2100      	movs	r1, #0
 8000974:	e9c0 1600 	strd	r1, r6, [r0]
 8000978:	300c      	adds	r0, #12
 800097a:	60a0      	str	r0, [r4, #8]
 800097c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000980:	f7ff fee8 	bl	8000754 <memset>
 8000984:	4620      	mov	r0, r4
 8000986:	bd70      	pop	{r4, r5, r6, pc}

08000988 <__sfp_lock_acquire>:
 8000988:	4801      	ldr	r0, [pc, #4]	; (8000990 <__sfp_lock_acquire+0x8>)
 800098a:	f000 b8d8 	b.w	8000b3e <__retarget_lock_acquire_recursive>
 800098e:	bf00      	nop
 8000990:	200000dc 	.word	0x200000dc

08000994 <__sfp_lock_release>:
 8000994:	4801      	ldr	r0, [pc, #4]	; (800099c <__sfp_lock_release+0x8>)
 8000996:	f000 b8d3 	b.w	8000b40 <__retarget_lock_release_recursive>
 800099a:	bf00      	nop
 800099c:	200000dc 	.word	0x200000dc

080009a0 <__sinit_lock_acquire>:
 80009a0:	4801      	ldr	r0, [pc, #4]	; (80009a8 <__sinit_lock_acquire+0x8>)
 80009a2:	f000 b8cc 	b.w	8000b3e <__retarget_lock_acquire_recursive>
 80009a6:	bf00      	nop
 80009a8:	200000d7 	.word	0x200000d7

080009ac <__sinit_lock_release>:
 80009ac:	4801      	ldr	r0, [pc, #4]	; (80009b4 <__sinit_lock_release+0x8>)
 80009ae:	f000 b8c7 	b.w	8000b40 <__retarget_lock_release_recursive>
 80009b2:	bf00      	nop
 80009b4:	200000d7 	.word	0x200000d7

080009b8 <__sinit>:
 80009b8:	b510      	push	{r4, lr}
 80009ba:	4604      	mov	r4, r0
 80009bc:	f7ff fff0 	bl	80009a0 <__sinit_lock_acquire>
 80009c0:	69a3      	ldr	r3, [r4, #24]
 80009c2:	b11b      	cbz	r3, 80009cc <__sinit+0x14>
 80009c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009c8:	f7ff bff0 	b.w	80009ac <__sinit_lock_release>
 80009cc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009d0:	6523      	str	r3, [r4, #80]	; 0x50
 80009d2:	4b13      	ldr	r3, [pc, #76]	; (8000a20 <__sinit+0x68>)
 80009d4:	4a13      	ldr	r2, [pc, #76]	; (8000a24 <__sinit+0x6c>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	62a2      	str	r2, [r4, #40]	; 0x28
 80009da:	42a3      	cmp	r3, r4
 80009dc:	bf04      	itt	eq
 80009de:	2301      	moveq	r3, #1
 80009e0:	61a3      	streq	r3, [r4, #24]
 80009e2:	4620      	mov	r0, r4
 80009e4:	f000 f820 	bl	8000a28 <__sfp>
 80009e8:	6060      	str	r0, [r4, #4]
 80009ea:	4620      	mov	r0, r4
 80009ec:	f000 f81c 	bl	8000a28 <__sfp>
 80009f0:	60a0      	str	r0, [r4, #8]
 80009f2:	4620      	mov	r0, r4
 80009f4:	f000 f818 	bl	8000a28 <__sfp>
 80009f8:	2200      	movs	r2, #0
 80009fa:	60e0      	str	r0, [r4, #12]
 80009fc:	2104      	movs	r1, #4
 80009fe:	6860      	ldr	r0, [r4, #4]
 8000a00:	f7ff ff82 	bl	8000908 <std>
 8000a04:	68a0      	ldr	r0, [r4, #8]
 8000a06:	2201      	movs	r2, #1
 8000a08:	2109      	movs	r1, #9
 8000a0a:	f7ff ff7d 	bl	8000908 <std>
 8000a0e:	68e0      	ldr	r0, [r4, #12]
 8000a10:	2202      	movs	r2, #2
 8000a12:	2112      	movs	r1, #18
 8000a14:	f7ff ff78 	bl	8000908 <std>
 8000a18:	2301      	movs	r3, #1
 8000a1a:	61a3      	str	r3, [r4, #24]
 8000a1c:	e7d2      	b.n	80009c4 <__sinit+0xc>
 8000a1e:	bf00      	nop
 8000a20:	08001984 	.word	0x08001984
 8000a24:	08000951 	.word	0x08000951

08000a28 <__sfp>:
 8000a28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2a:	4607      	mov	r7, r0
 8000a2c:	f7ff ffac 	bl	8000988 <__sfp_lock_acquire>
 8000a30:	4b1e      	ldr	r3, [pc, #120]	; (8000aac <__sfp+0x84>)
 8000a32:	681e      	ldr	r6, [r3, #0]
 8000a34:	69b3      	ldr	r3, [r6, #24]
 8000a36:	b913      	cbnz	r3, 8000a3e <__sfp+0x16>
 8000a38:	4630      	mov	r0, r6
 8000a3a:	f7ff ffbd 	bl	80009b8 <__sinit>
 8000a3e:	3648      	adds	r6, #72	; 0x48
 8000a40:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a44:	3b01      	subs	r3, #1
 8000a46:	d503      	bpl.n	8000a50 <__sfp+0x28>
 8000a48:	6833      	ldr	r3, [r6, #0]
 8000a4a:	b30b      	cbz	r3, 8000a90 <__sfp+0x68>
 8000a4c:	6836      	ldr	r6, [r6, #0]
 8000a4e:	e7f7      	b.n	8000a40 <__sfp+0x18>
 8000a50:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a54:	b9d5      	cbnz	r5, 8000a8c <__sfp+0x64>
 8000a56:	4b16      	ldr	r3, [pc, #88]	; (8000ab0 <__sfp+0x88>)
 8000a58:	60e3      	str	r3, [r4, #12]
 8000a5a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a5e:	6665      	str	r5, [r4, #100]	; 0x64
 8000a60:	f000 f86c 	bl	8000b3c <__retarget_lock_init_recursive>
 8000a64:	f7ff ff96 	bl	8000994 <__sfp_lock_release>
 8000a68:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a6c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a70:	6025      	str	r5, [r4, #0]
 8000a72:	61a5      	str	r5, [r4, #24]
 8000a74:	2208      	movs	r2, #8
 8000a76:	4629      	mov	r1, r5
 8000a78:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a7c:	f7ff fe6a 	bl	8000754 <memset>
 8000a80:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a84:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a88:	4620      	mov	r0, r4
 8000a8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a8c:	3468      	adds	r4, #104	; 0x68
 8000a8e:	e7d9      	b.n	8000a44 <__sfp+0x1c>
 8000a90:	2104      	movs	r1, #4
 8000a92:	4638      	mov	r0, r7
 8000a94:	f7ff ff62 	bl	800095c <__sfmoreglue>
 8000a98:	4604      	mov	r4, r0
 8000a9a:	6030      	str	r0, [r6, #0]
 8000a9c:	2800      	cmp	r0, #0
 8000a9e:	d1d5      	bne.n	8000a4c <__sfp+0x24>
 8000aa0:	f7ff ff78 	bl	8000994 <__sfp_lock_release>
 8000aa4:	230c      	movs	r3, #12
 8000aa6:	603b      	str	r3, [r7, #0]
 8000aa8:	e7ee      	b.n	8000a88 <__sfp+0x60>
 8000aaa:	bf00      	nop
 8000aac:	08001984 	.word	0x08001984
 8000ab0:	ffff0001 	.word	0xffff0001

08000ab4 <fiprintf>:
 8000ab4:	b40e      	push	{r1, r2, r3}
 8000ab6:	b503      	push	{r0, r1, lr}
 8000ab8:	4601      	mov	r1, r0
 8000aba:	ab03      	add	r3, sp, #12
 8000abc:	4805      	ldr	r0, [pc, #20]	; (8000ad4 <fiprintf+0x20>)
 8000abe:	f853 2b04 	ldr.w	r2, [r3], #4
 8000ac2:	6800      	ldr	r0, [r0, #0]
 8000ac4:	9301      	str	r3, [sp, #4]
 8000ac6:	f000 f915 	bl	8000cf4 <_vfiprintf_r>
 8000aca:	b002      	add	sp, #8
 8000acc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000ad0:	b003      	add	sp, #12
 8000ad2:	4770      	bx	lr
 8000ad4:	20000048 	.word	0x20000048

08000ad8 <_fwalk_reent>:
 8000ad8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000adc:	4606      	mov	r6, r0
 8000ade:	4688      	mov	r8, r1
 8000ae0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000ae4:	2700      	movs	r7, #0
 8000ae6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000aea:	f1b9 0901 	subs.w	r9, r9, #1
 8000aee:	d505      	bpl.n	8000afc <_fwalk_reent+0x24>
 8000af0:	6824      	ldr	r4, [r4, #0]
 8000af2:	2c00      	cmp	r4, #0
 8000af4:	d1f7      	bne.n	8000ae6 <_fwalk_reent+0xe>
 8000af6:	4638      	mov	r0, r7
 8000af8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000afc:	89ab      	ldrh	r3, [r5, #12]
 8000afe:	2b01      	cmp	r3, #1
 8000b00:	d907      	bls.n	8000b12 <_fwalk_reent+0x3a>
 8000b02:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b06:	3301      	adds	r3, #1
 8000b08:	d003      	beq.n	8000b12 <_fwalk_reent+0x3a>
 8000b0a:	4629      	mov	r1, r5
 8000b0c:	4630      	mov	r0, r6
 8000b0e:	47c0      	blx	r8
 8000b10:	4307      	orrs	r7, r0
 8000b12:	3568      	adds	r5, #104	; 0x68
 8000b14:	e7e9      	b.n	8000aea <_fwalk_reent+0x12>
	...

08000b18 <_gettimeofday_r>:
 8000b18:	b538      	push	{r3, r4, r5, lr}
 8000b1a:	4d07      	ldr	r5, [pc, #28]	; (8000b38 <_gettimeofday_r+0x20>)
 8000b1c:	2300      	movs	r3, #0
 8000b1e:	4604      	mov	r4, r0
 8000b20:	4608      	mov	r0, r1
 8000b22:	4611      	mov	r1, r2
 8000b24:	602b      	str	r3, [r5, #0]
 8000b26:	f000 feeb 	bl	8001900 <_gettimeofday>
 8000b2a:	1c43      	adds	r3, r0, #1
 8000b2c:	d102      	bne.n	8000b34 <_gettimeofday_r+0x1c>
 8000b2e:	682b      	ldr	r3, [r5, #0]
 8000b30:	b103      	cbz	r3, 8000b34 <_gettimeofday_r+0x1c>
 8000b32:	6023      	str	r3, [r4, #0]
 8000b34:	bd38      	pop	{r3, r4, r5, pc}
 8000b36:	bf00      	nop
 8000b38:	200000e0 	.word	0x200000e0

08000b3c <__retarget_lock_init_recursive>:
 8000b3c:	4770      	bx	lr

08000b3e <__retarget_lock_acquire_recursive>:
 8000b3e:	4770      	bx	lr

08000b40 <__retarget_lock_release_recursive>:
 8000b40:	4770      	bx	lr
	...

08000b44 <malloc>:
 8000b44:	4b02      	ldr	r3, [pc, #8]	; (8000b50 <malloc+0xc>)
 8000b46:	4601      	mov	r1, r0
 8000b48:	6818      	ldr	r0, [r3, #0]
 8000b4a:	f000 b851 	b.w	8000bf0 <_malloc_r>
 8000b4e:	bf00      	nop
 8000b50:	20000048 	.word	0x20000048

08000b54 <_free_r>:
 8000b54:	b538      	push	{r3, r4, r5, lr}
 8000b56:	4605      	mov	r5, r0
 8000b58:	2900      	cmp	r1, #0
 8000b5a:	d045      	beq.n	8000be8 <_free_r+0x94>
 8000b5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b60:	1f0c      	subs	r4, r1, #4
 8000b62:	2b00      	cmp	r3, #0
 8000b64:	bfb8      	it	lt
 8000b66:	18e4      	addlt	r4, r4, r3
 8000b68:	f000 fe46 	bl	80017f8 <__malloc_lock>
 8000b6c:	4a1f      	ldr	r2, [pc, #124]	; (8000bec <_free_r+0x98>)
 8000b6e:	6813      	ldr	r3, [r2, #0]
 8000b70:	4610      	mov	r0, r2
 8000b72:	b933      	cbnz	r3, 8000b82 <_free_r+0x2e>
 8000b74:	6063      	str	r3, [r4, #4]
 8000b76:	6014      	str	r4, [r2, #0]
 8000b78:	4628      	mov	r0, r5
 8000b7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b7e:	f000 be41 	b.w	8001804 <__malloc_unlock>
 8000b82:	42a3      	cmp	r3, r4
 8000b84:	d90b      	bls.n	8000b9e <_free_r+0x4a>
 8000b86:	6821      	ldr	r1, [r4, #0]
 8000b88:	1862      	adds	r2, r4, r1
 8000b8a:	4293      	cmp	r3, r2
 8000b8c:	bf04      	itt	eq
 8000b8e:	681a      	ldreq	r2, [r3, #0]
 8000b90:	685b      	ldreq	r3, [r3, #4]
 8000b92:	6063      	str	r3, [r4, #4]
 8000b94:	bf04      	itt	eq
 8000b96:	1852      	addeq	r2, r2, r1
 8000b98:	6022      	streq	r2, [r4, #0]
 8000b9a:	6004      	str	r4, [r0, #0]
 8000b9c:	e7ec      	b.n	8000b78 <_free_r+0x24>
 8000b9e:	461a      	mov	r2, r3
 8000ba0:	685b      	ldr	r3, [r3, #4]
 8000ba2:	b10b      	cbz	r3, 8000ba8 <_free_r+0x54>
 8000ba4:	42a3      	cmp	r3, r4
 8000ba6:	d9fa      	bls.n	8000b9e <_free_r+0x4a>
 8000ba8:	6811      	ldr	r1, [r2, #0]
 8000baa:	1850      	adds	r0, r2, r1
 8000bac:	42a0      	cmp	r0, r4
 8000bae:	d10b      	bne.n	8000bc8 <_free_r+0x74>
 8000bb0:	6820      	ldr	r0, [r4, #0]
 8000bb2:	4401      	add	r1, r0
 8000bb4:	1850      	adds	r0, r2, r1
 8000bb6:	4283      	cmp	r3, r0
 8000bb8:	6011      	str	r1, [r2, #0]
 8000bba:	d1dd      	bne.n	8000b78 <_free_r+0x24>
 8000bbc:	6818      	ldr	r0, [r3, #0]
 8000bbe:	685b      	ldr	r3, [r3, #4]
 8000bc0:	6053      	str	r3, [r2, #4]
 8000bc2:	4401      	add	r1, r0
 8000bc4:	6011      	str	r1, [r2, #0]
 8000bc6:	e7d7      	b.n	8000b78 <_free_r+0x24>
 8000bc8:	d902      	bls.n	8000bd0 <_free_r+0x7c>
 8000bca:	230c      	movs	r3, #12
 8000bcc:	602b      	str	r3, [r5, #0]
 8000bce:	e7d3      	b.n	8000b78 <_free_r+0x24>
 8000bd0:	6820      	ldr	r0, [r4, #0]
 8000bd2:	1821      	adds	r1, r4, r0
 8000bd4:	428b      	cmp	r3, r1
 8000bd6:	bf04      	itt	eq
 8000bd8:	6819      	ldreq	r1, [r3, #0]
 8000bda:	685b      	ldreq	r3, [r3, #4]
 8000bdc:	6063      	str	r3, [r4, #4]
 8000bde:	bf04      	itt	eq
 8000be0:	1809      	addeq	r1, r1, r0
 8000be2:	6021      	streq	r1, [r4, #0]
 8000be4:	6054      	str	r4, [r2, #4]
 8000be6:	e7c7      	b.n	8000b78 <_free_r+0x24>
 8000be8:	bd38      	pop	{r3, r4, r5, pc}
 8000bea:	bf00      	nop
 8000bec:	200000cc 	.word	0x200000cc

08000bf0 <_malloc_r>:
 8000bf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bf2:	1ccd      	adds	r5, r1, #3
 8000bf4:	f025 0503 	bic.w	r5, r5, #3
 8000bf8:	3508      	adds	r5, #8
 8000bfa:	2d0c      	cmp	r5, #12
 8000bfc:	bf38      	it	cc
 8000bfe:	250c      	movcc	r5, #12
 8000c00:	2d00      	cmp	r5, #0
 8000c02:	4606      	mov	r6, r0
 8000c04:	db01      	blt.n	8000c0a <_malloc_r+0x1a>
 8000c06:	42a9      	cmp	r1, r5
 8000c08:	d903      	bls.n	8000c12 <_malloc_r+0x22>
 8000c0a:	230c      	movs	r3, #12
 8000c0c:	6033      	str	r3, [r6, #0]
 8000c0e:	2000      	movs	r0, #0
 8000c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c12:	f000 fdf1 	bl	80017f8 <__malloc_lock>
 8000c16:	4921      	ldr	r1, [pc, #132]	; (8000c9c <_malloc_r+0xac>)
 8000c18:	680a      	ldr	r2, [r1, #0]
 8000c1a:	4614      	mov	r4, r2
 8000c1c:	b99c      	cbnz	r4, 8000c46 <_malloc_r+0x56>
 8000c1e:	4f20      	ldr	r7, [pc, #128]	; (8000ca0 <_malloc_r+0xb0>)
 8000c20:	683b      	ldr	r3, [r7, #0]
 8000c22:	b923      	cbnz	r3, 8000c2e <_malloc_r+0x3e>
 8000c24:	4621      	mov	r1, r4
 8000c26:	4630      	mov	r0, r6
 8000c28:	f000 fb70 	bl	800130c <_sbrk_r>
 8000c2c:	6038      	str	r0, [r7, #0]
 8000c2e:	4629      	mov	r1, r5
 8000c30:	4630      	mov	r0, r6
 8000c32:	f000 fb6b 	bl	800130c <_sbrk_r>
 8000c36:	1c43      	adds	r3, r0, #1
 8000c38:	d123      	bne.n	8000c82 <_malloc_r+0x92>
 8000c3a:	230c      	movs	r3, #12
 8000c3c:	6033      	str	r3, [r6, #0]
 8000c3e:	4630      	mov	r0, r6
 8000c40:	f000 fde0 	bl	8001804 <__malloc_unlock>
 8000c44:	e7e3      	b.n	8000c0e <_malloc_r+0x1e>
 8000c46:	6823      	ldr	r3, [r4, #0]
 8000c48:	1b5b      	subs	r3, r3, r5
 8000c4a:	d417      	bmi.n	8000c7c <_malloc_r+0x8c>
 8000c4c:	2b0b      	cmp	r3, #11
 8000c4e:	d903      	bls.n	8000c58 <_malloc_r+0x68>
 8000c50:	6023      	str	r3, [r4, #0]
 8000c52:	441c      	add	r4, r3
 8000c54:	6025      	str	r5, [r4, #0]
 8000c56:	e004      	b.n	8000c62 <_malloc_r+0x72>
 8000c58:	6863      	ldr	r3, [r4, #4]
 8000c5a:	42a2      	cmp	r2, r4
 8000c5c:	bf0c      	ite	eq
 8000c5e:	600b      	streq	r3, [r1, #0]
 8000c60:	6053      	strne	r3, [r2, #4]
 8000c62:	4630      	mov	r0, r6
 8000c64:	f000 fdce 	bl	8001804 <__malloc_unlock>
 8000c68:	f104 000b 	add.w	r0, r4, #11
 8000c6c:	1d23      	adds	r3, r4, #4
 8000c6e:	f020 0007 	bic.w	r0, r0, #7
 8000c72:	1ac2      	subs	r2, r0, r3
 8000c74:	d0cc      	beq.n	8000c10 <_malloc_r+0x20>
 8000c76:	1a1b      	subs	r3, r3, r0
 8000c78:	50a3      	str	r3, [r4, r2]
 8000c7a:	e7c9      	b.n	8000c10 <_malloc_r+0x20>
 8000c7c:	4622      	mov	r2, r4
 8000c7e:	6864      	ldr	r4, [r4, #4]
 8000c80:	e7cc      	b.n	8000c1c <_malloc_r+0x2c>
 8000c82:	1cc4      	adds	r4, r0, #3
 8000c84:	f024 0403 	bic.w	r4, r4, #3
 8000c88:	42a0      	cmp	r0, r4
 8000c8a:	d0e3      	beq.n	8000c54 <_malloc_r+0x64>
 8000c8c:	1a21      	subs	r1, r4, r0
 8000c8e:	4630      	mov	r0, r6
 8000c90:	f000 fb3c 	bl	800130c <_sbrk_r>
 8000c94:	3001      	adds	r0, #1
 8000c96:	d1dd      	bne.n	8000c54 <_malloc_r+0x64>
 8000c98:	e7cf      	b.n	8000c3a <_malloc_r+0x4a>
 8000c9a:	bf00      	nop
 8000c9c:	200000cc 	.word	0x200000cc
 8000ca0:	200000d0 	.word	0x200000d0

08000ca4 <__sfputc_r>:
 8000ca4:	6893      	ldr	r3, [r2, #8]
 8000ca6:	3b01      	subs	r3, #1
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	b410      	push	{r4}
 8000cac:	6093      	str	r3, [r2, #8]
 8000cae:	da07      	bge.n	8000cc0 <__sfputc_r+0x1c>
 8000cb0:	6994      	ldr	r4, [r2, #24]
 8000cb2:	42a3      	cmp	r3, r4
 8000cb4:	db01      	blt.n	8000cba <__sfputc_r+0x16>
 8000cb6:	290a      	cmp	r1, #10
 8000cb8:	d102      	bne.n	8000cc0 <__sfputc_r+0x1c>
 8000cba:	bc10      	pop	{r4}
 8000cbc:	f000 bb7a 	b.w	80013b4 <__swbuf_r>
 8000cc0:	6813      	ldr	r3, [r2, #0]
 8000cc2:	1c58      	adds	r0, r3, #1
 8000cc4:	6010      	str	r0, [r2, #0]
 8000cc6:	7019      	strb	r1, [r3, #0]
 8000cc8:	4608      	mov	r0, r1
 8000cca:	bc10      	pop	{r4}
 8000ccc:	4770      	bx	lr

08000cce <__sfputs_r>:
 8000cce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cd0:	4606      	mov	r6, r0
 8000cd2:	460f      	mov	r7, r1
 8000cd4:	4614      	mov	r4, r2
 8000cd6:	18d5      	adds	r5, r2, r3
 8000cd8:	42ac      	cmp	r4, r5
 8000cda:	d101      	bne.n	8000ce0 <__sfputs_r+0x12>
 8000cdc:	2000      	movs	r0, #0
 8000cde:	e007      	b.n	8000cf0 <__sfputs_r+0x22>
 8000ce0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ce4:	463a      	mov	r2, r7
 8000ce6:	4630      	mov	r0, r6
 8000ce8:	f7ff ffdc 	bl	8000ca4 <__sfputc_r>
 8000cec:	1c43      	adds	r3, r0, #1
 8000cee:	d1f3      	bne.n	8000cd8 <__sfputs_r+0xa>
 8000cf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cf4 <_vfiprintf_r>:
 8000cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cf8:	460d      	mov	r5, r1
 8000cfa:	b09d      	sub	sp, #116	; 0x74
 8000cfc:	4614      	mov	r4, r2
 8000cfe:	4698      	mov	r8, r3
 8000d00:	4606      	mov	r6, r0
 8000d02:	b118      	cbz	r0, 8000d0c <_vfiprintf_r+0x18>
 8000d04:	6983      	ldr	r3, [r0, #24]
 8000d06:	b90b      	cbnz	r3, 8000d0c <_vfiprintf_r+0x18>
 8000d08:	f7ff fe56 	bl	80009b8 <__sinit>
 8000d0c:	4b89      	ldr	r3, [pc, #548]	; (8000f34 <_vfiprintf_r+0x240>)
 8000d0e:	429d      	cmp	r5, r3
 8000d10:	d11b      	bne.n	8000d4a <_vfiprintf_r+0x56>
 8000d12:	6875      	ldr	r5, [r6, #4]
 8000d14:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d16:	07d9      	lsls	r1, r3, #31
 8000d18:	d405      	bmi.n	8000d26 <_vfiprintf_r+0x32>
 8000d1a:	89ab      	ldrh	r3, [r5, #12]
 8000d1c:	059a      	lsls	r2, r3, #22
 8000d1e:	d402      	bmi.n	8000d26 <_vfiprintf_r+0x32>
 8000d20:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d22:	f7ff ff0c 	bl	8000b3e <__retarget_lock_acquire_recursive>
 8000d26:	89ab      	ldrh	r3, [r5, #12]
 8000d28:	071b      	lsls	r3, r3, #28
 8000d2a:	d501      	bpl.n	8000d30 <_vfiprintf_r+0x3c>
 8000d2c:	692b      	ldr	r3, [r5, #16]
 8000d2e:	b9eb      	cbnz	r3, 8000d6c <_vfiprintf_r+0x78>
 8000d30:	4629      	mov	r1, r5
 8000d32:	4630      	mov	r0, r6
 8000d34:	f000 fba2 	bl	800147c <__swsetup_r>
 8000d38:	b1c0      	cbz	r0, 8000d6c <_vfiprintf_r+0x78>
 8000d3a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d3c:	07dc      	lsls	r4, r3, #31
 8000d3e:	d50e      	bpl.n	8000d5e <_vfiprintf_r+0x6a>
 8000d40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d44:	b01d      	add	sp, #116	; 0x74
 8000d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d4a:	4b7b      	ldr	r3, [pc, #492]	; (8000f38 <_vfiprintf_r+0x244>)
 8000d4c:	429d      	cmp	r5, r3
 8000d4e:	d101      	bne.n	8000d54 <_vfiprintf_r+0x60>
 8000d50:	68b5      	ldr	r5, [r6, #8]
 8000d52:	e7df      	b.n	8000d14 <_vfiprintf_r+0x20>
 8000d54:	4b79      	ldr	r3, [pc, #484]	; (8000f3c <_vfiprintf_r+0x248>)
 8000d56:	429d      	cmp	r5, r3
 8000d58:	bf08      	it	eq
 8000d5a:	68f5      	ldreq	r5, [r6, #12]
 8000d5c:	e7da      	b.n	8000d14 <_vfiprintf_r+0x20>
 8000d5e:	89ab      	ldrh	r3, [r5, #12]
 8000d60:	0598      	lsls	r0, r3, #22
 8000d62:	d4ed      	bmi.n	8000d40 <_vfiprintf_r+0x4c>
 8000d64:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d66:	f7ff feeb 	bl	8000b40 <__retarget_lock_release_recursive>
 8000d6a:	e7e9      	b.n	8000d40 <_vfiprintf_r+0x4c>
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	9309      	str	r3, [sp, #36]	; 0x24
 8000d70:	2320      	movs	r3, #32
 8000d72:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d76:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d7a:	2330      	movs	r3, #48	; 0x30
 8000d7c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000f40 <_vfiprintf_r+0x24c>
 8000d80:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d84:	f04f 0901 	mov.w	r9, #1
 8000d88:	4623      	mov	r3, r4
 8000d8a:	469a      	mov	sl, r3
 8000d8c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d90:	b10a      	cbz	r2, 8000d96 <_vfiprintf_r+0xa2>
 8000d92:	2a25      	cmp	r2, #37	; 0x25
 8000d94:	d1f9      	bne.n	8000d8a <_vfiprintf_r+0x96>
 8000d96:	ebba 0b04 	subs.w	fp, sl, r4
 8000d9a:	d00b      	beq.n	8000db4 <_vfiprintf_r+0xc0>
 8000d9c:	465b      	mov	r3, fp
 8000d9e:	4622      	mov	r2, r4
 8000da0:	4629      	mov	r1, r5
 8000da2:	4630      	mov	r0, r6
 8000da4:	f7ff ff93 	bl	8000cce <__sfputs_r>
 8000da8:	3001      	adds	r0, #1
 8000daa:	f000 80aa 	beq.w	8000f02 <_vfiprintf_r+0x20e>
 8000dae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000db0:	445a      	add	r2, fp
 8000db2:	9209      	str	r2, [sp, #36]	; 0x24
 8000db4:	f89a 3000 	ldrb.w	r3, [sl]
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	f000 80a2 	beq.w	8000f02 <_vfiprintf_r+0x20e>
 8000dbe:	2300      	movs	r3, #0
 8000dc0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000dc4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000dc8:	f10a 0a01 	add.w	sl, sl, #1
 8000dcc:	9304      	str	r3, [sp, #16]
 8000dce:	9307      	str	r3, [sp, #28]
 8000dd0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000dd4:	931a      	str	r3, [sp, #104]	; 0x68
 8000dd6:	4654      	mov	r4, sl
 8000dd8:	2205      	movs	r2, #5
 8000dda:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dde:	4858      	ldr	r0, [pc, #352]	; (8000f40 <_vfiprintf_r+0x24c>)
 8000de0:	f7ff fa06 	bl	80001f0 <memchr>
 8000de4:	9a04      	ldr	r2, [sp, #16]
 8000de6:	b9d8      	cbnz	r0, 8000e20 <_vfiprintf_r+0x12c>
 8000de8:	06d1      	lsls	r1, r2, #27
 8000dea:	bf44      	itt	mi
 8000dec:	2320      	movmi	r3, #32
 8000dee:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000df2:	0713      	lsls	r3, r2, #28
 8000df4:	bf44      	itt	mi
 8000df6:	232b      	movmi	r3, #43	; 0x2b
 8000df8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000dfc:	f89a 3000 	ldrb.w	r3, [sl]
 8000e00:	2b2a      	cmp	r3, #42	; 0x2a
 8000e02:	d015      	beq.n	8000e30 <_vfiprintf_r+0x13c>
 8000e04:	9a07      	ldr	r2, [sp, #28]
 8000e06:	4654      	mov	r4, sl
 8000e08:	2000      	movs	r0, #0
 8000e0a:	f04f 0c0a 	mov.w	ip, #10
 8000e0e:	4621      	mov	r1, r4
 8000e10:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e14:	3b30      	subs	r3, #48	; 0x30
 8000e16:	2b09      	cmp	r3, #9
 8000e18:	d94e      	bls.n	8000eb8 <_vfiprintf_r+0x1c4>
 8000e1a:	b1b0      	cbz	r0, 8000e4a <_vfiprintf_r+0x156>
 8000e1c:	9207      	str	r2, [sp, #28]
 8000e1e:	e014      	b.n	8000e4a <_vfiprintf_r+0x156>
 8000e20:	eba0 0308 	sub.w	r3, r0, r8
 8000e24:	fa09 f303 	lsl.w	r3, r9, r3
 8000e28:	4313      	orrs	r3, r2
 8000e2a:	9304      	str	r3, [sp, #16]
 8000e2c:	46a2      	mov	sl, r4
 8000e2e:	e7d2      	b.n	8000dd6 <_vfiprintf_r+0xe2>
 8000e30:	9b03      	ldr	r3, [sp, #12]
 8000e32:	1d19      	adds	r1, r3, #4
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	9103      	str	r1, [sp, #12]
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	bfbb      	ittet	lt
 8000e3c:	425b      	neglt	r3, r3
 8000e3e:	f042 0202 	orrlt.w	r2, r2, #2
 8000e42:	9307      	strge	r3, [sp, #28]
 8000e44:	9307      	strlt	r3, [sp, #28]
 8000e46:	bfb8      	it	lt
 8000e48:	9204      	strlt	r2, [sp, #16]
 8000e4a:	7823      	ldrb	r3, [r4, #0]
 8000e4c:	2b2e      	cmp	r3, #46	; 0x2e
 8000e4e:	d10c      	bne.n	8000e6a <_vfiprintf_r+0x176>
 8000e50:	7863      	ldrb	r3, [r4, #1]
 8000e52:	2b2a      	cmp	r3, #42	; 0x2a
 8000e54:	d135      	bne.n	8000ec2 <_vfiprintf_r+0x1ce>
 8000e56:	9b03      	ldr	r3, [sp, #12]
 8000e58:	1d1a      	adds	r2, r3, #4
 8000e5a:	681b      	ldr	r3, [r3, #0]
 8000e5c:	9203      	str	r2, [sp, #12]
 8000e5e:	2b00      	cmp	r3, #0
 8000e60:	bfb8      	it	lt
 8000e62:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000e66:	3402      	adds	r4, #2
 8000e68:	9305      	str	r3, [sp, #20]
 8000e6a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000f50 <_vfiprintf_r+0x25c>
 8000e6e:	7821      	ldrb	r1, [r4, #0]
 8000e70:	2203      	movs	r2, #3
 8000e72:	4650      	mov	r0, sl
 8000e74:	f7ff f9bc 	bl	80001f0 <memchr>
 8000e78:	b140      	cbz	r0, 8000e8c <_vfiprintf_r+0x198>
 8000e7a:	2340      	movs	r3, #64	; 0x40
 8000e7c:	eba0 000a 	sub.w	r0, r0, sl
 8000e80:	fa03 f000 	lsl.w	r0, r3, r0
 8000e84:	9b04      	ldr	r3, [sp, #16]
 8000e86:	4303      	orrs	r3, r0
 8000e88:	3401      	adds	r4, #1
 8000e8a:	9304      	str	r3, [sp, #16]
 8000e8c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e90:	482c      	ldr	r0, [pc, #176]	; (8000f44 <_vfiprintf_r+0x250>)
 8000e92:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e96:	2206      	movs	r2, #6
 8000e98:	f7ff f9aa 	bl	80001f0 <memchr>
 8000e9c:	2800      	cmp	r0, #0
 8000e9e:	d03f      	beq.n	8000f20 <_vfiprintf_r+0x22c>
 8000ea0:	4b29      	ldr	r3, [pc, #164]	; (8000f48 <_vfiprintf_r+0x254>)
 8000ea2:	bb1b      	cbnz	r3, 8000eec <_vfiprintf_r+0x1f8>
 8000ea4:	9b03      	ldr	r3, [sp, #12]
 8000ea6:	3307      	adds	r3, #7
 8000ea8:	f023 0307 	bic.w	r3, r3, #7
 8000eac:	3308      	adds	r3, #8
 8000eae:	9303      	str	r3, [sp, #12]
 8000eb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000eb2:	443b      	add	r3, r7
 8000eb4:	9309      	str	r3, [sp, #36]	; 0x24
 8000eb6:	e767      	b.n	8000d88 <_vfiprintf_r+0x94>
 8000eb8:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ebc:	460c      	mov	r4, r1
 8000ebe:	2001      	movs	r0, #1
 8000ec0:	e7a5      	b.n	8000e0e <_vfiprintf_r+0x11a>
 8000ec2:	2300      	movs	r3, #0
 8000ec4:	3401      	adds	r4, #1
 8000ec6:	9305      	str	r3, [sp, #20]
 8000ec8:	4619      	mov	r1, r3
 8000eca:	f04f 0c0a 	mov.w	ip, #10
 8000ece:	4620      	mov	r0, r4
 8000ed0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ed4:	3a30      	subs	r2, #48	; 0x30
 8000ed6:	2a09      	cmp	r2, #9
 8000ed8:	d903      	bls.n	8000ee2 <_vfiprintf_r+0x1ee>
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d0c5      	beq.n	8000e6a <_vfiprintf_r+0x176>
 8000ede:	9105      	str	r1, [sp, #20]
 8000ee0:	e7c3      	b.n	8000e6a <_vfiprintf_r+0x176>
 8000ee2:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ee6:	4604      	mov	r4, r0
 8000ee8:	2301      	movs	r3, #1
 8000eea:	e7f0      	b.n	8000ece <_vfiprintf_r+0x1da>
 8000eec:	ab03      	add	r3, sp, #12
 8000eee:	9300      	str	r3, [sp, #0]
 8000ef0:	462a      	mov	r2, r5
 8000ef2:	4b16      	ldr	r3, [pc, #88]	; (8000f4c <_vfiprintf_r+0x258>)
 8000ef4:	a904      	add	r1, sp, #16
 8000ef6:	4630      	mov	r0, r6
 8000ef8:	f3af 8000 	nop.w
 8000efc:	4607      	mov	r7, r0
 8000efe:	1c78      	adds	r0, r7, #1
 8000f00:	d1d6      	bne.n	8000eb0 <_vfiprintf_r+0x1bc>
 8000f02:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f04:	07d9      	lsls	r1, r3, #31
 8000f06:	d405      	bmi.n	8000f14 <_vfiprintf_r+0x220>
 8000f08:	89ab      	ldrh	r3, [r5, #12]
 8000f0a:	059a      	lsls	r2, r3, #22
 8000f0c:	d402      	bmi.n	8000f14 <_vfiprintf_r+0x220>
 8000f0e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f10:	f7ff fe16 	bl	8000b40 <__retarget_lock_release_recursive>
 8000f14:	89ab      	ldrh	r3, [r5, #12]
 8000f16:	065b      	lsls	r3, r3, #25
 8000f18:	f53f af12 	bmi.w	8000d40 <_vfiprintf_r+0x4c>
 8000f1c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000f1e:	e711      	b.n	8000d44 <_vfiprintf_r+0x50>
 8000f20:	ab03      	add	r3, sp, #12
 8000f22:	9300      	str	r3, [sp, #0]
 8000f24:	462a      	mov	r2, r5
 8000f26:	4b09      	ldr	r3, [pc, #36]	; (8000f4c <_vfiprintf_r+0x258>)
 8000f28:	a904      	add	r1, sp, #16
 8000f2a:	4630      	mov	r0, r6
 8000f2c:	f000 f880 	bl	8001030 <_printf_i>
 8000f30:	e7e4      	b.n	8000efc <_vfiprintf_r+0x208>
 8000f32:	bf00      	nop
 8000f34:	08001a5c 	.word	0x08001a5c
 8000f38:	08001a7c 	.word	0x08001a7c
 8000f3c:	08001a3c 	.word	0x08001a3c
 8000f40:	08001a9c 	.word	0x08001a9c
 8000f44:	08001aa6 	.word	0x08001aa6
 8000f48:	00000000 	.word	0x00000000
 8000f4c:	08000ccf 	.word	0x08000ccf
 8000f50:	08001aa2 	.word	0x08001aa2

08000f54 <_printf_common>:
 8000f54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f58:	4616      	mov	r6, r2
 8000f5a:	4699      	mov	r9, r3
 8000f5c:	688a      	ldr	r2, [r1, #8]
 8000f5e:	690b      	ldr	r3, [r1, #16]
 8000f60:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f64:	4293      	cmp	r3, r2
 8000f66:	bfb8      	it	lt
 8000f68:	4613      	movlt	r3, r2
 8000f6a:	6033      	str	r3, [r6, #0]
 8000f6c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f70:	4607      	mov	r7, r0
 8000f72:	460c      	mov	r4, r1
 8000f74:	b10a      	cbz	r2, 8000f7a <_printf_common+0x26>
 8000f76:	3301      	adds	r3, #1
 8000f78:	6033      	str	r3, [r6, #0]
 8000f7a:	6823      	ldr	r3, [r4, #0]
 8000f7c:	0699      	lsls	r1, r3, #26
 8000f7e:	bf42      	ittt	mi
 8000f80:	6833      	ldrmi	r3, [r6, #0]
 8000f82:	3302      	addmi	r3, #2
 8000f84:	6033      	strmi	r3, [r6, #0]
 8000f86:	6825      	ldr	r5, [r4, #0]
 8000f88:	f015 0506 	ands.w	r5, r5, #6
 8000f8c:	d106      	bne.n	8000f9c <_printf_common+0x48>
 8000f8e:	f104 0a19 	add.w	sl, r4, #25
 8000f92:	68e3      	ldr	r3, [r4, #12]
 8000f94:	6832      	ldr	r2, [r6, #0]
 8000f96:	1a9b      	subs	r3, r3, r2
 8000f98:	42ab      	cmp	r3, r5
 8000f9a:	dc26      	bgt.n	8000fea <_printf_common+0x96>
 8000f9c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000fa0:	1e13      	subs	r3, r2, #0
 8000fa2:	6822      	ldr	r2, [r4, #0]
 8000fa4:	bf18      	it	ne
 8000fa6:	2301      	movne	r3, #1
 8000fa8:	0692      	lsls	r2, r2, #26
 8000faa:	d42b      	bmi.n	8001004 <_printf_common+0xb0>
 8000fac:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000fb0:	4649      	mov	r1, r9
 8000fb2:	4638      	mov	r0, r7
 8000fb4:	47c0      	blx	r8
 8000fb6:	3001      	adds	r0, #1
 8000fb8:	d01e      	beq.n	8000ff8 <_printf_common+0xa4>
 8000fba:	6823      	ldr	r3, [r4, #0]
 8000fbc:	68e5      	ldr	r5, [r4, #12]
 8000fbe:	6832      	ldr	r2, [r6, #0]
 8000fc0:	f003 0306 	and.w	r3, r3, #6
 8000fc4:	2b04      	cmp	r3, #4
 8000fc6:	bf08      	it	eq
 8000fc8:	1aad      	subeq	r5, r5, r2
 8000fca:	68a3      	ldr	r3, [r4, #8]
 8000fcc:	6922      	ldr	r2, [r4, #16]
 8000fce:	bf0c      	ite	eq
 8000fd0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000fd4:	2500      	movne	r5, #0
 8000fd6:	4293      	cmp	r3, r2
 8000fd8:	bfc4      	itt	gt
 8000fda:	1a9b      	subgt	r3, r3, r2
 8000fdc:	18ed      	addgt	r5, r5, r3
 8000fde:	2600      	movs	r6, #0
 8000fe0:	341a      	adds	r4, #26
 8000fe2:	42b5      	cmp	r5, r6
 8000fe4:	d11a      	bne.n	800101c <_printf_common+0xc8>
 8000fe6:	2000      	movs	r0, #0
 8000fe8:	e008      	b.n	8000ffc <_printf_common+0xa8>
 8000fea:	2301      	movs	r3, #1
 8000fec:	4652      	mov	r2, sl
 8000fee:	4649      	mov	r1, r9
 8000ff0:	4638      	mov	r0, r7
 8000ff2:	47c0      	blx	r8
 8000ff4:	3001      	adds	r0, #1
 8000ff6:	d103      	bne.n	8001000 <_printf_common+0xac>
 8000ff8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ffc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001000:	3501      	adds	r5, #1
 8001002:	e7c6      	b.n	8000f92 <_printf_common+0x3e>
 8001004:	18e1      	adds	r1, r4, r3
 8001006:	1c5a      	adds	r2, r3, #1
 8001008:	2030      	movs	r0, #48	; 0x30
 800100a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800100e:	4422      	add	r2, r4
 8001010:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001014:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001018:	3302      	adds	r3, #2
 800101a:	e7c7      	b.n	8000fac <_printf_common+0x58>
 800101c:	2301      	movs	r3, #1
 800101e:	4622      	mov	r2, r4
 8001020:	4649      	mov	r1, r9
 8001022:	4638      	mov	r0, r7
 8001024:	47c0      	blx	r8
 8001026:	3001      	adds	r0, #1
 8001028:	d0e6      	beq.n	8000ff8 <_printf_common+0xa4>
 800102a:	3601      	adds	r6, #1
 800102c:	e7d9      	b.n	8000fe2 <_printf_common+0x8e>
	...

08001030 <_printf_i>:
 8001030:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001034:	460c      	mov	r4, r1
 8001036:	4691      	mov	r9, r2
 8001038:	7e27      	ldrb	r7, [r4, #24]
 800103a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800103c:	2f78      	cmp	r7, #120	; 0x78
 800103e:	4680      	mov	r8, r0
 8001040:	469a      	mov	sl, r3
 8001042:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001046:	d807      	bhi.n	8001058 <_printf_i+0x28>
 8001048:	2f62      	cmp	r7, #98	; 0x62
 800104a:	d80a      	bhi.n	8001062 <_printf_i+0x32>
 800104c:	2f00      	cmp	r7, #0
 800104e:	f000 80d8 	beq.w	8001202 <_printf_i+0x1d2>
 8001052:	2f58      	cmp	r7, #88	; 0x58
 8001054:	f000 80a3 	beq.w	800119e <_printf_i+0x16e>
 8001058:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800105c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001060:	e03a      	b.n	80010d8 <_printf_i+0xa8>
 8001062:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001066:	2b15      	cmp	r3, #21
 8001068:	d8f6      	bhi.n	8001058 <_printf_i+0x28>
 800106a:	a001      	add	r0, pc, #4	; (adr r0, 8001070 <_printf_i+0x40>)
 800106c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001070:	080010c9 	.word	0x080010c9
 8001074:	080010dd 	.word	0x080010dd
 8001078:	08001059 	.word	0x08001059
 800107c:	08001059 	.word	0x08001059
 8001080:	08001059 	.word	0x08001059
 8001084:	08001059 	.word	0x08001059
 8001088:	080010dd 	.word	0x080010dd
 800108c:	08001059 	.word	0x08001059
 8001090:	08001059 	.word	0x08001059
 8001094:	08001059 	.word	0x08001059
 8001098:	08001059 	.word	0x08001059
 800109c:	080011e9 	.word	0x080011e9
 80010a0:	0800110d 	.word	0x0800110d
 80010a4:	080011cb 	.word	0x080011cb
 80010a8:	08001059 	.word	0x08001059
 80010ac:	08001059 	.word	0x08001059
 80010b0:	0800120b 	.word	0x0800120b
 80010b4:	08001059 	.word	0x08001059
 80010b8:	0800110d 	.word	0x0800110d
 80010bc:	08001059 	.word	0x08001059
 80010c0:	08001059 	.word	0x08001059
 80010c4:	080011d3 	.word	0x080011d3
 80010c8:	680b      	ldr	r3, [r1, #0]
 80010ca:	1d1a      	adds	r2, r3, #4
 80010cc:	681b      	ldr	r3, [r3, #0]
 80010ce:	600a      	str	r2, [r1, #0]
 80010d0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80010d4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80010d8:	2301      	movs	r3, #1
 80010da:	e0a3      	b.n	8001224 <_printf_i+0x1f4>
 80010dc:	6825      	ldr	r5, [r4, #0]
 80010de:	6808      	ldr	r0, [r1, #0]
 80010e0:	062e      	lsls	r6, r5, #24
 80010e2:	f100 0304 	add.w	r3, r0, #4
 80010e6:	d50a      	bpl.n	80010fe <_printf_i+0xce>
 80010e8:	6805      	ldr	r5, [r0, #0]
 80010ea:	600b      	str	r3, [r1, #0]
 80010ec:	2d00      	cmp	r5, #0
 80010ee:	da03      	bge.n	80010f8 <_printf_i+0xc8>
 80010f0:	232d      	movs	r3, #45	; 0x2d
 80010f2:	426d      	negs	r5, r5
 80010f4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010f8:	485e      	ldr	r0, [pc, #376]	; (8001274 <_printf_i+0x244>)
 80010fa:	230a      	movs	r3, #10
 80010fc:	e019      	b.n	8001132 <_printf_i+0x102>
 80010fe:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001102:	6805      	ldr	r5, [r0, #0]
 8001104:	600b      	str	r3, [r1, #0]
 8001106:	bf18      	it	ne
 8001108:	b22d      	sxthne	r5, r5
 800110a:	e7ef      	b.n	80010ec <_printf_i+0xbc>
 800110c:	680b      	ldr	r3, [r1, #0]
 800110e:	6825      	ldr	r5, [r4, #0]
 8001110:	1d18      	adds	r0, r3, #4
 8001112:	6008      	str	r0, [r1, #0]
 8001114:	0628      	lsls	r0, r5, #24
 8001116:	d501      	bpl.n	800111c <_printf_i+0xec>
 8001118:	681d      	ldr	r5, [r3, #0]
 800111a:	e002      	b.n	8001122 <_printf_i+0xf2>
 800111c:	0669      	lsls	r1, r5, #25
 800111e:	d5fb      	bpl.n	8001118 <_printf_i+0xe8>
 8001120:	881d      	ldrh	r5, [r3, #0]
 8001122:	4854      	ldr	r0, [pc, #336]	; (8001274 <_printf_i+0x244>)
 8001124:	2f6f      	cmp	r7, #111	; 0x6f
 8001126:	bf0c      	ite	eq
 8001128:	2308      	moveq	r3, #8
 800112a:	230a      	movne	r3, #10
 800112c:	2100      	movs	r1, #0
 800112e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001132:	6866      	ldr	r6, [r4, #4]
 8001134:	60a6      	str	r6, [r4, #8]
 8001136:	2e00      	cmp	r6, #0
 8001138:	bfa2      	ittt	ge
 800113a:	6821      	ldrge	r1, [r4, #0]
 800113c:	f021 0104 	bicge.w	r1, r1, #4
 8001140:	6021      	strge	r1, [r4, #0]
 8001142:	b90d      	cbnz	r5, 8001148 <_printf_i+0x118>
 8001144:	2e00      	cmp	r6, #0
 8001146:	d04d      	beq.n	80011e4 <_printf_i+0x1b4>
 8001148:	4616      	mov	r6, r2
 800114a:	fbb5 f1f3 	udiv	r1, r5, r3
 800114e:	fb03 5711 	mls	r7, r3, r1, r5
 8001152:	5dc7      	ldrb	r7, [r0, r7]
 8001154:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001158:	462f      	mov	r7, r5
 800115a:	42bb      	cmp	r3, r7
 800115c:	460d      	mov	r5, r1
 800115e:	d9f4      	bls.n	800114a <_printf_i+0x11a>
 8001160:	2b08      	cmp	r3, #8
 8001162:	d10b      	bne.n	800117c <_printf_i+0x14c>
 8001164:	6823      	ldr	r3, [r4, #0]
 8001166:	07df      	lsls	r7, r3, #31
 8001168:	d508      	bpl.n	800117c <_printf_i+0x14c>
 800116a:	6923      	ldr	r3, [r4, #16]
 800116c:	6861      	ldr	r1, [r4, #4]
 800116e:	4299      	cmp	r1, r3
 8001170:	bfde      	ittt	le
 8001172:	2330      	movle	r3, #48	; 0x30
 8001174:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001178:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 800117c:	1b92      	subs	r2, r2, r6
 800117e:	6122      	str	r2, [r4, #16]
 8001180:	f8cd a000 	str.w	sl, [sp]
 8001184:	464b      	mov	r3, r9
 8001186:	aa03      	add	r2, sp, #12
 8001188:	4621      	mov	r1, r4
 800118a:	4640      	mov	r0, r8
 800118c:	f7ff fee2 	bl	8000f54 <_printf_common>
 8001190:	3001      	adds	r0, #1
 8001192:	d14c      	bne.n	800122e <_printf_i+0x1fe>
 8001194:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001198:	b004      	add	sp, #16
 800119a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800119e:	4835      	ldr	r0, [pc, #212]	; (8001274 <_printf_i+0x244>)
 80011a0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80011a4:	6823      	ldr	r3, [r4, #0]
 80011a6:	680e      	ldr	r6, [r1, #0]
 80011a8:	061f      	lsls	r7, r3, #24
 80011aa:	f856 5b04 	ldr.w	r5, [r6], #4
 80011ae:	600e      	str	r6, [r1, #0]
 80011b0:	d514      	bpl.n	80011dc <_printf_i+0x1ac>
 80011b2:	07d9      	lsls	r1, r3, #31
 80011b4:	bf44      	itt	mi
 80011b6:	f043 0320 	orrmi.w	r3, r3, #32
 80011ba:	6023      	strmi	r3, [r4, #0]
 80011bc:	b91d      	cbnz	r5, 80011c6 <_printf_i+0x196>
 80011be:	6823      	ldr	r3, [r4, #0]
 80011c0:	f023 0320 	bic.w	r3, r3, #32
 80011c4:	6023      	str	r3, [r4, #0]
 80011c6:	2310      	movs	r3, #16
 80011c8:	e7b0      	b.n	800112c <_printf_i+0xfc>
 80011ca:	6823      	ldr	r3, [r4, #0]
 80011cc:	f043 0320 	orr.w	r3, r3, #32
 80011d0:	6023      	str	r3, [r4, #0]
 80011d2:	2378      	movs	r3, #120	; 0x78
 80011d4:	4828      	ldr	r0, [pc, #160]	; (8001278 <_printf_i+0x248>)
 80011d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80011da:	e7e3      	b.n	80011a4 <_printf_i+0x174>
 80011dc:	065e      	lsls	r6, r3, #25
 80011de:	bf48      	it	mi
 80011e0:	b2ad      	uxthmi	r5, r5
 80011e2:	e7e6      	b.n	80011b2 <_printf_i+0x182>
 80011e4:	4616      	mov	r6, r2
 80011e6:	e7bb      	b.n	8001160 <_printf_i+0x130>
 80011e8:	680b      	ldr	r3, [r1, #0]
 80011ea:	6826      	ldr	r6, [r4, #0]
 80011ec:	6960      	ldr	r0, [r4, #20]
 80011ee:	1d1d      	adds	r5, r3, #4
 80011f0:	600d      	str	r5, [r1, #0]
 80011f2:	0635      	lsls	r5, r6, #24
 80011f4:	681b      	ldr	r3, [r3, #0]
 80011f6:	d501      	bpl.n	80011fc <_printf_i+0x1cc>
 80011f8:	6018      	str	r0, [r3, #0]
 80011fa:	e002      	b.n	8001202 <_printf_i+0x1d2>
 80011fc:	0671      	lsls	r1, r6, #25
 80011fe:	d5fb      	bpl.n	80011f8 <_printf_i+0x1c8>
 8001200:	8018      	strh	r0, [r3, #0]
 8001202:	2300      	movs	r3, #0
 8001204:	6123      	str	r3, [r4, #16]
 8001206:	4616      	mov	r6, r2
 8001208:	e7ba      	b.n	8001180 <_printf_i+0x150>
 800120a:	680b      	ldr	r3, [r1, #0]
 800120c:	1d1a      	adds	r2, r3, #4
 800120e:	600a      	str	r2, [r1, #0]
 8001210:	681e      	ldr	r6, [r3, #0]
 8001212:	6862      	ldr	r2, [r4, #4]
 8001214:	2100      	movs	r1, #0
 8001216:	4630      	mov	r0, r6
 8001218:	f7fe ffea 	bl	80001f0 <memchr>
 800121c:	b108      	cbz	r0, 8001222 <_printf_i+0x1f2>
 800121e:	1b80      	subs	r0, r0, r6
 8001220:	6060      	str	r0, [r4, #4]
 8001222:	6863      	ldr	r3, [r4, #4]
 8001224:	6123      	str	r3, [r4, #16]
 8001226:	2300      	movs	r3, #0
 8001228:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800122c:	e7a8      	b.n	8001180 <_printf_i+0x150>
 800122e:	6923      	ldr	r3, [r4, #16]
 8001230:	4632      	mov	r2, r6
 8001232:	4649      	mov	r1, r9
 8001234:	4640      	mov	r0, r8
 8001236:	47d0      	blx	sl
 8001238:	3001      	adds	r0, #1
 800123a:	d0ab      	beq.n	8001194 <_printf_i+0x164>
 800123c:	6823      	ldr	r3, [r4, #0]
 800123e:	079b      	lsls	r3, r3, #30
 8001240:	d413      	bmi.n	800126a <_printf_i+0x23a>
 8001242:	68e0      	ldr	r0, [r4, #12]
 8001244:	9b03      	ldr	r3, [sp, #12]
 8001246:	4298      	cmp	r0, r3
 8001248:	bfb8      	it	lt
 800124a:	4618      	movlt	r0, r3
 800124c:	e7a4      	b.n	8001198 <_printf_i+0x168>
 800124e:	2301      	movs	r3, #1
 8001250:	4632      	mov	r2, r6
 8001252:	4649      	mov	r1, r9
 8001254:	4640      	mov	r0, r8
 8001256:	47d0      	blx	sl
 8001258:	3001      	adds	r0, #1
 800125a:	d09b      	beq.n	8001194 <_printf_i+0x164>
 800125c:	3501      	adds	r5, #1
 800125e:	68e3      	ldr	r3, [r4, #12]
 8001260:	9903      	ldr	r1, [sp, #12]
 8001262:	1a5b      	subs	r3, r3, r1
 8001264:	42ab      	cmp	r3, r5
 8001266:	dcf2      	bgt.n	800124e <_printf_i+0x21e>
 8001268:	e7eb      	b.n	8001242 <_printf_i+0x212>
 800126a:	2500      	movs	r5, #0
 800126c:	f104 0619 	add.w	r6, r4, #25
 8001270:	e7f5      	b.n	800125e <_printf_i+0x22e>
 8001272:	bf00      	nop
 8001274:	08001aad 	.word	0x08001aad
 8001278:	08001abe 	.word	0x08001abe

0800127c <_putc_r>:
 800127c:	b570      	push	{r4, r5, r6, lr}
 800127e:	460d      	mov	r5, r1
 8001280:	4614      	mov	r4, r2
 8001282:	4606      	mov	r6, r0
 8001284:	b118      	cbz	r0, 800128e <_putc_r+0x12>
 8001286:	6983      	ldr	r3, [r0, #24]
 8001288:	b90b      	cbnz	r3, 800128e <_putc_r+0x12>
 800128a:	f7ff fb95 	bl	80009b8 <__sinit>
 800128e:	4b1c      	ldr	r3, [pc, #112]	; (8001300 <_putc_r+0x84>)
 8001290:	429c      	cmp	r4, r3
 8001292:	d124      	bne.n	80012de <_putc_r+0x62>
 8001294:	6874      	ldr	r4, [r6, #4]
 8001296:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001298:	07d8      	lsls	r0, r3, #31
 800129a:	d405      	bmi.n	80012a8 <_putc_r+0x2c>
 800129c:	89a3      	ldrh	r3, [r4, #12]
 800129e:	0599      	lsls	r1, r3, #22
 80012a0:	d402      	bmi.n	80012a8 <_putc_r+0x2c>
 80012a2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012a4:	f7ff fc4b 	bl	8000b3e <__retarget_lock_acquire_recursive>
 80012a8:	68a3      	ldr	r3, [r4, #8]
 80012aa:	3b01      	subs	r3, #1
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	60a3      	str	r3, [r4, #8]
 80012b0:	da05      	bge.n	80012be <_putc_r+0x42>
 80012b2:	69a2      	ldr	r2, [r4, #24]
 80012b4:	4293      	cmp	r3, r2
 80012b6:	db1c      	blt.n	80012f2 <_putc_r+0x76>
 80012b8:	b2eb      	uxtb	r3, r5
 80012ba:	2b0a      	cmp	r3, #10
 80012bc:	d019      	beq.n	80012f2 <_putc_r+0x76>
 80012be:	6823      	ldr	r3, [r4, #0]
 80012c0:	1c5a      	adds	r2, r3, #1
 80012c2:	6022      	str	r2, [r4, #0]
 80012c4:	701d      	strb	r5, [r3, #0]
 80012c6:	b2ed      	uxtb	r5, r5
 80012c8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012ca:	07da      	lsls	r2, r3, #31
 80012cc:	d405      	bmi.n	80012da <_putc_r+0x5e>
 80012ce:	89a3      	ldrh	r3, [r4, #12]
 80012d0:	059b      	lsls	r3, r3, #22
 80012d2:	d402      	bmi.n	80012da <_putc_r+0x5e>
 80012d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012d6:	f7ff fc33 	bl	8000b40 <__retarget_lock_release_recursive>
 80012da:	4628      	mov	r0, r5
 80012dc:	bd70      	pop	{r4, r5, r6, pc}
 80012de:	4b09      	ldr	r3, [pc, #36]	; (8001304 <_putc_r+0x88>)
 80012e0:	429c      	cmp	r4, r3
 80012e2:	d101      	bne.n	80012e8 <_putc_r+0x6c>
 80012e4:	68b4      	ldr	r4, [r6, #8]
 80012e6:	e7d6      	b.n	8001296 <_putc_r+0x1a>
 80012e8:	4b07      	ldr	r3, [pc, #28]	; (8001308 <_putc_r+0x8c>)
 80012ea:	429c      	cmp	r4, r3
 80012ec:	bf08      	it	eq
 80012ee:	68f4      	ldreq	r4, [r6, #12]
 80012f0:	e7d1      	b.n	8001296 <_putc_r+0x1a>
 80012f2:	4629      	mov	r1, r5
 80012f4:	4622      	mov	r2, r4
 80012f6:	4630      	mov	r0, r6
 80012f8:	f000 f85c 	bl	80013b4 <__swbuf_r>
 80012fc:	4605      	mov	r5, r0
 80012fe:	e7e3      	b.n	80012c8 <_putc_r+0x4c>
 8001300:	08001a5c 	.word	0x08001a5c
 8001304:	08001a7c 	.word	0x08001a7c
 8001308:	08001a3c 	.word	0x08001a3c

0800130c <_sbrk_r>:
 800130c:	b538      	push	{r3, r4, r5, lr}
 800130e:	4d06      	ldr	r5, [pc, #24]	; (8001328 <_sbrk_r+0x1c>)
 8001310:	2300      	movs	r3, #0
 8001312:	4604      	mov	r4, r0
 8001314:	4608      	mov	r0, r1
 8001316:	602b      	str	r3, [r5, #0]
 8001318:	f7ff f99c 	bl	8000654 <_sbrk>
 800131c:	1c43      	adds	r3, r0, #1
 800131e:	d102      	bne.n	8001326 <_sbrk_r+0x1a>
 8001320:	682b      	ldr	r3, [r5, #0]
 8001322:	b103      	cbz	r3, 8001326 <_sbrk_r+0x1a>
 8001324:	6023      	str	r3, [r4, #0]
 8001326:	bd38      	pop	{r3, r4, r5, pc}
 8001328:	200000e0 	.word	0x200000e0

0800132c <__sread>:
 800132c:	b510      	push	{r4, lr}
 800132e:	460c      	mov	r4, r1
 8001330:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001334:	f000 fa6c 	bl	8001810 <_read_r>
 8001338:	2800      	cmp	r0, #0
 800133a:	bfab      	itete	ge
 800133c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800133e:	89a3      	ldrhlt	r3, [r4, #12]
 8001340:	181b      	addge	r3, r3, r0
 8001342:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001346:	bfac      	ite	ge
 8001348:	6563      	strge	r3, [r4, #84]	; 0x54
 800134a:	81a3      	strhlt	r3, [r4, #12]
 800134c:	bd10      	pop	{r4, pc}

0800134e <__swrite>:
 800134e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001352:	461f      	mov	r7, r3
 8001354:	898b      	ldrh	r3, [r1, #12]
 8001356:	05db      	lsls	r3, r3, #23
 8001358:	4605      	mov	r5, r0
 800135a:	460c      	mov	r4, r1
 800135c:	4616      	mov	r6, r2
 800135e:	d505      	bpl.n	800136c <__swrite+0x1e>
 8001360:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001364:	2302      	movs	r3, #2
 8001366:	2200      	movs	r2, #0
 8001368:	f000 f9d0 	bl	800170c <_lseek_r>
 800136c:	89a3      	ldrh	r3, [r4, #12]
 800136e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001372:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001376:	81a3      	strh	r3, [r4, #12]
 8001378:	4632      	mov	r2, r6
 800137a:	463b      	mov	r3, r7
 800137c:	4628      	mov	r0, r5
 800137e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001382:	f000 b869 	b.w	8001458 <_write_r>

08001386 <__sseek>:
 8001386:	b510      	push	{r4, lr}
 8001388:	460c      	mov	r4, r1
 800138a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800138e:	f000 f9bd 	bl	800170c <_lseek_r>
 8001392:	1c43      	adds	r3, r0, #1
 8001394:	89a3      	ldrh	r3, [r4, #12]
 8001396:	bf15      	itete	ne
 8001398:	6560      	strne	r0, [r4, #84]	; 0x54
 800139a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800139e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013a2:	81a3      	strheq	r3, [r4, #12]
 80013a4:	bf18      	it	ne
 80013a6:	81a3      	strhne	r3, [r4, #12]
 80013a8:	bd10      	pop	{r4, pc}

080013aa <__sclose>:
 80013aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ae:	f000 b8db 	b.w	8001568 <_close_r>
	...

080013b4 <__swbuf_r>:
 80013b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013b6:	460e      	mov	r6, r1
 80013b8:	4614      	mov	r4, r2
 80013ba:	4605      	mov	r5, r0
 80013bc:	b118      	cbz	r0, 80013c6 <__swbuf_r+0x12>
 80013be:	6983      	ldr	r3, [r0, #24]
 80013c0:	b90b      	cbnz	r3, 80013c6 <__swbuf_r+0x12>
 80013c2:	f7ff faf9 	bl	80009b8 <__sinit>
 80013c6:	4b21      	ldr	r3, [pc, #132]	; (800144c <__swbuf_r+0x98>)
 80013c8:	429c      	cmp	r4, r3
 80013ca:	d12b      	bne.n	8001424 <__swbuf_r+0x70>
 80013cc:	686c      	ldr	r4, [r5, #4]
 80013ce:	69a3      	ldr	r3, [r4, #24]
 80013d0:	60a3      	str	r3, [r4, #8]
 80013d2:	89a3      	ldrh	r3, [r4, #12]
 80013d4:	071a      	lsls	r2, r3, #28
 80013d6:	d52f      	bpl.n	8001438 <__swbuf_r+0x84>
 80013d8:	6923      	ldr	r3, [r4, #16]
 80013da:	b36b      	cbz	r3, 8001438 <__swbuf_r+0x84>
 80013dc:	6923      	ldr	r3, [r4, #16]
 80013de:	6820      	ldr	r0, [r4, #0]
 80013e0:	1ac0      	subs	r0, r0, r3
 80013e2:	6963      	ldr	r3, [r4, #20]
 80013e4:	b2f6      	uxtb	r6, r6
 80013e6:	4283      	cmp	r3, r0
 80013e8:	4637      	mov	r7, r6
 80013ea:	dc04      	bgt.n	80013f6 <__swbuf_r+0x42>
 80013ec:	4621      	mov	r1, r4
 80013ee:	4628      	mov	r0, r5
 80013f0:	f000 f950 	bl	8001694 <_fflush_r>
 80013f4:	bb30      	cbnz	r0, 8001444 <__swbuf_r+0x90>
 80013f6:	68a3      	ldr	r3, [r4, #8]
 80013f8:	3b01      	subs	r3, #1
 80013fa:	60a3      	str	r3, [r4, #8]
 80013fc:	6823      	ldr	r3, [r4, #0]
 80013fe:	1c5a      	adds	r2, r3, #1
 8001400:	6022      	str	r2, [r4, #0]
 8001402:	701e      	strb	r6, [r3, #0]
 8001404:	6963      	ldr	r3, [r4, #20]
 8001406:	3001      	adds	r0, #1
 8001408:	4283      	cmp	r3, r0
 800140a:	d004      	beq.n	8001416 <__swbuf_r+0x62>
 800140c:	89a3      	ldrh	r3, [r4, #12]
 800140e:	07db      	lsls	r3, r3, #31
 8001410:	d506      	bpl.n	8001420 <__swbuf_r+0x6c>
 8001412:	2e0a      	cmp	r6, #10
 8001414:	d104      	bne.n	8001420 <__swbuf_r+0x6c>
 8001416:	4621      	mov	r1, r4
 8001418:	4628      	mov	r0, r5
 800141a:	f000 f93b 	bl	8001694 <_fflush_r>
 800141e:	b988      	cbnz	r0, 8001444 <__swbuf_r+0x90>
 8001420:	4638      	mov	r0, r7
 8001422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001424:	4b0a      	ldr	r3, [pc, #40]	; (8001450 <__swbuf_r+0x9c>)
 8001426:	429c      	cmp	r4, r3
 8001428:	d101      	bne.n	800142e <__swbuf_r+0x7a>
 800142a:	68ac      	ldr	r4, [r5, #8]
 800142c:	e7cf      	b.n	80013ce <__swbuf_r+0x1a>
 800142e:	4b09      	ldr	r3, [pc, #36]	; (8001454 <__swbuf_r+0xa0>)
 8001430:	429c      	cmp	r4, r3
 8001432:	bf08      	it	eq
 8001434:	68ec      	ldreq	r4, [r5, #12]
 8001436:	e7ca      	b.n	80013ce <__swbuf_r+0x1a>
 8001438:	4621      	mov	r1, r4
 800143a:	4628      	mov	r0, r5
 800143c:	f000 f81e 	bl	800147c <__swsetup_r>
 8001440:	2800      	cmp	r0, #0
 8001442:	d0cb      	beq.n	80013dc <__swbuf_r+0x28>
 8001444:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8001448:	e7ea      	b.n	8001420 <__swbuf_r+0x6c>
 800144a:	bf00      	nop
 800144c:	08001a5c 	.word	0x08001a5c
 8001450:	08001a7c 	.word	0x08001a7c
 8001454:	08001a3c 	.word	0x08001a3c

08001458 <_write_r>:
 8001458:	b538      	push	{r3, r4, r5, lr}
 800145a:	4d07      	ldr	r5, [pc, #28]	; (8001478 <_write_r+0x20>)
 800145c:	4604      	mov	r4, r0
 800145e:	4608      	mov	r0, r1
 8001460:	4611      	mov	r1, r2
 8001462:	2200      	movs	r2, #0
 8001464:	602a      	str	r2, [r5, #0]
 8001466:	461a      	mov	r2, r3
 8001468:	f7ff f8a8 	bl	80005bc <_write>
 800146c:	1c43      	adds	r3, r0, #1
 800146e:	d102      	bne.n	8001476 <_write_r+0x1e>
 8001470:	682b      	ldr	r3, [r5, #0]
 8001472:	b103      	cbz	r3, 8001476 <_write_r+0x1e>
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	bd38      	pop	{r3, r4, r5, pc}
 8001478:	200000e0 	.word	0x200000e0

0800147c <__swsetup_r>:
 800147c:	4b32      	ldr	r3, [pc, #200]	; (8001548 <__swsetup_r+0xcc>)
 800147e:	b570      	push	{r4, r5, r6, lr}
 8001480:	681d      	ldr	r5, [r3, #0]
 8001482:	4606      	mov	r6, r0
 8001484:	460c      	mov	r4, r1
 8001486:	b125      	cbz	r5, 8001492 <__swsetup_r+0x16>
 8001488:	69ab      	ldr	r3, [r5, #24]
 800148a:	b913      	cbnz	r3, 8001492 <__swsetup_r+0x16>
 800148c:	4628      	mov	r0, r5
 800148e:	f7ff fa93 	bl	80009b8 <__sinit>
 8001492:	4b2e      	ldr	r3, [pc, #184]	; (800154c <__swsetup_r+0xd0>)
 8001494:	429c      	cmp	r4, r3
 8001496:	d10f      	bne.n	80014b8 <__swsetup_r+0x3c>
 8001498:	686c      	ldr	r4, [r5, #4]
 800149a:	89a3      	ldrh	r3, [r4, #12]
 800149c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80014a0:	0719      	lsls	r1, r3, #28
 80014a2:	d42c      	bmi.n	80014fe <__swsetup_r+0x82>
 80014a4:	06dd      	lsls	r5, r3, #27
 80014a6:	d411      	bmi.n	80014cc <__swsetup_r+0x50>
 80014a8:	2309      	movs	r3, #9
 80014aa:	6033      	str	r3, [r6, #0]
 80014ac:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80014b0:	81a3      	strh	r3, [r4, #12]
 80014b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014b6:	e03e      	b.n	8001536 <__swsetup_r+0xba>
 80014b8:	4b25      	ldr	r3, [pc, #148]	; (8001550 <__swsetup_r+0xd4>)
 80014ba:	429c      	cmp	r4, r3
 80014bc:	d101      	bne.n	80014c2 <__swsetup_r+0x46>
 80014be:	68ac      	ldr	r4, [r5, #8]
 80014c0:	e7eb      	b.n	800149a <__swsetup_r+0x1e>
 80014c2:	4b24      	ldr	r3, [pc, #144]	; (8001554 <__swsetup_r+0xd8>)
 80014c4:	429c      	cmp	r4, r3
 80014c6:	bf08      	it	eq
 80014c8:	68ec      	ldreq	r4, [r5, #12]
 80014ca:	e7e6      	b.n	800149a <__swsetup_r+0x1e>
 80014cc:	0758      	lsls	r0, r3, #29
 80014ce:	d512      	bpl.n	80014f6 <__swsetup_r+0x7a>
 80014d0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80014d2:	b141      	cbz	r1, 80014e6 <__swsetup_r+0x6a>
 80014d4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80014d8:	4299      	cmp	r1, r3
 80014da:	d002      	beq.n	80014e2 <__swsetup_r+0x66>
 80014dc:	4630      	mov	r0, r6
 80014de:	f7ff fb39 	bl	8000b54 <_free_r>
 80014e2:	2300      	movs	r3, #0
 80014e4:	6363      	str	r3, [r4, #52]	; 0x34
 80014e6:	89a3      	ldrh	r3, [r4, #12]
 80014e8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80014ec:	81a3      	strh	r3, [r4, #12]
 80014ee:	2300      	movs	r3, #0
 80014f0:	6063      	str	r3, [r4, #4]
 80014f2:	6923      	ldr	r3, [r4, #16]
 80014f4:	6023      	str	r3, [r4, #0]
 80014f6:	89a3      	ldrh	r3, [r4, #12]
 80014f8:	f043 0308 	orr.w	r3, r3, #8
 80014fc:	81a3      	strh	r3, [r4, #12]
 80014fe:	6923      	ldr	r3, [r4, #16]
 8001500:	b94b      	cbnz	r3, 8001516 <__swsetup_r+0x9a>
 8001502:	89a3      	ldrh	r3, [r4, #12]
 8001504:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001508:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800150c:	d003      	beq.n	8001516 <__swsetup_r+0x9a>
 800150e:	4621      	mov	r1, r4
 8001510:	4630      	mov	r0, r6
 8001512:	f000 f931 	bl	8001778 <__smakebuf_r>
 8001516:	89a0      	ldrh	r0, [r4, #12]
 8001518:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800151c:	f010 0301 	ands.w	r3, r0, #1
 8001520:	d00a      	beq.n	8001538 <__swsetup_r+0xbc>
 8001522:	2300      	movs	r3, #0
 8001524:	60a3      	str	r3, [r4, #8]
 8001526:	6963      	ldr	r3, [r4, #20]
 8001528:	425b      	negs	r3, r3
 800152a:	61a3      	str	r3, [r4, #24]
 800152c:	6923      	ldr	r3, [r4, #16]
 800152e:	b943      	cbnz	r3, 8001542 <__swsetup_r+0xc6>
 8001530:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001534:	d1ba      	bne.n	80014ac <__swsetup_r+0x30>
 8001536:	bd70      	pop	{r4, r5, r6, pc}
 8001538:	0781      	lsls	r1, r0, #30
 800153a:	bf58      	it	pl
 800153c:	6963      	ldrpl	r3, [r4, #20]
 800153e:	60a3      	str	r3, [r4, #8]
 8001540:	e7f4      	b.n	800152c <__swsetup_r+0xb0>
 8001542:	2000      	movs	r0, #0
 8001544:	e7f7      	b.n	8001536 <__swsetup_r+0xba>
 8001546:	bf00      	nop
 8001548:	20000048 	.word	0x20000048
 800154c:	08001a5c 	.word	0x08001a5c
 8001550:	08001a7c 	.word	0x08001a7c
 8001554:	08001a3c 	.word	0x08001a3c

08001558 <abort>:
 8001558:	b508      	push	{r3, lr}
 800155a:	2006      	movs	r0, #6
 800155c:	f000 f992 	bl	8001884 <raise>
 8001560:	2001      	movs	r0, #1
 8001562:	f7ff f804 	bl	800056e <_exit>
	...

08001568 <_close_r>:
 8001568:	b538      	push	{r3, r4, r5, lr}
 800156a:	4d06      	ldr	r5, [pc, #24]	; (8001584 <_close_r+0x1c>)
 800156c:	2300      	movs	r3, #0
 800156e:	4604      	mov	r4, r0
 8001570:	4608      	mov	r0, r1
 8001572:	602b      	str	r3, [r5, #0]
 8001574:	f7ff f83e 	bl	80005f4 <_close>
 8001578:	1c43      	adds	r3, r0, #1
 800157a:	d102      	bne.n	8001582 <_close_r+0x1a>
 800157c:	682b      	ldr	r3, [r5, #0]
 800157e:	b103      	cbz	r3, 8001582 <_close_r+0x1a>
 8001580:	6023      	str	r3, [r4, #0]
 8001582:	bd38      	pop	{r3, r4, r5, pc}
 8001584:	200000e0 	.word	0x200000e0

08001588 <__sflush_r>:
 8001588:	898a      	ldrh	r2, [r1, #12]
 800158a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800158e:	4605      	mov	r5, r0
 8001590:	0710      	lsls	r0, r2, #28
 8001592:	460c      	mov	r4, r1
 8001594:	d458      	bmi.n	8001648 <__sflush_r+0xc0>
 8001596:	684b      	ldr	r3, [r1, #4]
 8001598:	2b00      	cmp	r3, #0
 800159a:	dc05      	bgt.n	80015a8 <__sflush_r+0x20>
 800159c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800159e:	2b00      	cmp	r3, #0
 80015a0:	dc02      	bgt.n	80015a8 <__sflush_r+0x20>
 80015a2:	2000      	movs	r0, #0
 80015a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80015aa:	2e00      	cmp	r6, #0
 80015ac:	d0f9      	beq.n	80015a2 <__sflush_r+0x1a>
 80015ae:	2300      	movs	r3, #0
 80015b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80015b4:	682f      	ldr	r7, [r5, #0]
 80015b6:	602b      	str	r3, [r5, #0]
 80015b8:	d032      	beq.n	8001620 <__sflush_r+0x98>
 80015ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80015bc:	89a3      	ldrh	r3, [r4, #12]
 80015be:	075a      	lsls	r2, r3, #29
 80015c0:	d505      	bpl.n	80015ce <__sflush_r+0x46>
 80015c2:	6863      	ldr	r3, [r4, #4]
 80015c4:	1ac0      	subs	r0, r0, r3
 80015c6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80015c8:	b10b      	cbz	r3, 80015ce <__sflush_r+0x46>
 80015ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80015cc:	1ac0      	subs	r0, r0, r3
 80015ce:	2300      	movs	r3, #0
 80015d0:	4602      	mov	r2, r0
 80015d2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80015d4:	6a21      	ldr	r1, [r4, #32]
 80015d6:	4628      	mov	r0, r5
 80015d8:	47b0      	blx	r6
 80015da:	1c43      	adds	r3, r0, #1
 80015dc:	89a3      	ldrh	r3, [r4, #12]
 80015de:	d106      	bne.n	80015ee <__sflush_r+0x66>
 80015e0:	6829      	ldr	r1, [r5, #0]
 80015e2:	291d      	cmp	r1, #29
 80015e4:	d82c      	bhi.n	8001640 <__sflush_r+0xb8>
 80015e6:	4a2a      	ldr	r2, [pc, #168]	; (8001690 <__sflush_r+0x108>)
 80015e8:	40ca      	lsrs	r2, r1
 80015ea:	07d6      	lsls	r6, r2, #31
 80015ec:	d528      	bpl.n	8001640 <__sflush_r+0xb8>
 80015ee:	2200      	movs	r2, #0
 80015f0:	6062      	str	r2, [r4, #4]
 80015f2:	04d9      	lsls	r1, r3, #19
 80015f4:	6922      	ldr	r2, [r4, #16]
 80015f6:	6022      	str	r2, [r4, #0]
 80015f8:	d504      	bpl.n	8001604 <__sflush_r+0x7c>
 80015fa:	1c42      	adds	r2, r0, #1
 80015fc:	d101      	bne.n	8001602 <__sflush_r+0x7a>
 80015fe:	682b      	ldr	r3, [r5, #0]
 8001600:	b903      	cbnz	r3, 8001604 <__sflush_r+0x7c>
 8001602:	6560      	str	r0, [r4, #84]	; 0x54
 8001604:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001606:	602f      	str	r7, [r5, #0]
 8001608:	2900      	cmp	r1, #0
 800160a:	d0ca      	beq.n	80015a2 <__sflush_r+0x1a>
 800160c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001610:	4299      	cmp	r1, r3
 8001612:	d002      	beq.n	800161a <__sflush_r+0x92>
 8001614:	4628      	mov	r0, r5
 8001616:	f7ff fa9d 	bl	8000b54 <_free_r>
 800161a:	2000      	movs	r0, #0
 800161c:	6360      	str	r0, [r4, #52]	; 0x34
 800161e:	e7c1      	b.n	80015a4 <__sflush_r+0x1c>
 8001620:	6a21      	ldr	r1, [r4, #32]
 8001622:	2301      	movs	r3, #1
 8001624:	4628      	mov	r0, r5
 8001626:	47b0      	blx	r6
 8001628:	1c41      	adds	r1, r0, #1
 800162a:	d1c7      	bne.n	80015bc <__sflush_r+0x34>
 800162c:	682b      	ldr	r3, [r5, #0]
 800162e:	2b00      	cmp	r3, #0
 8001630:	d0c4      	beq.n	80015bc <__sflush_r+0x34>
 8001632:	2b1d      	cmp	r3, #29
 8001634:	d001      	beq.n	800163a <__sflush_r+0xb2>
 8001636:	2b16      	cmp	r3, #22
 8001638:	d101      	bne.n	800163e <__sflush_r+0xb6>
 800163a:	602f      	str	r7, [r5, #0]
 800163c:	e7b1      	b.n	80015a2 <__sflush_r+0x1a>
 800163e:	89a3      	ldrh	r3, [r4, #12]
 8001640:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001644:	81a3      	strh	r3, [r4, #12]
 8001646:	e7ad      	b.n	80015a4 <__sflush_r+0x1c>
 8001648:	690f      	ldr	r7, [r1, #16]
 800164a:	2f00      	cmp	r7, #0
 800164c:	d0a9      	beq.n	80015a2 <__sflush_r+0x1a>
 800164e:	0793      	lsls	r3, r2, #30
 8001650:	680e      	ldr	r6, [r1, #0]
 8001652:	bf08      	it	eq
 8001654:	694b      	ldreq	r3, [r1, #20]
 8001656:	600f      	str	r7, [r1, #0]
 8001658:	bf18      	it	ne
 800165a:	2300      	movne	r3, #0
 800165c:	eba6 0807 	sub.w	r8, r6, r7
 8001660:	608b      	str	r3, [r1, #8]
 8001662:	f1b8 0f00 	cmp.w	r8, #0
 8001666:	dd9c      	ble.n	80015a2 <__sflush_r+0x1a>
 8001668:	6a21      	ldr	r1, [r4, #32]
 800166a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800166c:	4643      	mov	r3, r8
 800166e:	463a      	mov	r2, r7
 8001670:	4628      	mov	r0, r5
 8001672:	47b0      	blx	r6
 8001674:	2800      	cmp	r0, #0
 8001676:	dc06      	bgt.n	8001686 <__sflush_r+0xfe>
 8001678:	89a3      	ldrh	r3, [r4, #12]
 800167a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800167e:	81a3      	strh	r3, [r4, #12]
 8001680:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001684:	e78e      	b.n	80015a4 <__sflush_r+0x1c>
 8001686:	4407      	add	r7, r0
 8001688:	eba8 0800 	sub.w	r8, r8, r0
 800168c:	e7e9      	b.n	8001662 <__sflush_r+0xda>
 800168e:	bf00      	nop
 8001690:	20400001 	.word	0x20400001

08001694 <_fflush_r>:
 8001694:	b538      	push	{r3, r4, r5, lr}
 8001696:	690b      	ldr	r3, [r1, #16]
 8001698:	4605      	mov	r5, r0
 800169a:	460c      	mov	r4, r1
 800169c:	b913      	cbnz	r3, 80016a4 <_fflush_r+0x10>
 800169e:	2500      	movs	r5, #0
 80016a0:	4628      	mov	r0, r5
 80016a2:	bd38      	pop	{r3, r4, r5, pc}
 80016a4:	b118      	cbz	r0, 80016ae <_fflush_r+0x1a>
 80016a6:	6983      	ldr	r3, [r0, #24]
 80016a8:	b90b      	cbnz	r3, 80016ae <_fflush_r+0x1a>
 80016aa:	f7ff f985 	bl	80009b8 <__sinit>
 80016ae:	4b14      	ldr	r3, [pc, #80]	; (8001700 <_fflush_r+0x6c>)
 80016b0:	429c      	cmp	r4, r3
 80016b2:	d11b      	bne.n	80016ec <_fflush_r+0x58>
 80016b4:	686c      	ldr	r4, [r5, #4]
 80016b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	d0ef      	beq.n	800169e <_fflush_r+0xa>
 80016be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80016c0:	07d0      	lsls	r0, r2, #31
 80016c2:	d404      	bmi.n	80016ce <_fflush_r+0x3a>
 80016c4:	0599      	lsls	r1, r3, #22
 80016c6:	d402      	bmi.n	80016ce <_fflush_r+0x3a>
 80016c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80016ca:	f7ff fa38 	bl	8000b3e <__retarget_lock_acquire_recursive>
 80016ce:	4628      	mov	r0, r5
 80016d0:	4621      	mov	r1, r4
 80016d2:	f7ff ff59 	bl	8001588 <__sflush_r>
 80016d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80016d8:	07da      	lsls	r2, r3, #31
 80016da:	4605      	mov	r5, r0
 80016dc:	d4e0      	bmi.n	80016a0 <_fflush_r+0xc>
 80016de:	89a3      	ldrh	r3, [r4, #12]
 80016e0:	059b      	lsls	r3, r3, #22
 80016e2:	d4dd      	bmi.n	80016a0 <_fflush_r+0xc>
 80016e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80016e6:	f7ff fa2b 	bl	8000b40 <__retarget_lock_release_recursive>
 80016ea:	e7d9      	b.n	80016a0 <_fflush_r+0xc>
 80016ec:	4b05      	ldr	r3, [pc, #20]	; (8001704 <_fflush_r+0x70>)
 80016ee:	429c      	cmp	r4, r3
 80016f0:	d101      	bne.n	80016f6 <_fflush_r+0x62>
 80016f2:	68ac      	ldr	r4, [r5, #8]
 80016f4:	e7df      	b.n	80016b6 <_fflush_r+0x22>
 80016f6:	4b04      	ldr	r3, [pc, #16]	; (8001708 <_fflush_r+0x74>)
 80016f8:	429c      	cmp	r4, r3
 80016fa:	bf08      	it	eq
 80016fc:	68ec      	ldreq	r4, [r5, #12]
 80016fe:	e7da      	b.n	80016b6 <_fflush_r+0x22>
 8001700:	08001a5c 	.word	0x08001a5c
 8001704:	08001a7c 	.word	0x08001a7c
 8001708:	08001a3c 	.word	0x08001a3c

0800170c <_lseek_r>:
 800170c:	b538      	push	{r3, r4, r5, lr}
 800170e:	4d07      	ldr	r5, [pc, #28]	; (800172c <_lseek_r+0x20>)
 8001710:	4604      	mov	r4, r0
 8001712:	4608      	mov	r0, r1
 8001714:	4611      	mov	r1, r2
 8001716:	2200      	movs	r2, #0
 8001718:	602a      	str	r2, [r5, #0]
 800171a:	461a      	mov	r2, r3
 800171c:	f7fe ff8e 	bl	800063c <_lseek>
 8001720:	1c43      	adds	r3, r0, #1
 8001722:	d102      	bne.n	800172a <_lseek_r+0x1e>
 8001724:	682b      	ldr	r3, [r5, #0]
 8001726:	b103      	cbz	r3, 800172a <_lseek_r+0x1e>
 8001728:	6023      	str	r3, [r4, #0]
 800172a:	bd38      	pop	{r3, r4, r5, pc}
 800172c:	200000e0 	.word	0x200000e0

08001730 <__swhatbuf_r>:
 8001730:	b570      	push	{r4, r5, r6, lr}
 8001732:	460e      	mov	r6, r1
 8001734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001738:	2900      	cmp	r1, #0
 800173a:	b096      	sub	sp, #88	; 0x58
 800173c:	4614      	mov	r4, r2
 800173e:	461d      	mov	r5, r3
 8001740:	da07      	bge.n	8001752 <__swhatbuf_r+0x22>
 8001742:	2300      	movs	r3, #0
 8001744:	602b      	str	r3, [r5, #0]
 8001746:	89b3      	ldrh	r3, [r6, #12]
 8001748:	061a      	lsls	r2, r3, #24
 800174a:	d410      	bmi.n	800176e <__swhatbuf_r+0x3e>
 800174c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001750:	e00e      	b.n	8001770 <__swhatbuf_r+0x40>
 8001752:	466a      	mov	r2, sp
 8001754:	f000 f8b2 	bl	80018bc <_fstat_r>
 8001758:	2800      	cmp	r0, #0
 800175a:	dbf2      	blt.n	8001742 <__swhatbuf_r+0x12>
 800175c:	9a01      	ldr	r2, [sp, #4]
 800175e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001762:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001766:	425a      	negs	r2, r3
 8001768:	415a      	adcs	r2, r3
 800176a:	602a      	str	r2, [r5, #0]
 800176c:	e7ee      	b.n	800174c <__swhatbuf_r+0x1c>
 800176e:	2340      	movs	r3, #64	; 0x40
 8001770:	2000      	movs	r0, #0
 8001772:	6023      	str	r3, [r4, #0]
 8001774:	b016      	add	sp, #88	; 0x58
 8001776:	bd70      	pop	{r4, r5, r6, pc}

08001778 <__smakebuf_r>:
 8001778:	898b      	ldrh	r3, [r1, #12]
 800177a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800177c:	079d      	lsls	r5, r3, #30
 800177e:	4606      	mov	r6, r0
 8001780:	460c      	mov	r4, r1
 8001782:	d507      	bpl.n	8001794 <__smakebuf_r+0x1c>
 8001784:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001788:	6023      	str	r3, [r4, #0]
 800178a:	6123      	str	r3, [r4, #16]
 800178c:	2301      	movs	r3, #1
 800178e:	6163      	str	r3, [r4, #20]
 8001790:	b002      	add	sp, #8
 8001792:	bd70      	pop	{r4, r5, r6, pc}
 8001794:	ab01      	add	r3, sp, #4
 8001796:	466a      	mov	r2, sp
 8001798:	f7ff ffca 	bl	8001730 <__swhatbuf_r>
 800179c:	9900      	ldr	r1, [sp, #0]
 800179e:	4605      	mov	r5, r0
 80017a0:	4630      	mov	r0, r6
 80017a2:	f7ff fa25 	bl	8000bf0 <_malloc_r>
 80017a6:	b948      	cbnz	r0, 80017bc <__smakebuf_r+0x44>
 80017a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80017ac:	059a      	lsls	r2, r3, #22
 80017ae:	d4ef      	bmi.n	8001790 <__smakebuf_r+0x18>
 80017b0:	f023 0303 	bic.w	r3, r3, #3
 80017b4:	f043 0302 	orr.w	r3, r3, #2
 80017b8:	81a3      	strh	r3, [r4, #12]
 80017ba:	e7e3      	b.n	8001784 <__smakebuf_r+0xc>
 80017bc:	4b0d      	ldr	r3, [pc, #52]	; (80017f4 <__smakebuf_r+0x7c>)
 80017be:	62b3      	str	r3, [r6, #40]	; 0x28
 80017c0:	89a3      	ldrh	r3, [r4, #12]
 80017c2:	6020      	str	r0, [r4, #0]
 80017c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80017c8:	81a3      	strh	r3, [r4, #12]
 80017ca:	9b00      	ldr	r3, [sp, #0]
 80017cc:	6163      	str	r3, [r4, #20]
 80017ce:	9b01      	ldr	r3, [sp, #4]
 80017d0:	6120      	str	r0, [r4, #16]
 80017d2:	b15b      	cbz	r3, 80017ec <__smakebuf_r+0x74>
 80017d4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80017d8:	4630      	mov	r0, r6
 80017da:	f000 f881 	bl	80018e0 <_isatty_r>
 80017de:	b128      	cbz	r0, 80017ec <__smakebuf_r+0x74>
 80017e0:	89a3      	ldrh	r3, [r4, #12]
 80017e2:	f023 0303 	bic.w	r3, r3, #3
 80017e6:	f043 0301 	orr.w	r3, r3, #1
 80017ea:	81a3      	strh	r3, [r4, #12]
 80017ec:	89a0      	ldrh	r0, [r4, #12]
 80017ee:	4305      	orrs	r5, r0
 80017f0:	81a5      	strh	r5, [r4, #12]
 80017f2:	e7cd      	b.n	8001790 <__smakebuf_r+0x18>
 80017f4:	08000951 	.word	0x08000951

080017f8 <__malloc_lock>:
 80017f8:	4801      	ldr	r0, [pc, #4]	; (8001800 <__malloc_lock+0x8>)
 80017fa:	f7ff b9a0 	b.w	8000b3e <__retarget_lock_acquire_recursive>
 80017fe:	bf00      	nop
 8001800:	200000d8 	.word	0x200000d8

08001804 <__malloc_unlock>:
 8001804:	4801      	ldr	r0, [pc, #4]	; (800180c <__malloc_unlock+0x8>)
 8001806:	f7ff b99b 	b.w	8000b40 <__retarget_lock_release_recursive>
 800180a:	bf00      	nop
 800180c:	200000d8 	.word	0x200000d8

08001810 <_read_r>:
 8001810:	b538      	push	{r3, r4, r5, lr}
 8001812:	4d07      	ldr	r5, [pc, #28]	; (8001830 <_read_r+0x20>)
 8001814:	4604      	mov	r4, r0
 8001816:	4608      	mov	r0, r1
 8001818:	4611      	mov	r1, r2
 800181a:	2200      	movs	r2, #0
 800181c:	602a      	str	r2, [r5, #0]
 800181e:	461a      	mov	r2, r3
 8001820:	f7fe feaf 	bl	8000582 <_read>
 8001824:	1c43      	adds	r3, r0, #1
 8001826:	d102      	bne.n	800182e <_read_r+0x1e>
 8001828:	682b      	ldr	r3, [r5, #0]
 800182a:	b103      	cbz	r3, 800182e <_read_r+0x1e>
 800182c:	6023      	str	r3, [r4, #0]
 800182e:	bd38      	pop	{r3, r4, r5, pc}
 8001830:	200000e0 	.word	0x200000e0

08001834 <_raise_r>:
 8001834:	291f      	cmp	r1, #31
 8001836:	b538      	push	{r3, r4, r5, lr}
 8001838:	4604      	mov	r4, r0
 800183a:	460d      	mov	r5, r1
 800183c:	d904      	bls.n	8001848 <_raise_r+0x14>
 800183e:	2316      	movs	r3, #22
 8001840:	6003      	str	r3, [r0, #0]
 8001842:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001846:	bd38      	pop	{r3, r4, r5, pc}
 8001848:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800184a:	b112      	cbz	r2, 8001852 <_raise_r+0x1e>
 800184c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001850:	b94b      	cbnz	r3, 8001866 <_raise_r+0x32>
 8001852:	4620      	mov	r0, r4
 8001854:	f000 f830 	bl	80018b8 <_getpid_r>
 8001858:	462a      	mov	r2, r5
 800185a:	4601      	mov	r1, r0
 800185c:	4620      	mov	r0, r4
 800185e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001862:	f000 b817 	b.w	8001894 <_kill_r>
 8001866:	2b01      	cmp	r3, #1
 8001868:	d00a      	beq.n	8001880 <_raise_r+0x4c>
 800186a:	1c59      	adds	r1, r3, #1
 800186c:	d103      	bne.n	8001876 <_raise_r+0x42>
 800186e:	2316      	movs	r3, #22
 8001870:	6003      	str	r3, [r0, #0]
 8001872:	2001      	movs	r0, #1
 8001874:	e7e7      	b.n	8001846 <_raise_r+0x12>
 8001876:	2400      	movs	r4, #0
 8001878:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800187c:	4628      	mov	r0, r5
 800187e:	4798      	blx	r3
 8001880:	2000      	movs	r0, #0
 8001882:	e7e0      	b.n	8001846 <_raise_r+0x12>

08001884 <raise>:
 8001884:	4b02      	ldr	r3, [pc, #8]	; (8001890 <raise+0xc>)
 8001886:	4601      	mov	r1, r0
 8001888:	6818      	ldr	r0, [r3, #0]
 800188a:	f7ff bfd3 	b.w	8001834 <_raise_r>
 800188e:	bf00      	nop
 8001890:	20000048 	.word	0x20000048

08001894 <_kill_r>:
 8001894:	b538      	push	{r3, r4, r5, lr}
 8001896:	4d07      	ldr	r5, [pc, #28]	; (80018b4 <_kill_r+0x20>)
 8001898:	2300      	movs	r3, #0
 800189a:	4604      	mov	r4, r0
 800189c:	4608      	mov	r0, r1
 800189e:	4611      	mov	r1, r2
 80018a0:	602b      	str	r3, [r5, #0]
 80018a2:	f7fe fe54 	bl	800054e <_kill>
 80018a6:	1c43      	adds	r3, r0, #1
 80018a8:	d102      	bne.n	80018b0 <_kill_r+0x1c>
 80018aa:	682b      	ldr	r3, [r5, #0]
 80018ac:	b103      	cbz	r3, 80018b0 <_kill_r+0x1c>
 80018ae:	6023      	str	r3, [r4, #0]
 80018b0:	bd38      	pop	{r3, r4, r5, pc}
 80018b2:	bf00      	nop
 80018b4:	200000e0 	.word	0x200000e0

080018b8 <_getpid_r>:
 80018b8:	f7fe be42 	b.w	8000540 <_getpid>

080018bc <_fstat_r>:
 80018bc:	b538      	push	{r3, r4, r5, lr}
 80018be:	4d07      	ldr	r5, [pc, #28]	; (80018dc <_fstat_r+0x20>)
 80018c0:	2300      	movs	r3, #0
 80018c2:	4604      	mov	r4, r0
 80018c4:	4608      	mov	r0, r1
 80018c6:	4611      	mov	r1, r2
 80018c8:	602b      	str	r3, [r5, #0]
 80018ca:	f7fe fe9e 	bl	800060a <_fstat>
 80018ce:	1c43      	adds	r3, r0, #1
 80018d0:	d102      	bne.n	80018d8 <_fstat_r+0x1c>
 80018d2:	682b      	ldr	r3, [r5, #0]
 80018d4:	b103      	cbz	r3, 80018d8 <_fstat_r+0x1c>
 80018d6:	6023      	str	r3, [r4, #0]
 80018d8:	bd38      	pop	{r3, r4, r5, pc}
 80018da:	bf00      	nop
 80018dc:	200000e0 	.word	0x200000e0

080018e0 <_isatty_r>:
 80018e0:	b538      	push	{r3, r4, r5, lr}
 80018e2:	4d06      	ldr	r5, [pc, #24]	; (80018fc <_isatty_r+0x1c>)
 80018e4:	2300      	movs	r3, #0
 80018e6:	4604      	mov	r4, r0
 80018e8:	4608      	mov	r0, r1
 80018ea:	602b      	str	r3, [r5, #0]
 80018ec:	f7fe fe9c 	bl	8000628 <_isatty>
 80018f0:	1c43      	adds	r3, r0, #1
 80018f2:	d102      	bne.n	80018fa <_isatty_r+0x1a>
 80018f4:	682b      	ldr	r3, [r5, #0]
 80018f6:	b103      	cbz	r3, 80018fa <_isatty_r+0x1a>
 80018f8:	6023      	str	r3, [r4, #0]
 80018fa:	bd38      	pop	{r3, r4, r5, pc}
 80018fc:	200000e0 	.word	0x200000e0

08001900 <_gettimeofday>:
 8001900:	4b02      	ldr	r3, [pc, #8]	; (800190c <_gettimeofday+0xc>)
 8001902:	2258      	movs	r2, #88	; 0x58
 8001904:	601a      	str	r2, [r3, #0]
 8001906:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800190a:	4770      	bx	lr
 800190c:	200000e0 	.word	0x200000e0

08001910 <_init>:
 8001910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001912:	bf00      	nop
 8001914:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001916:	bc08      	pop	{r3}
 8001918:	469e      	mov	lr, r3
 800191a:	4770      	bx	lr

0800191c <_fini>:
 800191c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800191e:	bf00      	nop
 8001920:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001922:	bc08      	pop	{r3}
 8001924:	469e      	mov	lr, r3
 8001926:	4770      	bx	lr
