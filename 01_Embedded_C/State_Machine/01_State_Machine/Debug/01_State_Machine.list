
01_State_Machine.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000ccc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d0  08000e74  08000e74  00010e74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000f44  08000f44  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08000f44  08000f44  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000f44  08000f44  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000f44  08000f44  00010f44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000f48  08000f48  00010f48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08000f4c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000040  20000070  08000fbc  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000b0  08000fbc  000200b0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   000023ca  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000069d  00000000  00000000  0002246a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00022b08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  00022c40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bb1  00000000  00000000  00022d40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001519  00000000  00000000  000258f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000097a0  00000000  00000000  00026e0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000305aa  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a70  00000000  00000000  00030600  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000070 	.word	0x20000070
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000e5c 	.word	0x08000e5c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000074 	.word	0x20000074
 80001e4:	08000e5c 	.word	0x08000e5c

080001e8 <main>:

static State_Type current_state;
static int Clock;


int main(){
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0

	//printf("Hello world\n\t");
	//for(;;);
	while(1){
		state_table[current_state]();
 80001ec:	4b06      	ldr	r3, [pc, #24]	; (8000208 <main+0x20>)
 80001ee:	781b      	ldrb	r3, [r3, #0]
 80001f0:	461a      	mov	r2, r3
 80001f2:	4b06      	ldr	r3, [pc, #24]	; (800020c <main+0x24>)
 80001f4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80001f8:	4798      	blx	r3
		Clock++;
 80001fa:	4b05      	ldr	r3, [pc, #20]	; (8000210 <main+0x28>)
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	3301      	adds	r3, #1
 8000200:	4a03      	ldr	r2, [pc, #12]	; (8000210 <main+0x28>)
 8000202:	6013      	str	r3, [r2, #0]
		state_table[current_state]();
 8000204:	e7f2      	b.n	80001ec <main+0x4>
 8000206:	bf00      	nop
 8000208:	2000008c 	.word	0x2000008c
 800020c:	20000000 	.word	0x20000000
 8000210:	20000090 	.word	0x20000090

08000214 <state_a_function>:
	current_state = STATE_A;
	Clock = 0 ;

}

void state_a_function(void){
 8000214:	b580      	push	{r7, lr}
 8000216:	af00      	add	r7, sp, #0
	if(Clock ==2){
 8000218:	4b05      	ldr	r3, [pc, #20]	; (8000230 <state_a_function+0x1c>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	2b02      	cmp	r3, #2
 800021e:	d105      	bne.n	800022c <state_a_function+0x18>
		current_state = STATE_B;
 8000220:	4b04      	ldr	r3, [pc, #16]	; (8000234 <state_a_function+0x20>)
 8000222:	2201      	movs	r2, #1
 8000224:	701a      	strb	r2, [r3, #0]
		printf("This is the execution of STATE A \n");
 8000226:	4804      	ldr	r0, [pc, #16]	; (8000238 <state_a_function+0x24>)
 8000228:	f000 f9c0 	bl	80005ac <puts>
	}
}
 800022c:	bf00      	nop
 800022e:	bd80      	pop	{r7, pc}
 8000230:	20000090 	.word	0x20000090
 8000234:	2000008c 	.word	0x2000008c
 8000238:	08000e74 	.word	0x08000e74

0800023c <state_b_function>:

void state_b_function(void){
 800023c:	b580      	push	{r7, lr}
 800023e:	af00      	add	r7, sp, #0
	if(Clock == 5){
 8000240:	4b05      	ldr	r3, [pc, #20]	; (8000258 <state_b_function+0x1c>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	2b05      	cmp	r3, #5
 8000246:	d105      	bne.n	8000254 <state_b_function+0x18>
		current_state = STATE_C;
 8000248:	4b04      	ldr	r3, [pc, #16]	; (800025c <state_b_function+0x20>)
 800024a:	2202      	movs	r2, #2
 800024c:	701a      	strb	r2, [r3, #0]
		printf("This is the execution of STATE B \n");
 800024e:	4804      	ldr	r0, [pc, #16]	; (8000260 <state_b_function+0x24>)
 8000250:	f000 f9ac 	bl	80005ac <puts>
	}
}
 8000254:	bf00      	nop
 8000256:	bd80      	pop	{r7, pc}
 8000258:	20000090 	.word	0x20000090
 800025c:	2000008c 	.word	0x2000008c
 8000260:	08000e98 	.word	0x08000e98

08000264 <state_c_function>:

void state_c_function(void){
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	if(Clock == 9){
 8000268:	4b07      	ldr	r3, [pc, #28]	; (8000288 <state_c_function+0x24>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b09      	cmp	r3, #9
 800026e:	d108      	bne.n	8000282 <state_c_function+0x1e>
		Clock = 0;
 8000270:	4b05      	ldr	r3, [pc, #20]	; (8000288 <state_c_function+0x24>)
 8000272:	2200      	movs	r2, #0
 8000274:	601a      	str	r2, [r3, #0]
		current_state = STATE_A;
 8000276:	4b05      	ldr	r3, [pc, #20]	; (800028c <state_c_function+0x28>)
 8000278:	2200      	movs	r2, #0
 800027a:	701a      	strb	r2, [r3, #0]
		printf("This is the execution of STATE C \n");
 800027c:	4804      	ldr	r0, [pc, #16]	; (8000290 <state_c_function+0x2c>)
 800027e:	f000 f995 	bl	80005ac <puts>
	}
}
 8000282:	bf00      	nop
 8000284:	bd80      	pop	{r7, pc}
 8000286:	bf00      	nop
 8000288:	20000090 	.word	0x20000090
 800028c:	2000008c 	.word	0x2000008c
 8000290:	08000ebc 	.word	0x08000ebc

08000294 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000294:	b480      	push	{r7}
 8000296:	b083      	sub	sp, #12
 8000298:	af00      	add	r7, sp, #0
 800029a:	4603      	mov	r3, r0
 800029c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800029e:	4b0f      	ldr	r3, [pc, #60]	; (80002dc <ITM_SendChar+0x48>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	4a0e      	ldr	r2, [pc, #56]	; (80002dc <ITM_SendChar+0x48>)
 80002a4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002a8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002aa:	4b0d      	ldr	r3, [pc, #52]	; (80002e0 <ITM_SendChar+0x4c>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	4a0c      	ldr	r2, [pc, #48]	; (80002e0 <ITM_SendChar+0x4c>)
 80002b0:	f043 0301 	orr.w	r3, r3, #1
 80002b4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002b6:	bf00      	nop
 80002b8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f003 0301 	and.w	r3, r3, #1
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f8      	beq.n	80002b8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002c6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002ca:	79fb      	ldrb	r3, [r7, #7]
 80002cc:	6013      	str	r3, [r2, #0]
}
 80002ce:	bf00      	nop
 80002d0:	370c      	adds	r7, #12
 80002d2:	46bd      	mov	sp, r7
 80002d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop
 80002dc:	e000edfc 	.word	0xe000edfc
 80002e0:	e0000e00 	.word	0xe0000e00

080002e4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b086      	sub	sp, #24
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	60f8      	str	r0, [r7, #12]
 80002ec:	60b9      	str	r1, [r7, #8]
 80002ee:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f0:	2300      	movs	r3, #0
 80002f2:	617b      	str	r3, [r7, #20]
 80002f4:	e00a      	b.n	800030c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002f6:	f3af 8000 	nop.w
 80002fa:	4601      	mov	r1, r0
 80002fc:	68bb      	ldr	r3, [r7, #8]
 80002fe:	1c5a      	adds	r2, r3, #1
 8000300:	60ba      	str	r2, [r7, #8]
 8000302:	b2ca      	uxtb	r2, r1
 8000304:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000306:	697b      	ldr	r3, [r7, #20]
 8000308:	3301      	adds	r3, #1
 800030a:	617b      	str	r3, [r7, #20]
 800030c:	697a      	ldr	r2, [r7, #20]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	429a      	cmp	r2, r3
 8000312:	dbf0      	blt.n	80002f6 <_read+0x12>
	}

return len;
 8000314:	687b      	ldr	r3, [r7, #4]
}
 8000316:	4618      	mov	r0, r3
 8000318:	3718      	adds	r7, #24
 800031a:	46bd      	mov	sp, r7
 800031c:	bd80      	pop	{r7, pc}

0800031e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800031e:	b580      	push	{r7, lr}
 8000320:	b086      	sub	sp, #24
 8000322:	af00      	add	r7, sp, #0
 8000324:	60f8      	str	r0, [r7, #12]
 8000326:	60b9      	str	r1, [r7, #8]
 8000328:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032a:	2300      	movs	r3, #0
 800032c:	617b      	str	r3, [r7, #20]
 800032e:	e009      	b.n	8000344 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000330:	68bb      	ldr	r3, [r7, #8]
 8000332:	1c5a      	adds	r2, r3, #1
 8000334:	60ba      	str	r2, [r7, #8]
 8000336:	781b      	ldrb	r3, [r3, #0]
 8000338:	4618      	mov	r0, r3
 800033a:	f7ff ffab 	bl	8000294 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033e:	697b      	ldr	r3, [r7, #20]
 8000340:	3301      	adds	r3, #1
 8000342:	617b      	str	r3, [r7, #20]
 8000344:	697a      	ldr	r2, [r7, #20]
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	429a      	cmp	r2, r3
 800034a:	dbf1      	blt.n	8000330 <_write+0x12>
	}
	return len;
 800034c:	687b      	ldr	r3, [r7, #4]
}
 800034e:	4618      	mov	r0, r3
 8000350:	3718      	adds	r7, #24
 8000352:	46bd      	mov	sp, r7
 8000354:	bd80      	pop	{r7, pc}

08000356 <_close>:

int _close(int file)
{
 8000356:	b480      	push	{r7}
 8000358:	b083      	sub	sp, #12
 800035a:	af00      	add	r7, sp, #0
 800035c:	6078      	str	r0, [r7, #4]
	return -1;
 800035e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000362:	4618      	mov	r0, r3
 8000364:	370c      	adds	r7, #12
 8000366:	46bd      	mov	sp, r7
 8000368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036c:	4770      	bx	lr

0800036e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800036e:	b480      	push	{r7}
 8000370:	b083      	sub	sp, #12
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
 8000376:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000378:	683b      	ldr	r3, [r7, #0]
 800037a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800037e:	605a      	str	r2, [r3, #4]
	return 0;
 8000380:	2300      	movs	r3, #0
}
 8000382:	4618      	mov	r0, r3
 8000384:	370c      	adds	r7, #12
 8000386:	46bd      	mov	sp, r7
 8000388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038c:	4770      	bx	lr

0800038e <_isatty>:

int _isatty(int file)
{
 800038e:	b480      	push	{r7}
 8000390:	b083      	sub	sp, #12
 8000392:	af00      	add	r7, sp, #0
 8000394:	6078      	str	r0, [r7, #4]
	return 1;
 8000396:	2301      	movs	r3, #1
}
 8000398:	4618      	mov	r0, r3
 800039a:	370c      	adds	r7, #12
 800039c:	46bd      	mov	sp, r7
 800039e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a2:	4770      	bx	lr

080003a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b085      	sub	sp, #20
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	60f8      	str	r0, [r7, #12]
 80003ac:	60b9      	str	r1, [r7, #8]
 80003ae:	607a      	str	r2, [r7, #4]
	return 0;
 80003b0:	2300      	movs	r3, #0
}
 80003b2:	4618      	mov	r0, r3
 80003b4:	3714      	adds	r7, #20
 80003b6:	46bd      	mov	sp, r7
 80003b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003bc:	4770      	bx	lr
	...

080003c0 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b084      	sub	sp, #16
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003c8:	4b11      	ldr	r3, [pc, #68]	; (8000410 <_sbrk+0x50>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	2b00      	cmp	r3, #0
 80003ce:	d102      	bne.n	80003d6 <_sbrk+0x16>
		heap_end = &end;
 80003d0:	4b0f      	ldr	r3, [pc, #60]	; (8000410 <_sbrk+0x50>)
 80003d2:	4a10      	ldr	r2, [pc, #64]	; (8000414 <_sbrk+0x54>)
 80003d4:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003d6:	4b0e      	ldr	r3, [pc, #56]	; (8000410 <_sbrk+0x50>)
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003dc:	4b0c      	ldr	r3, [pc, #48]	; (8000410 <_sbrk+0x50>)
 80003de:	681a      	ldr	r2, [r3, #0]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4413      	add	r3, r2
 80003e4:	466a      	mov	r2, sp
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d907      	bls.n	80003fa <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80003ea:	f000 f83f 	bl	800046c <__errno>
 80003ee:	4603      	mov	r3, r0
 80003f0:	220c      	movs	r2, #12
 80003f2:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 80003f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80003f8:	e006      	b.n	8000408 <_sbrk+0x48>
	}

	heap_end += incr;
 80003fa:	4b05      	ldr	r3, [pc, #20]	; (8000410 <_sbrk+0x50>)
 80003fc:	681a      	ldr	r2, [r3, #0]
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	4413      	add	r3, r2
 8000402:	4a03      	ldr	r2, [pc, #12]	; (8000410 <_sbrk+0x50>)
 8000404:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000406:	68fb      	ldr	r3, [r7, #12]
}
 8000408:	4618      	mov	r0, r3
 800040a:	3710      	adds	r7, #16
 800040c:	46bd      	mov	sp, r7
 800040e:	bd80      	pop	{r7, pc}
 8000410:	20000094 	.word	0x20000094
 8000414:	200000b0 	.word	0x200000b0

08000418 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000418:	480d      	ldr	r0, [pc, #52]	; (8000450 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800041a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800041c:	480d      	ldr	r0, [pc, #52]	; (8000454 <LoopForever+0x6>)
  ldr r1, =_edata
 800041e:	490e      	ldr	r1, [pc, #56]	; (8000458 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000420:	4a0e      	ldr	r2, [pc, #56]	; (800045c <LoopForever+0xe>)
  movs r3, #0
 8000422:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000424:	e002      	b.n	800042c <LoopCopyDataInit>

08000426 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000426:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000428:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800042a:	3304      	adds	r3, #4

0800042c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800042c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800042e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000430:	d3f9      	bcc.n	8000426 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000432:	4a0b      	ldr	r2, [pc, #44]	; (8000460 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000434:	4c0b      	ldr	r4, [pc, #44]	; (8000464 <LoopForever+0x16>)
  movs r3, #0
 8000436:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000438:	e001      	b.n	800043e <LoopFillZerobss>

0800043a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800043a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800043c:	3204      	adds	r2, #4

0800043e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800043e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000440:	d3fb      	bcc.n	800043a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000442:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000446:	f000 f817 	bl	8000478 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800044a:	f7ff fecd 	bl	80001e8 <main>

0800044e <LoopForever>:

LoopForever:
    b LoopForever
 800044e:	e7fe      	b.n	800044e <LoopForever>
  ldr   r0, =_estack
 8000450:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000454:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000458:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 800045c:	08000f4c 	.word	0x08000f4c
  ldr r2, =_sbss
 8000460:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000464:	200000b0 	.word	0x200000b0

08000468 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000468:	e7fe      	b.n	8000468 <ADC_IRQHandler>
	...

0800046c <__errno>:
 800046c:	4b01      	ldr	r3, [pc, #4]	; (8000474 <__errno+0x8>)
 800046e:	6818      	ldr	r0, [r3, #0]
 8000470:	4770      	bx	lr
 8000472:	bf00      	nop
 8000474:	2000000c 	.word	0x2000000c

08000478 <__libc_init_array>:
 8000478:	b570      	push	{r4, r5, r6, lr}
 800047a:	4d0d      	ldr	r5, [pc, #52]	; (80004b0 <__libc_init_array+0x38>)
 800047c:	4c0d      	ldr	r4, [pc, #52]	; (80004b4 <__libc_init_array+0x3c>)
 800047e:	1b64      	subs	r4, r4, r5
 8000480:	10a4      	asrs	r4, r4, #2
 8000482:	2600      	movs	r6, #0
 8000484:	42a6      	cmp	r6, r4
 8000486:	d109      	bne.n	800049c <__libc_init_array+0x24>
 8000488:	4d0b      	ldr	r5, [pc, #44]	; (80004b8 <__libc_init_array+0x40>)
 800048a:	4c0c      	ldr	r4, [pc, #48]	; (80004bc <__libc_init_array+0x44>)
 800048c:	f000 fce6 	bl	8000e5c <_init>
 8000490:	1b64      	subs	r4, r4, r5
 8000492:	10a4      	asrs	r4, r4, #2
 8000494:	2600      	movs	r6, #0
 8000496:	42a6      	cmp	r6, r4
 8000498:	d105      	bne.n	80004a6 <__libc_init_array+0x2e>
 800049a:	bd70      	pop	{r4, r5, r6, pc}
 800049c:	f855 3b04 	ldr.w	r3, [r5], #4
 80004a0:	4798      	blx	r3
 80004a2:	3601      	adds	r6, #1
 80004a4:	e7ee      	b.n	8000484 <__libc_init_array+0xc>
 80004a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80004aa:	4798      	blx	r3
 80004ac:	3601      	adds	r6, #1
 80004ae:	e7f2      	b.n	8000496 <__libc_init_array+0x1e>
 80004b0:	08000f44 	.word	0x08000f44
 80004b4:	08000f44 	.word	0x08000f44
 80004b8:	08000f44 	.word	0x08000f44
 80004bc:	08000f48 	.word	0x08000f48

080004c0 <memset>:
 80004c0:	4402      	add	r2, r0
 80004c2:	4603      	mov	r3, r0
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d100      	bne.n	80004ca <memset+0xa>
 80004c8:	4770      	bx	lr
 80004ca:	f803 1b01 	strb.w	r1, [r3], #1
 80004ce:	e7f9      	b.n	80004c4 <memset+0x4>

080004d0 <_puts_r>:
 80004d0:	b570      	push	{r4, r5, r6, lr}
 80004d2:	460e      	mov	r6, r1
 80004d4:	4605      	mov	r5, r0
 80004d6:	b118      	cbz	r0, 80004e0 <_puts_r+0x10>
 80004d8:	6983      	ldr	r3, [r0, #24]
 80004da:	b90b      	cbnz	r3, 80004e0 <_puts_r+0x10>
 80004dc:	f000 fa48 	bl	8000970 <__sinit>
 80004e0:	69ab      	ldr	r3, [r5, #24]
 80004e2:	68ac      	ldr	r4, [r5, #8]
 80004e4:	b913      	cbnz	r3, 80004ec <_puts_r+0x1c>
 80004e6:	4628      	mov	r0, r5
 80004e8:	f000 fa42 	bl	8000970 <__sinit>
 80004ec:	4b2c      	ldr	r3, [pc, #176]	; (80005a0 <_puts_r+0xd0>)
 80004ee:	429c      	cmp	r4, r3
 80004f0:	d120      	bne.n	8000534 <_puts_r+0x64>
 80004f2:	686c      	ldr	r4, [r5, #4]
 80004f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004f6:	07db      	lsls	r3, r3, #31
 80004f8:	d405      	bmi.n	8000506 <_puts_r+0x36>
 80004fa:	89a3      	ldrh	r3, [r4, #12]
 80004fc:	0598      	lsls	r0, r3, #22
 80004fe:	d402      	bmi.n	8000506 <_puts_r+0x36>
 8000500:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000502:	f000 fad3 	bl	8000aac <__retarget_lock_acquire_recursive>
 8000506:	89a3      	ldrh	r3, [r4, #12]
 8000508:	0719      	lsls	r1, r3, #28
 800050a:	d51d      	bpl.n	8000548 <_puts_r+0x78>
 800050c:	6923      	ldr	r3, [r4, #16]
 800050e:	b1db      	cbz	r3, 8000548 <_puts_r+0x78>
 8000510:	3e01      	subs	r6, #1
 8000512:	68a3      	ldr	r3, [r4, #8]
 8000514:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000518:	3b01      	subs	r3, #1
 800051a:	60a3      	str	r3, [r4, #8]
 800051c:	bb39      	cbnz	r1, 800056e <_puts_r+0x9e>
 800051e:	2b00      	cmp	r3, #0
 8000520:	da38      	bge.n	8000594 <_puts_r+0xc4>
 8000522:	4622      	mov	r2, r4
 8000524:	210a      	movs	r1, #10
 8000526:	4628      	mov	r0, r5
 8000528:	f000 f848 	bl	80005bc <__swbuf_r>
 800052c:	3001      	adds	r0, #1
 800052e:	d011      	beq.n	8000554 <_puts_r+0x84>
 8000530:	250a      	movs	r5, #10
 8000532:	e011      	b.n	8000558 <_puts_r+0x88>
 8000534:	4b1b      	ldr	r3, [pc, #108]	; (80005a4 <_puts_r+0xd4>)
 8000536:	429c      	cmp	r4, r3
 8000538:	d101      	bne.n	800053e <_puts_r+0x6e>
 800053a:	68ac      	ldr	r4, [r5, #8]
 800053c:	e7da      	b.n	80004f4 <_puts_r+0x24>
 800053e:	4b1a      	ldr	r3, [pc, #104]	; (80005a8 <_puts_r+0xd8>)
 8000540:	429c      	cmp	r4, r3
 8000542:	bf08      	it	eq
 8000544:	68ec      	ldreq	r4, [r5, #12]
 8000546:	e7d5      	b.n	80004f4 <_puts_r+0x24>
 8000548:	4621      	mov	r1, r4
 800054a:	4628      	mov	r0, r5
 800054c:	f000 f888 	bl	8000660 <__swsetup_r>
 8000550:	2800      	cmp	r0, #0
 8000552:	d0dd      	beq.n	8000510 <_puts_r+0x40>
 8000554:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000558:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800055a:	07da      	lsls	r2, r3, #31
 800055c:	d405      	bmi.n	800056a <_puts_r+0x9a>
 800055e:	89a3      	ldrh	r3, [r4, #12]
 8000560:	059b      	lsls	r3, r3, #22
 8000562:	d402      	bmi.n	800056a <_puts_r+0x9a>
 8000564:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000566:	f000 faa2 	bl	8000aae <__retarget_lock_release_recursive>
 800056a:	4628      	mov	r0, r5
 800056c:	bd70      	pop	{r4, r5, r6, pc}
 800056e:	2b00      	cmp	r3, #0
 8000570:	da04      	bge.n	800057c <_puts_r+0xac>
 8000572:	69a2      	ldr	r2, [r4, #24]
 8000574:	429a      	cmp	r2, r3
 8000576:	dc06      	bgt.n	8000586 <_puts_r+0xb6>
 8000578:	290a      	cmp	r1, #10
 800057a:	d004      	beq.n	8000586 <_puts_r+0xb6>
 800057c:	6823      	ldr	r3, [r4, #0]
 800057e:	1c5a      	adds	r2, r3, #1
 8000580:	6022      	str	r2, [r4, #0]
 8000582:	7019      	strb	r1, [r3, #0]
 8000584:	e7c5      	b.n	8000512 <_puts_r+0x42>
 8000586:	4622      	mov	r2, r4
 8000588:	4628      	mov	r0, r5
 800058a:	f000 f817 	bl	80005bc <__swbuf_r>
 800058e:	3001      	adds	r0, #1
 8000590:	d1bf      	bne.n	8000512 <_puts_r+0x42>
 8000592:	e7df      	b.n	8000554 <_puts_r+0x84>
 8000594:	6823      	ldr	r3, [r4, #0]
 8000596:	250a      	movs	r5, #10
 8000598:	1c5a      	adds	r2, r3, #1
 800059a:	6022      	str	r2, [r4, #0]
 800059c:	701d      	strb	r5, [r3, #0]
 800059e:	e7db      	b.n	8000558 <_puts_r+0x88>
 80005a0:	08000f04 	.word	0x08000f04
 80005a4:	08000f24 	.word	0x08000f24
 80005a8:	08000ee4 	.word	0x08000ee4

080005ac <puts>:
 80005ac:	4b02      	ldr	r3, [pc, #8]	; (80005b8 <puts+0xc>)
 80005ae:	4601      	mov	r1, r0
 80005b0:	6818      	ldr	r0, [r3, #0]
 80005b2:	f7ff bf8d 	b.w	80004d0 <_puts_r>
 80005b6:	bf00      	nop
 80005b8:	2000000c 	.word	0x2000000c

080005bc <__swbuf_r>:
 80005bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005be:	460e      	mov	r6, r1
 80005c0:	4614      	mov	r4, r2
 80005c2:	4605      	mov	r5, r0
 80005c4:	b118      	cbz	r0, 80005ce <__swbuf_r+0x12>
 80005c6:	6983      	ldr	r3, [r0, #24]
 80005c8:	b90b      	cbnz	r3, 80005ce <__swbuf_r+0x12>
 80005ca:	f000 f9d1 	bl	8000970 <__sinit>
 80005ce:	4b21      	ldr	r3, [pc, #132]	; (8000654 <__swbuf_r+0x98>)
 80005d0:	429c      	cmp	r4, r3
 80005d2:	d12b      	bne.n	800062c <__swbuf_r+0x70>
 80005d4:	686c      	ldr	r4, [r5, #4]
 80005d6:	69a3      	ldr	r3, [r4, #24]
 80005d8:	60a3      	str	r3, [r4, #8]
 80005da:	89a3      	ldrh	r3, [r4, #12]
 80005dc:	071a      	lsls	r2, r3, #28
 80005de:	d52f      	bpl.n	8000640 <__swbuf_r+0x84>
 80005e0:	6923      	ldr	r3, [r4, #16]
 80005e2:	b36b      	cbz	r3, 8000640 <__swbuf_r+0x84>
 80005e4:	6923      	ldr	r3, [r4, #16]
 80005e6:	6820      	ldr	r0, [r4, #0]
 80005e8:	1ac0      	subs	r0, r0, r3
 80005ea:	6963      	ldr	r3, [r4, #20]
 80005ec:	b2f6      	uxtb	r6, r6
 80005ee:	4283      	cmp	r3, r0
 80005f0:	4637      	mov	r7, r6
 80005f2:	dc04      	bgt.n	80005fe <__swbuf_r+0x42>
 80005f4:	4621      	mov	r1, r4
 80005f6:	4628      	mov	r0, r5
 80005f8:	f000 f926 	bl	8000848 <_fflush_r>
 80005fc:	bb30      	cbnz	r0, 800064c <__swbuf_r+0x90>
 80005fe:	68a3      	ldr	r3, [r4, #8]
 8000600:	3b01      	subs	r3, #1
 8000602:	60a3      	str	r3, [r4, #8]
 8000604:	6823      	ldr	r3, [r4, #0]
 8000606:	1c5a      	adds	r2, r3, #1
 8000608:	6022      	str	r2, [r4, #0]
 800060a:	701e      	strb	r6, [r3, #0]
 800060c:	6963      	ldr	r3, [r4, #20]
 800060e:	3001      	adds	r0, #1
 8000610:	4283      	cmp	r3, r0
 8000612:	d004      	beq.n	800061e <__swbuf_r+0x62>
 8000614:	89a3      	ldrh	r3, [r4, #12]
 8000616:	07db      	lsls	r3, r3, #31
 8000618:	d506      	bpl.n	8000628 <__swbuf_r+0x6c>
 800061a:	2e0a      	cmp	r6, #10
 800061c:	d104      	bne.n	8000628 <__swbuf_r+0x6c>
 800061e:	4621      	mov	r1, r4
 8000620:	4628      	mov	r0, r5
 8000622:	f000 f911 	bl	8000848 <_fflush_r>
 8000626:	b988      	cbnz	r0, 800064c <__swbuf_r+0x90>
 8000628:	4638      	mov	r0, r7
 800062a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800062c:	4b0a      	ldr	r3, [pc, #40]	; (8000658 <__swbuf_r+0x9c>)
 800062e:	429c      	cmp	r4, r3
 8000630:	d101      	bne.n	8000636 <__swbuf_r+0x7a>
 8000632:	68ac      	ldr	r4, [r5, #8]
 8000634:	e7cf      	b.n	80005d6 <__swbuf_r+0x1a>
 8000636:	4b09      	ldr	r3, [pc, #36]	; (800065c <__swbuf_r+0xa0>)
 8000638:	429c      	cmp	r4, r3
 800063a:	bf08      	it	eq
 800063c:	68ec      	ldreq	r4, [r5, #12]
 800063e:	e7ca      	b.n	80005d6 <__swbuf_r+0x1a>
 8000640:	4621      	mov	r1, r4
 8000642:	4628      	mov	r0, r5
 8000644:	f000 f80c 	bl	8000660 <__swsetup_r>
 8000648:	2800      	cmp	r0, #0
 800064a:	d0cb      	beq.n	80005e4 <__swbuf_r+0x28>
 800064c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000650:	e7ea      	b.n	8000628 <__swbuf_r+0x6c>
 8000652:	bf00      	nop
 8000654:	08000f04 	.word	0x08000f04
 8000658:	08000f24 	.word	0x08000f24
 800065c:	08000ee4 	.word	0x08000ee4

08000660 <__swsetup_r>:
 8000660:	4b32      	ldr	r3, [pc, #200]	; (800072c <__swsetup_r+0xcc>)
 8000662:	b570      	push	{r4, r5, r6, lr}
 8000664:	681d      	ldr	r5, [r3, #0]
 8000666:	4606      	mov	r6, r0
 8000668:	460c      	mov	r4, r1
 800066a:	b125      	cbz	r5, 8000676 <__swsetup_r+0x16>
 800066c:	69ab      	ldr	r3, [r5, #24]
 800066e:	b913      	cbnz	r3, 8000676 <__swsetup_r+0x16>
 8000670:	4628      	mov	r0, r5
 8000672:	f000 f97d 	bl	8000970 <__sinit>
 8000676:	4b2e      	ldr	r3, [pc, #184]	; (8000730 <__swsetup_r+0xd0>)
 8000678:	429c      	cmp	r4, r3
 800067a:	d10f      	bne.n	800069c <__swsetup_r+0x3c>
 800067c:	686c      	ldr	r4, [r5, #4]
 800067e:	89a3      	ldrh	r3, [r4, #12]
 8000680:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000684:	0719      	lsls	r1, r3, #28
 8000686:	d42c      	bmi.n	80006e2 <__swsetup_r+0x82>
 8000688:	06dd      	lsls	r5, r3, #27
 800068a:	d411      	bmi.n	80006b0 <__swsetup_r+0x50>
 800068c:	2309      	movs	r3, #9
 800068e:	6033      	str	r3, [r6, #0]
 8000690:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000694:	81a3      	strh	r3, [r4, #12]
 8000696:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800069a:	e03e      	b.n	800071a <__swsetup_r+0xba>
 800069c:	4b25      	ldr	r3, [pc, #148]	; (8000734 <__swsetup_r+0xd4>)
 800069e:	429c      	cmp	r4, r3
 80006a0:	d101      	bne.n	80006a6 <__swsetup_r+0x46>
 80006a2:	68ac      	ldr	r4, [r5, #8]
 80006a4:	e7eb      	b.n	800067e <__swsetup_r+0x1e>
 80006a6:	4b24      	ldr	r3, [pc, #144]	; (8000738 <__swsetup_r+0xd8>)
 80006a8:	429c      	cmp	r4, r3
 80006aa:	bf08      	it	eq
 80006ac:	68ec      	ldreq	r4, [r5, #12]
 80006ae:	e7e6      	b.n	800067e <__swsetup_r+0x1e>
 80006b0:	0758      	lsls	r0, r3, #29
 80006b2:	d512      	bpl.n	80006da <__swsetup_r+0x7a>
 80006b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006b6:	b141      	cbz	r1, 80006ca <__swsetup_r+0x6a>
 80006b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006bc:	4299      	cmp	r1, r3
 80006be:	d002      	beq.n	80006c6 <__swsetup_r+0x66>
 80006c0:	4630      	mov	r0, r6
 80006c2:	f000 fa59 	bl	8000b78 <_free_r>
 80006c6:	2300      	movs	r3, #0
 80006c8:	6363      	str	r3, [r4, #52]	; 0x34
 80006ca:	89a3      	ldrh	r3, [r4, #12]
 80006cc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006d0:	81a3      	strh	r3, [r4, #12]
 80006d2:	2300      	movs	r3, #0
 80006d4:	6063      	str	r3, [r4, #4]
 80006d6:	6923      	ldr	r3, [r4, #16]
 80006d8:	6023      	str	r3, [r4, #0]
 80006da:	89a3      	ldrh	r3, [r4, #12]
 80006dc:	f043 0308 	orr.w	r3, r3, #8
 80006e0:	81a3      	strh	r3, [r4, #12]
 80006e2:	6923      	ldr	r3, [r4, #16]
 80006e4:	b94b      	cbnz	r3, 80006fa <__swsetup_r+0x9a>
 80006e6:	89a3      	ldrh	r3, [r4, #12]
 80006e8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006f0:	d003      	beq.n	80006fa <__swsetup_r+0x9a>
 80006f2:	4621      	mov	r1, r4
 80006f4:	4630      	mov	r0, r6
 80006f6:	f000 f9ff 	bl	8000af8 <__smakebuf_r>
 80006fa:	89a0      	ldrh	r0, [r4, #12]
 80006fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000700:	f010 0301 	ands.w	r3, r0, #1
 8000704:	d00a      	beq.n	800071c <__swsetup_r+0xbc>
 8000706:	2300      	movs	r3, #0
 8000708:	60a3      	str	r3, [r4, #8]
 800070a:	6963      	ldr	r3, [r4, #20]
 800070c:	425b      	negs	r3, r3
 800070e:	61a3      	str	r3, [r4, #24]
 8000710:	6923      	ldr	r3, [r4, #16]
 8000712:	b943      	cbnz	r3, 8000726 <__swsetup_r+0xc6>
 8000714:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000718:	d1ba      	bne.n	8000690 <__swsetup_r+0x30>
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	0781      	lsls	r1, r0, #30
 800071e:	bf58      	it	pl
 8000720:	6963      	ldrpl	r3, [r4, #20]
 8000722:	60a3      	str	r3, [r4, #8]
 8000724:	e7f4      	b.n	8000710 <__swsetup_r+0xb0>
 8000726:	2000      	movs	r0, #0
 8000728:	e7f7      	b.n	800071a <__swsetup_r+0xba>
 800072a:	bf00      	nop
 800072c:	2000000c 	.word	0x2000000c
 8000730:	08000f04 	.word	0x08000f04
 8000734:	08000f24 	.word	0x08000f24
 8000738:	08000ee4 	.word	0x08000ee4

0800073c <__sflush_r>:
 800073c:	898a      	ldrh	r2, [r1, #12]
 800073e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000742:	4605      	mov	r5, r0
 8000744:	0710      	lsls	r0, r2, #28
 8000746:	460c      	mov	r4, r1
 8000748:	d458      	bmi.n	80007fc <__sflush_r+0xc0>
 800074a:	684b      	ldr	r3, [r1, #4]
 800074c:	2b00      	cmp	r3, #0
 800074e:	dc05      	bgt.n	800075c <__sflush_r+0x20>
 8000750:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000752:	2b00      	cmp	r3, #0
 8000754:	dc02      	bgt.n	800075c <__sflush_r+0x20>
 8000756:	2000      	movs	r0, #0
 8000758:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800075c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800075e:	2e00      	cmp	r6, #0
 8000760:	d0f9      	beq.n	8000756 <__sflush_r+0x1a>
 8000762:	2300      	movs	r3, #0
 8000764:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000768:	682f      	ldr	r7, [r5, #0]
 800076a:	602b      	str	r3, [r5, #0]
 800076c:	d032      	beq.n	80007d4 <__sflush_r+0x98>
 800076e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000770:	89a3      	ldrh	r3, [r4, #12]
 8000772:	075a      	lsls	r2, r3, #29
 8000774:	d505      	bpl.n	8000782 <__sflush_r+0x46>
 8000776:	6863      	ldr	r3, [r4, #4]
 8000778:	1ac0      	subs	r0, r0, r3
 800077a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800077c:	b10b      	cbz	r3, 8000782 <__sflush_r+0x46>
 800077e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000780:	1ac0      	subs	r0, r0, r3
 8000782:	2300      	movs	r3, #0
 8000784:	4602      	mov	r2, r0
 8000786:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000788:	6a21      	ldr	r1, [r4, #32]
 800078a:	4628      	mov	r0, r5
 800078c:	47b0      	blx	r6
 800078e:	1c43      	adds	r3, r0, #1
 8000790:	89a3      	ldrh	r3, [r4, #12]
 8000792:	d106      	bne.n	80007a2 <__sflush_r+0x66>
 8000794:	6829      	ldr	r1, [r5, #0]
 8000796:	291d      	cmp	r1, #29
 8000798:	d82c      	bhi.n	80007f4 <__sflush_r+0xb8>
 800079a:	4a2a      	ldr	r2, [pc, #168]	; (8000844 <__sflush_r+0x108>)
 800079c:	40ca      	lsrs	r2, r1
 800079e:	07d6      	lsls	r6, r2, #31
 80007a0:	d528      	bpl.n	80007f4 <__sflush_r+0xb8>
 80007a2:	2200      	movs	r2, #0
 80007a4:	6062      	str	r2, [r4, #4]
 80007a6:	04d9      	lsls	r1, r3, #19
 80007a8:	6922      	ldr	r2, [r4, #16]
 80007aa:	6022      	str	r2, [r4, #0]
 80007ac:	d504      	bpl.n	80007b8 <__sflush_r+0x7c>
 80007ae:	1c42      	adds	r2, r0, #1
 80007b0:	d101      	bne.n	80007b6 <__sflush_r+0x7a>
 80007b2:	682b      	ldr	r3, [r5, #0]
 80007b4:	b903      	cbnz	r3, 80007b8 <__sflush_r+0x7c>
 80007b6:	6560      	str	r0, [r4, #84]	; 0x54
 80007b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007ba:	602f      	str	r7, [r5, #0]
 80007bc:	2900      	cmp	r1, #0
 80007be:	d0ca      	beq.n	8000756 <__sflush_r+0x1a>
 80007c0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007c4:	4299      	cmp	r1, r3
 80007c6:	d002      	beq.n	80007ce <__sflush_r+0x92>
 80007c8:	4628      	mov	r0, r5
 80007ca:	f000 f9d5 	bl	8000b78 <_free_r>
 80007ce:	2000      	movs	r0, #0
 80007d0:	6360      	str	r0, [r4, #52]	; 0x34
 80007d2:	e7c1      	b.n	8000758 <__sflush_r+0x1c>
 80007d4:	6a21      	ldr	r1, [r4, #32]
 80007d6:	2301      	movs	r3, #1
 80007d8:	4628      	mov	r0, r5
 80007da:	47b0      	blx	r6
 80007dc:	1c41      	adds	r1, r0, #1
 80007de:	d1c7      	bne.n	8000770 <__sflush_r+0x34>
 80007e0:	682b      	ldr	r3, [r5, #0]
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d0c4      	beq.n	8000770 <__sflush_r+0x34>
 80007e6:	2b1d      	cmp	r3, #29
 80007e8:	d001      	beq.n	80007ee <__sflush_r+0xb2>
 80007ea:	2b16      	cmp	r3, #22
 80007ec:	d101      	bne.n	80007f2 <__sflush_r+0xb6>
 80007ee:	602f      	str	r7, [r5, #0]
 80007f0:	e7b1      	b.n	8000756 <__sflush_r+0x1a>
 80007f2:	89a3      	ldrh	r3, [r4, #12]
 80007f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007f8:	81a3      	strh	r3, [r4, #12]
 80007fa:	e7ad      	b.n	8000758 <__sflush_r+0x1c>
 80007fc:	690f      	ldr	r7, [r1, #16]
 80007fe:	2f00      	cmp	r7, #0
 8000800:	d0a9      	beq.n	8000756 <__sflush_r+0x1a>
 8000802:	0793      	lsls	r3, r2, #30
 8000804:	680e      	ldr	r6, [r1, #0]
 8000806:	bf08      	it	eq
 8000808:	694b      	ldreq	r3, [r1, #20]
 800080a:	600f      	str	r7, [r1, #0]
 800080c:	bf18      	it	ne
 800080e:	2300      	movne	r3, #0
 8000810:	eba6 0807 	sub.w	r8, r6, r7
 8000814:	608b      	str	r3, [r1, #8]
 8000816:	f1b8 0f00 	cmp.w	r8, #0
 800081a:	dd9c      	ble.n	8000756 <__sflush_r+0x1a>
 800081c:	6a21      	ldr	r1, [r4, #32]
 800081e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000820:	4643      	mov	r3, r8
 8000822:	463a      	mov	r2, r7
 8000824:	4628      	mov	r0, r5
 8000826:	47b0      	blx	r6
 8000828:	2800      	cmp	r0, #0
 800082a:	dc06      	bgt.n	800083a <__sflush_r+0xfe>
 800082c:	89a3      	ldrh	r3, [r4, #12]
 800082e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000832:	81a3      	strh	r3, [r4, #12]
 8000834:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000838:	e78e      	b.n	8000758 <__sflush_r+0x1c>
 800083a:	4407      	add	r7, r0
 800083c:	eba8 0800 	sub.w	r8, r8, r0
 8000840:	e7e9      	b.n	8000816 <__sflush_r+0xda>
 8000842:	bf00      	nop
 8000844:	20400001 	.word	0x20400001

08000848 <_fflush_r>:
 8000848:	b538      	push	{r3, r4, r5, lr}
 800084a:	690b      	ldr	r3, [r1, #16]
 800084c:	4605      	mov	r5, r0
 800084e:	460c      	mov	r4, r1
 8000850:	b913      	cbnz	r3, 8000858 <_fflush_r+0x10>
 8000852:	2500      	movs	r5, #0
 8000854:	4628      	mov	r0, r5
 8000856:	bd38      	pop	{r3, r4, r5, pc}
 8000858:	b118      	cbz	r0, 8000862 <_fflush_r+0x1a>
 800085a:	6983      	ldr	r3, [r0, #24]
 800085c:	b90b      	cbnz	r3, 8000862 <_fflush_r+0x1a>
 800085e:	f000 f887 	bl	8000970 <__sinit>
 8000862:	4b14      	ldr	r3, [pc, #80]	; (80008b4 <_fflush_r+0x6c>)
 8000864:	429c      	cmp	r4, r3
 8000866:	d11b      	bne.n	80008a0 <_fflush_r+0x58>
 8000868:	686c      	ldr	r4, [r5, #4]
 800086a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800086e:	2b00      	cmp	r3, #0
 8000870:	d0ef      	beq.n	8000852 <_fflush_r+0xa>
 8000872:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000874:	07d0      	lsls	r0, r2, #31
 8000876:	d404      	bmi.n	8000882 <_fflush_r+0x3a>
 8000878:	0599      	lsls	r1, r3, #22
 800087a:	d402      	bmi.n	8000882 <_fflush_r+0x3a>
 800087c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800087e:	f000 f915 	bl	8000aac <__retarget_lock_acquire_recursive>
 8000882:	4628      	mov	r0, r5
 8000884:	4621      	mov	r1, r4
 8000886:	f7ff ff59 	bl	800073c <__sflush_r>
 800088a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800088c:	07da      	lsls	r2, r3, #31
 800088e:	4605      	mov	r5, r0
 8000890:	d4e0      	bmi.n	8000854 <_fflush_r+0xc>
 8000892:	89a3      	ldrh	r3, [r4, #12]
 8000894:	059b      	lsls	r3, r3, #22
 8000896:	d4dd      	bmi.n	8000854 <_fflush_r+0xc>
 8000898:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800089a:	f000 f908 	bl	8000aae <__retarget_lock_release_recursive>
 800089e:	e7d9      	b.n	8000854 <_fflush_r+0xc>
 80008a0:	4b05      	ldr	r3, [pc, #20]	; (80008b8 <_fflush_r+0x70>)
 80008a2:	429c      	cmp	r4, r3
 80008a4:	d101      	bne.n	80008aa <_fflush_r+0x62>
 80008a6:	68ac      	ldr	r4, [r5, #8]
 80008a8:	e7df      	b.n	800086a <_fflush_r+0x22>
 80008aa:	4b04      	ldr	r3, [pc, #16]	; (80008bc <_fflush_r+0x74>)
 80008ac:	429c      	cmp	r4, r3
 80008ae:	bf08      	it	eq
 80008b0:	68ec      	ldreq	r4, [r5, #12]
 80008b2:	e7da      	b.n	800086a <_fflush_r+0x22>
 80008b4:	08000f04 	.word	0x08000f04
 80008b8:	08000f24 	.word	0x08000f24
 80008bc:	08000ee4 	.word	0x08000ee4

080008c0 <std>:
 80008c0:	2300      	movs	r3, #0
 80008c2:	b510      	push	{r4, lr}
 80008c4:	4604      	mov	r4, r0
 80008c6:	e9c0 3300 	strd	r3, r3, [r0]
 80008ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008ce:	6083      	str	r3, [r0, #8]
 80008d0:	8181      	strh	r1, [r0, #12]
 80008d2:	6643      	str	r3, [r0, #100]	; 0x64
 80008d4:	81c2      	strh	r2, [r0, #14]
 80008d6:	6183      	str	r3, [r0, #24]
 80008d8:	4619      	mov	r1, r3
 80008da:	2208      	movs	r2, #8
 80008dc:	305c      	adds	r0, #92	; 0x5c
 80008de:	f7ff fdef 	bl	80004c0 <memset>
 80008e2:	4b05      	ldr	r3, [pc, #20]	; (80008f8 <std+0x38>)
 80008e4:	6263      	str	r3, [r4, #36]	; 0x24
 80008e6:	4b05      	ldr	r3, [pc, #20]	; (80008fc <std+0x3c>)
 80008e8:	62a3      	str	r3, [r4, #40]	; 0x28
 80008ea:	4b05      	ldr	r3, [pc, #20]	; (8000900 <std+0x40>)
 80008ec:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008ee:	4b05      	ldr	r3, [pc, #20]	; (8000904 <std+0x44>)
 80008f0:	6224      	str	r4, [r4, #32]
 80008f2:	6323      	str	r3, [r4, #48]	; 0x30
 80008f4:	bd10      	pop	{r4, pc}
 80008f6:	bf00      	nop
 80008f8:	08000ced 	.word	0x08000ced
 80008fc:	08000d0f 	.word	0x08000d0f
 8000900:	08000d47 	.word	0x08000d47
 8000904:	08000d6b 	.word	0x08000d6b

08000908 <_cleanup_r>:
 8000908:	4901      	ldr	r1, [pc, #4]	; (8000910 <_cleanup_r+0x8>)
 800090a:	f000 b8af 	b.w	8000a6c <_fwalk_reent>
 800090e:	bf00      	nop
 8000910:	08000849 	.word	0x08000849

08000914 <__sfmoreglue>:
 8000914:	b570      	push	{r4, r5, r6, lr}
 8000916:	1e4a      	subs	r2, r1, #1
 8000918:	2568      	movs	r5, #104	; 0x68
 800091a:	4355      	muls	r5, r2
 800091c:	460e      	mov	r6, r1
 800091e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000922:	f000 f979 	bl	8000c18 <_malloc_r>
 8000926:	4604      	mov	r4, r0
 8000928:	b140      	cbz	r0, 800093c <__sfmoreglue+0x28>
 800092a:	2100      	movs	r1, #0
 800092c:	e9c0 1600 	strd	r1, r6, [r0]
 8000930:	300c      	adds	r0, #12
 8000932:	60a0      	str	r0, [r4, #8]
 8000934:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000938:	f7ff fdc2 	bl	80004c0 <memset>
 800093c:	4620      	mov	r0, r4
 800093e:	bd70      	pop	{r4, r5, r6, pc}

08000940 <__sfp_lock_acquire>:
 8000940:	4801      	ldr	r0, [pc, #4]	; (8000948 <__sfp_lock_acquire+0x8>)
 8000942:	f000 b8b3 	b.w	8000aac <__retarget_lock_acquire_recursive>
 8000946:	bf00      	nop
 8000948:	200000a8 	.word	0x200000a8

0800094c <__sfp_lock_release>:
 800094c:	4801      	ldr	r0, [pc, #4]	; (8000954 <__sfp_lock_release+0x8>)
 800094e:	f000 b8ae 	b.w	8000aae <__retarget_lock_release_recursive>
 8000952:	bf00      	nop
 8000954:	200000a8 	.word	0x200000a8

08000958 <__sinit_lock_acquire>:
 8000958:	4801      	ldr	r0, [pc, #4]	; (8000960 <__sinit_lock_acquire+0x8>)
 800095a:	f000 b8a7 	b.w	8000aac <__retarget_lock_acquire_recursive>
 800095e:	bf00      	nop
 8000960:	200000a3 	.word	0x200000a3

08000964 <__sinit_lock_release>:
 8000964:	4801      	ldr	r0, [pc, #4]	; (800096c <__sinit_lock_release+0x8>)
 8000966:	f000 b8a2 	b.w	8000aae <__retarget_lock_release_recursive>
 800096a:	bf00      	nop
 800096c:	200000a3 	.word	0x200000a3

08000970 <__sinit>:
 8000970:	b510      	push	{r4, lr}
 8000972:	4604      	mov	r4, r0
 8000974:	f7ff fff0 	bl	8000958 <__sinit_lock_acquire>
 8000978:	69a3      	ldr	r3, [r4, #24]
 800097a:	b11b      	cbz	r3, 8000984 <__sinit+0x14>
 800097c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000980:	f7ff bff0 	b.w	8000964 <__sinit_lock_release>
 8000984:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000988:	6523      	str	r3, [r4, #80]	; 0x50
 800098a:	4b13      	ldr	r3, [pc, #76]	; (80009d8 <__sinit+0x68>)
 800098c:	4a13      	ldr	r2, [pc, #76]	; (80009dc <__sinit+0x6c>)
 800098e:	681b      	ldr	r3, [r3, #0]
 8000990:	62a2      	str	r2, [r4, #40]	; 0x28
 8000992:	42a3      	cmp	r3, r4
 8000994:	bf04      	itt	eq
 8000996:	2301      	moveq	r3, #1
 8000998:	61a3      	streq	r3, [r4, #24]
 800099a:	4620      	mov	r0, r4
 800099c:	f000 f820 	bl	80009e0 <__sfp>
 80009a0:	6060      	str	r0, [r4, #4]
 80009a2:	4620      	mov	r0, r4
 80009a4:	f000 f81c 	bl	80009e0 <__sfp>
 80009a8:	60a0      	str	r0, [r4, #8]
 80009aa:	4620      	mov	r0, r4
 80009ac:	f000 f818 	bl	80009e0 <__sfp>
 80009b0:	2200      	movs	r2, #0
 80009b2:	60e0      	str	r0, [r4, #12]
 80009b4:	2104      	movs	r1, #4
 80009b6:	6860      	ldr	r0, [r4, #4]
 80009b8:	f7ff ff82 	bl	80008c0 <std>
 80009bc:	68a0      	ldr	r0, [r4, #8]
 80009be:	2201      	movs	r2, #1
 80009c0:	2109      	movs	r1, #9
 80009c2:	f7ff ff7d 	bl	80008c0 <std>
 80009c6:	68e0      	ldr	r0, [r4, #12]
 80009c8:	2202      	movs	r2, #2
 80009ca:	2112      	movs	r1, #18
 80009cc:	f7ff ff78 	bl	80008c0 <std>
 80009d0:	2301      	movs	r3, #1
 80009d2:	61a3      	str	r3, [r4, #24]
 80009d4:	e7d2      	b.n	800097c <__sinit+0xc>
 80009d6:	bf00      	nop
 80009d8:	08000ee0 	.word	0x08000ee0
 80009dc:	08000909 	.word	0x08000909

080009e0 <__sfp>:
 80009e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009e2:	4607      	mov	r7, r0
 80009e4:	f7ff ffac 	bl	8000940 <__sfp_lock_acquire>
 80009e8:	4b1e      	ldr	r3, [pc, #120]	; (8000a64 <__sfp+0x84>)
 80009ea:	681e      	ldr	r6, [r3, #0]
 80009ec:	69b3      	ldr	r3, [r6, #24]
 80009ee:	b913      	cbnz	r3, 80009f6 <__sfp+0x16>
 80009f0:	4630      	mov	r0, r6
 80009f2:	f7ff ffbd 	bl	8000970 <__sinit>
 80009f6:	3648      	adds	r6, #72	; 0x48
 80009f8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009fc:	3b01      	subs	r3, #1
 80009fe:	d503      	bpl.n	8000a08 <__sfp+0x28>
 8000a00:	6833      	ldr	r3, [r6, #0]
 8000a02:	b30b      	cbz	r3, 8000a48 <__sfp+0x68>
 8000a04:	6836      	ldr	r6, [r6, #0]
 8000a06:	e7f7      	b.n	80009f8 <__sfp+0x18>
 8000a08:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a0c:	b9d5      	cbnz	r5, 8000a44 <__sfp+0x64>
 8000a0e:	4b16      	ldr	r3, [pc, #88]	; (8000a68 <__sfp+0x88>)
 8000a10:	60e3      	str	r3, [r4, #12]
 8000a12:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a16:	6665      	str	r5, [r4, #100]	; 0x64
 8000a18:	f000 f847 	bl	8000aaa <__retarget_lock_init_recursive>
 8000a1c:	f7ff ff96 	bl	800094c <__sfp_lock_release>
 8000a20:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a24:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a28:	6025      	str	r5, [r4, #0]
 8000a2a:	61a5      	str	r5, [r4, #24]
 8000a2c:	2208      	movs	r2, #8
 8000a2e:	4629      	mov	r1, r5
 8000a30:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a34:	f7ff fd44 	bl	80004c0 <memset>
 8000a38:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a3c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a40:	4620      	mov	r0, r4
 8000a42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a44:	3468      	adds	r4, #104	; 0x68
 8000a46:	e7d9      	b.n	80009fc <__sfp+0x1c>
 8000a48:	2104      	movs	r1, #4
 8000a4a:	4638      	mov	r0, r7
 8000a4c:	f7ff ff62 	bl	8000914 <__sfmoreglue>
 8000a50:	4604      	mov	r4, r0
 8000a52:	6030      	str	r0, [r6, #0]
 8000a54:	2800      	cmp	r0, #0
 8000a56:	d1d5      	bne.n	8000a04 <__sfp+0x24>
 8000a58:	f7ff ff78 	bl	800094c <__sfp_lock_release>
 8000a5c:	230c      	movs	r3, #12
 8000a5e:	603b      	str	r3, [r7, #0]
 8000a60:	e7ee      	b.n	8000a40 <__sfp+0x60>
 8000a62:	bf00      	nop
 8000a64:	08000ee0 	.word	0x08000ee0
 8000a68:	ffff0001 	.word	0xffff0001

08000a6c <_fwalk_reent>:
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	4606      	mov	r6, r0
 8000a72:	4688      	mov	r8, r1
 8000a74:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a78:	2700      	movs	r7, #0
 8000a7a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a7e:	f1b9 0901 	subs.w	r9, r9, #1
 8000a82:	d505      	bpl.n	8000a90 <_fwalk_reent+0x24>
 8000a84:	6824      	ldr	r4, [r4, #0]
 8000a86:	2c00      	cmp	r4, #0
 8000a88:	d1f7      	bne.n	8000a7a <_fwalk_reent+0xe>
 8000a8a:	4638      	mov	r0, r7
 8000a8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a90:	89ab      	ldrh	r3, [r5, #12]
 8000a92:	2b01      	cmp	r3, #1
 8000a94:	d907      	bls.n	8000aa6 <_fwalk_reent+0x3a>
 8000a96:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a9a:	3301      	adds	r3, #1
 8000a9c:	d003      	beq.n	8000aa6 <_fwalk_reent+0x3a>
 8000a9e:	4629      	mov	r1, r5
 8000aa0:	4630      	mov	r0, r6
 8000aa2:	47c0      	blx	r8
 8000aa4:	4307      	orrs	r7, r0
 8000aa6:	3568      	adds	r5, #104	; 0x68
 8000aa8:	e7e9      	b.n	8000a7e <_fwalk_reent+0x12>

08000aaa <__retarget_lock_init_recursive>:
 8000aaa:	4770      	bx	lr

08000aac <__retarget_lock_acquire_recursive>:
 8000aac:	4770      	bx	lr

08000aae <__retarget_lock_release_recursive>:
 8000aae:	4770      	bx	lr

08000ab0 <__swhatbuf_r>:
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	460e      	mov	r6, r1
 8000ab4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ab8:	2900      	cmp	r1, #0
 8000aba:	b096      	sub	sp, #88	; 0x58
 8000abc:	4614      	mov	r4, r2
 8000abe:	461d      	mov	r5, r3
 8000ac0:	da07      	bge.n	8000ad2 <__swhatbuf_r+0x22>
 8000ac2:	2300      	movs	r3, #0
 8000ac4:	602b      	str	r3, [r5, #0]
 8000ac6:	89b3      	ldrh	r3, [r6, #12]
 8000ac8:	061a      	lsls	r2, r3, #24
 8000aca:	d410      	bmi.n	8000aee <__swhatbuf_r+0x3e>
 8000acc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ad0:	e00e      	b.n	8000af0 <__swhatbuf_r+0x40>
 8000ad2:	466a      	mov	r2, sp
 8000ad4:	f000 f970 	bl	8000db8 <_fstat_r>
 8000ad8:	2800      	cmp	r0, #0
 8000ada:	dbf2      	blt.n	8000ac2 <__swhatbuf_r+0x12>
 8000adc:	9a01      	ldr	r2, [sp, #4]
 8000ade:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000ae2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000ae6:	425a      	negs	r2, r3
 8000ae8:	415a      	adcs	r2, r3
 8000aea:	602a      	str	r2, [r5, #0]
 8000aec:	e7ee      	b.n	8000acc <__swhatbuf_r+0x1c>
 8000aee:	2340      	movs	r3, #64	; 0x40
 8000af0:	2000      	movs	r0, #0
 8000af2:	6023      	str	r3, [r4, #0]
 8000af4:	b016      	add	sp, #88	; 0x58
 8000af6:	bd70      	pop	{r4, r5, r6, pc}

08000af8 <__smakebuf_r>:
 8000af8:	898b      	ldrh	r3, [r1, #12]
 8000afa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000afc:	079d      	lsls	r5, r3, #30
 8000afe:	4606      	mov	r6, r0
 8000b00:	460c      	mov	r4, r1
 8000b02:	d507      	bpl.n	8000b14 <__smakebuf_r+0x1c>
 8000b04:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b08:	6023      	str	r3, [r4, #0]
 8000b0a:	6123      	str	r3, [r4, #16]
 8000b0c:	2301      	movs	r3, #1
 8000b0e:	6163      	str	r3, [r4, #20]
 8000b10:	b002      	add	sp, #8
 8000b12:	bd70      	pop	{r4, r5, r6, pc}
 8000b14:	ab01      	add	r3, sp, #4
 8000b16:	466a      	mov	r2, sp
 8000b18:	f7ff ffca 	bl	8000ab0 <__swhatbuf_r>
 8000b1c:	9900      	ldr	r1, [sp, #0]
 8000b1e:	4605      	mov	r5, r0
 8000b20:	4630      	mov	r0, r6
 8000b22:	f000 f879 	bl	8000c18 <_malloc_r>
 8000b26:	b948      	cbnz	r0, 8000b3c <__smakebuf_r+0x44>
 8000b28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b2c:	059a      	lsls	r2, r3, #22
 8000b2e:	d4ef      	bmi.n	8000b10 <__smakebuf_r+0x18>
 8000b30:	f023 0303 	bic.w	r3, r3, #3
 8000b34:	f043 0302 	orr.w	r3, r3, #2
 8000b38:	81a3      	strh	r3, [r4, #12]
 8000b3a:	e7e3      	b.n	8000b04 <__smakebuf_r+0xc>
 8000b3c:	4b0d      	ldr	r3, [pc, #52]	; (8000b74 <__smakebuf_r+0x7c>)
 8000b3e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b40:	89a3      	ldrh	r3, [r4, #12]
 8000b42:	6020      	str	r0, [r4, #0]
 8000b44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b48:	81a3      	strh	r3, [r4, #12]
 8000b4a:	9b00      	ldr	r3, [sp, #0]
 8000b4c:	6163      	str	r3, [r4, #20]
 8000b4e:	9b01      	ldr	r3, [sp, #4]
 8000b50:	6120      	str	r0, [r4, #16]
 8000b52:	b15b      	cbz	r3, 8000b6c <__smakebuf_r+0x74>
 8000b54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b58:	4630      	mov	r0, r6
 8000b5a:	f000 f93f 	bl	8000ddc <_isatty_r>
 8000b5e:	b128      	cbz	r0, 8000b6c <__smakebuf_r+0x74>
 8000b60:	89a3      	ldrh	r3, [r4, #12]
 8000b62:	f023 0303 	bic.w	r3, r3, #3
 8000b66:	f043 0301 	orr.w	r3, r3, #1
 8000b6a:	81a3      	strh	r3, [r4, #12]
 8000b6c:	89a0      	ldrh	r0, [r4, #12]
 8000b6e:	4305      	orrs	r5, r0
 8000b70:	81a5      	strh	r5, [r4, #12]
 8000b72:	e7cd      	b.n	8000b10 <__smakebuf_r+0x18>
 8000b74:	08000909 	.word	0x08000909

08000b78 <_free_r>:
 8000b78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000b7a:	2900      	cmp	r1, #0
 8000b7c:	d048      	beq.n	8000c10 <_free_r+0x98>
 8000b7e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b82:	9001      	str	r0, [sp, #4]
 8000b84:	2b00      	cmp	r3, #0
 8000b86:	f1a1 0404 	sub.w	r4, r1, #4
 8000b8a:	bfb8      	it	lt
 8000b8c:	18e4      	addlt	r4, r4, r3
 8000b8e:	f000 f947 	bl	8000e20 <__malloc_lock>
 8000b92:	4a20      	ldr	r2, [pc, #128]	; (8000c14 <_free_r+0x9c>)
 8000b94:	9801      	ldr	r0, [sp, #4]
 8000b96:	6813      	ldr	r3, [r2, #0]
 8000b98:	4615      	mov	r5, r2
 8000b9a:	b933      	cbnz	r3, 8000baa <_free_r+0x32>
 8000b9c:	6063      	str	r3, [r4, #4]
 8000b9e:	6014      	str	r4, [r2, #0]
 8000ba0:	b003      	add	sp, #12
 8000ba2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000ba6:	f000 b941 	b.w	8000e2c <__malloc_unlock>
 8000baa:	42a3      	cmp	r3, r4
 8000bac:	d90b      	bls.n	8000bc6 <_free_r+0x4e>
 8000bae:	6821      	ldr	r1, [r4, #0]
 8000bb0:	1862      	adds	r2, r4, r1
 8000bb2:	4293      	cmp	r3, r2
 8000bb4:	bf04      	itt	eq
 8000bb6:	681a      	ldreq	r2, [r3, #0]
 8000bb8:	685b      	ldreq	r3, [r3, #4]
 8000bba:	6063      	str	r3, [r4, #4]
 8000bbc:	bf04      	itt	eq
 8000bbe:	1852      	addeq	r2, r2, r1
 8000bc0:	6022      	streq	r2, [r4, #0]
 8000bc2:	602c      	str	r4, [r5, #0]
 8000bc4:	e7ec      	b.n	8000ba0 <_free_r+0x28>
 8000bc6:	461a      	mov	r2, r3
 8000bc8:	685b      	ldr	r3, [r3, #4]
 8000bca:	b10b      	cbz	r3, 8000bd0 <_free_r+0x58>
 8000bcc:	42a3      	cmp	r3, r4
 8000bce:	d9fa      	bls.n	8000bc6 <_free_r+0x4e>
 8000bd0:	6811      	ldr	r1, [r2, #0]
 8000bd2:	1855      	adds	r5, r2, r1
 8000bd4:	42a5      	cmp	r5, r4
 8000bd6:	d10b      	bne.n	8000bf0 <_free_r+0x78>
 8000bd8:	6824      	ldr	r4, [r4, #0]
 8000bda:	4421      	add	r1, r4
 8000bdc:	1854      	adds	r4, r2, r1
 8000bde:	42a3      	cmp	r3, r4
 8000be0:	6011      	str	r1, [r2, #0]
 8000be2:	d1dd      	bne.n	8000ba0 <_free_r+0x28>
 8000be4:	681c      	ldr	r4, [r3, #0]
 8000be6:	685b      	ldr	r3, [r3, #4]
 8000be8:	6053      	str	r3, [r2, #4]
 8000bea:	4421      	add	r1, r4
 8000bec:	6011      	str	r1, [r2, #0]
 8000bee:	e7d7      	b.n	8000ba0 <_free_r+0x28>
 8000bf0:	d902      	bls.n	8000bf8 <_free_r+0x80>
 8000bf2:	230c      	movs	r3, #12
 8000bf4:	6003      	str	r3, [r0, #0]
 8000bf6:	e7d3      	b.n	8000ba0 <_free_r+0x28>
 8000bf8:	6825      	ldr	r5, [r4, #0]
 8000bfa:	1961      	adds	r1, r4, r5
 8000bfc:	428b      	cmp	r3, r1
 8000bfe:	bf04      	itt	eq
 8000c00:	6819      	ldreq	r1, [r3, #0]
 8000c02:	685b      	ldreq	r3, [r3, #4]
 8000c04:	6063      	str	r3, [r4, #4]
 8000c06:	bf04      	itt	eq
 8000c08:	1949      	addeq	r1, r1, r5
 8000c0a:	6021      	streq	r1, [r4, #0]
 8000c0c:	6054      	str	r4, [r2, #4]
 8000c0e:	e7c7      	b.n	8000ba0 <_free_r+0x28>
 8000c10:	b003      	add	sp, #12
 8000c12:	bd30      	pop	{r4, r5, pc}
 8000c14:	20000098 	.word	0x20000098

08000c18 <_malloc_r>:
 8000c18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c1a:	1ccd      	adds	r5, r1, #3
 8000c1c:	f025 0503 	bic.w	r5, r5, #3
 8000c20:	3508      	adds	r5, #8
 8000c22:	2d0c      	cmp	r5, #12
 8000c24:	bf38      	it	cc
 8000c26:	250c      	movcc	r5, #12
 8000c28:	2d00      	cmp	r5, #0
 8000c2a:	4606      	mov	r6, r0
 8000c2c:	db01      	blt.n	8000c32 <_malloc_r+0x1a>
 8000c2e:	42a9      	cmp	r1, r5
 8000c30:	d903      	bls.n	8000c3a <_malloc_r+0x22>
 8000c32:	230c      	movs	r3, #12
 8000c34:	6033      	str	r3, [r6, #0]
 8000c36:	2000      	movs	r0, #0
 8000c38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c3a:	f000 f8f1 	bl	8000e20 <__malloc_lock>
 8000c3e:	4921      	ldr	r1, [pc, #132]	; (8000cc4 <_malloc_r+0xac>)
 8000c40:	680a      	ldr	r2, [r1, #0]
 8000c42:	4614      	mov	r4, r2
 8000c44:	b99c      	cbnz	r4, 8000c6e <_malloc_r+0x56>
 8000c46:	4f20      	ldr	r7, [pc, #128]	; (8000cc8 <_malloc_r+0xb0>)
 8000c48:	683b      	ldr	r3, [r7, #0]
 8000c4a:	b923      	cbnz	r3, 8000c56 <_malloc_r+0x3e>
 8000c4c:	4621      	mov	r1, r4
 8000c4e:	4630      	mov	r0, r6
 8000c50:	f000 f83c 	bl	8000ccc <_sbrk_r>
 8000c54:	6038      	str	r0, [r7, #0]
 8000c56:	4629      	mov	r1, r5
 8000c58:	4630      	mov	r0, r6
 8000c5a:	f000 f837 	bl	8000ccc <_sbrk_r>
 8000c5e:	1c43      	adds	r3, r0, #1
 8000c60:	d123      	bne.n	8000caa <_malloc_r+0x92>
 8000c62:	230c      	movs	r3, #12
 8000c64:	6033      	str	r3, [r6, #0]
 8000c66:	4630      	mov	r0, r6
 8000c68:	f000 f8e0 	bl	8000e2c <__malloc_unlock>
 8000c6c:	e7e3      	b.n	8000c36 <_malloc_r+0x1e>
 8000c6e:	6823      	ldr	r3, [r4, #0]
 8000c70:	1b5b      	subs	r3, r3, r5
 8000c72:	d417      	bmi.n	8000ca4 <_malloc_r+0x8c>
 8000c74:	2b0b      	cmp	r3, #11
 8000c76:	d903      	bls.n	8000c80 <_malloc_r+0x68>
 8000c78:	6023      	str	r3, [r4, #0]
 8000c7a:	441c      	add	r4, r3
 8000c7c:	6025      	str	r5, [r4, #0]
 8000c7e:	e004      	b.n	8000c8a <_malloc_r+0x72>
 8000c80:	6863      	ldr	r3, [r4, #4]
 8000c82:	42a2      	cmp	r2, r4
 8000c84:	bf0c      	ite	eq
 8000c86:	600b      	streq	r3, [r1, #0]
 8000c88:	6053      	strne	r3, [r2, #4]
 8000c8a:	4630      	mov	r0, r6
 8000c8c:	f000 f8ce 	bl	8000e2c <__malloc_unlock>
 8000c90:	f104 000b 	add.w	r0, r4, #11
 8000c94:	1d23      	adds	r3, r4, #4
 8000c96:	f020 0007 	bic.w	r0, r0, #7
 8000c9a:	1ac2      	subs	r2, r0, r3
 8000c9c:	d0cc      	beq.n	8000c38 <_malloc_r+0x20>
 8000c9e:	1a1b      	subs	r3, r3, r0
 8000ca0:	50a3      	str	r3, [r4, r2]
 8000ca2:	e7c9      	b.n	8000c38 <_malloc_r+0x20>
 8000ca4:	4622      	mov	r2, r4
 8000ca6:	6864      	ldr	r4, [r4, #4]
 8000ca8:	e7cc      	b.n	8000c44 <_malloc_r+0x2c>
 8000caa:	1cc4      	adds	r4, r0, #3
 8000cac:	f024 0403 	bic.w	r4, r4, #3
 8000cb0:	42a0      	cmp	r0, r4
 8000cb2:	d0e3      	beq.n	8000c7c <_malloc_r+0x64>
 8000cb4:	1a21      	subs	r1, r4, r0
 8000cb6:	4630      	mov	r0, r6
 8000cb8:	f000 f808 	bl	8000ccc <_sbrk_r>
 8000cbc:	3001      	adds	r0, #1
 8000cbe:	d1dd      	bne.n	8000c7c <_malloc_r+0x64>
 8000cc0:	e7cf      	b.n	8000c62 <_malloc_r+0x4a>
 8000cc2:	bf00      	nop
 8000cc4:	20000098 	.word	0x20000098
 8000cc8:	2000009c 	.word	0x2000009c

08000ccc <_sbrk_r>:
 8000ccc:	b538      	push	{r3, r4, r5, lr}
 8000cce:	4d06      	ldr	r5, [pc, #24]	; (8000ce8 <_sbrk_r+0x1c>)
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	4604      	mov	r4, r0
 8000cd4:	4608      	mov	r0, r1
 8000cd6:	602b      	str	r3, [r5, #0]
 8000cd8:	f7ff fb72 	bl	80003c0 <_sbrk>
 8000cdc:	1c43      	adds	r3, r0, #1
 8000cde:	d102      	bne.n	8000ce6 <_sbrk_r+0x1a>
 8000ce0:	682b      	ldr	r3, [r5, #0]
 8000ce2:	b103      	cbz	r3, 8000ce6 <_sbrk_r+0x1a>
 8000ce4:	6023      	str	r3, [r4, #0]
 8000ce6:	bd38      	pop	{r3, r4, r5, pc}
 8000ce8:	200000ac 	.word	0x200000ac

08000cec <__sread>:
 8000cec:	b510      	push	{r4, lr}
 8000cee:	460c      	mov	r4, r1
 8000cf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cf4:	f000 f8a0 	bl	8000e38 <_read_r>
 8000cf8:	2800      	cmp	r0, #0
 8000cfa:	bfab      	itete	ge
 8000cfc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000cfe:	89a3      	ldrhlt	r3, [r4, #12]
 8000d00:	181b      	addge	r3, r3, r0
 8000d02:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000d06:	bfac      	ite	ge
 8000d08:	6563      	strge	r3, [r4, #84]	; 0x54
 8000d0a:	81a3      	strhlt	r3, [r4, #12]
 8000d0c:	bd10      	pop	{r4, pc}

08000d0e <__swrite>:
 8000d0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d12:	461f      	mov	r7, r3
 8000d14:	898b      	ldrh	r3, [r1, #12]
 8000d16:	05db      	lsls	r3, r3, #23
 8000d18:	4605      	mov	r5, r0
 8000d1a:	460c      	mov	r4, r1
 8000d1c:	4616      	mov	r6, r2
 8000d1e:	d505      	bpl.n	8000d2c <__swrite+0x1e>
 8000d20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d24:	2302      	movs	r3, #2
 8000d26:	2200      	movs	r2, #0
 8000d28:	f000 f868 	bl	8000dfc <_lseek_r>
 8000d2c:	89a3      	ldrh	r3, [r4, #12]
 8000d2e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d32:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000d36:	81a3      	strh	r3, [r4, #12]
 8000d38:	4632      	mov	r2, r6
 8000d3a:	463b      	mov	r3, r7
 8000d3c:	4628      	mov	r0, r5
 8000d3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d42:	f000 b817 	b.w	8000d74 <_write_r>

08000d46 <__sseek>:
 8000d46:	b510      	push	{r4, lr}
 8000d48:	460c      	mov	r4, r1
 8000d4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d4e:	f000 f855 	bl	8000dfc <_lseek_r>
 8000d52:	1c43      	adds	r3, r0, #1
 8000d54:	89a3      	ldrh	r3, [r4, #12]
 8000d56:	bf15      	itete	ne
 8000d58:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d5a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d5e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d62:	81a3      	strheq	r3, [r4, #12]
 8000d64:	bf18      	it	ne
 8000d66:	81a3      	strhne	r3, [r4, #12]
 8000d68:	bd10      	pop	{r4, pc}

08000d6a <__sclose>:
 8000d6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d6e:	f000 b813 	b.w	8000d98 <_close_r>
	...

08000d74 <_write_r>:
 8000d74:	b538      	push	{r3, r4, r5, lr}
 8000d76:	4d07      	ldr	r5, [pc, #28]	; (8000d94 <_write_r+0x20>)
 8000d78:	4604      	mov	r4, r0
 8000d7a:	4608      	mov	r0, r1
 8000d7c:	4611      	mov	r1, r2
 8000d7e:	2200      	movs	r2, #0
 8000d80:	602a      	str	r2, [r5, #0]
 8000d82:	461a      	mov	r2, r3
 8000d84:	f7ff facb 	bl	800031e <_write>
 8000d88:	1c43      	adds	r3, r0, #1
 8000d8a:	d102      	bne.n	8000d92 <_write_r+0x1e>
 8000d8c:	682b      	ldr	r3, [r5, #0]
 8000d8e:	b103      	cbz	r3, 8000d92 <_write_r+0x1e>
 8000d90:	6023      	str	r3, [r4, #0]
 8000d92:	bd38      	pop	{r3, r4, r5, pc}
 8000d94:	200000ac 	.word	0x200000ac

08000d98 <_close_r>:
 8000d98:	b538      	push	{r3, r4, r5, lr}
 8000d9a:	4d06      	ldr	r5, [pc, #24]	; (8000db4 <_close_r+0x1c>)
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	4604      	mov	r4, r0
 8000da0:	4608      	mov	r0, r1
 8000da2:	602b      	str	r3, [r5, #0]
 8000da4:	f7ff fad7 	bl	8000356 <_close>
 8000da8:	1c43      	adds	r3, r0, #1
 8000daa:	d102      	bne.n	8000db2 <_close_r+0x1a>
 8000dac:	682b      	ldr	r3, [r5, #0]
 8000dae:	b103      	cbz	r3, 8000db2 <_close_r+0x1a>
 8000db0:	6023      	str	r3, [r4, #0]
 8000db2:	bd38      	pop	{r3, r4, r5, pc}
 8000db4:	200000ac 	.word	0x200000ac

08000db8 <_fstat_r>:
 8000db8:	b538      	push	{r3, r4, r5, lr}
 8000dba:	4d07      	ldr	r5, [pc, #28]	; (8000dd8 <_fstat_r+0x20>)
 8000dbc:	2300      	movs	r3, #0
 8000dbe:	4604      	mov	r4, r0
 8000dc0:	4608      	mov	r0, r1
 8000dc2:	4611      	mov	r1, r2
 8000dc4:	602b      	str	r3, [r5, #0]
 8000dc6:	f7ff fad2 	bl	800036e <_fstat>
 8000dca:	1c43      	adds	r3, r0, #1
 8000dcc:	d102      	bne.n	8000dd4 <_fstat_r+0x1c>
 8000dce:	682b      	ldr	r3, [r5, #0]
 8000dd0:	b103      	cbz	r3, 8000dd4 <_fstat_r+0x1c>
 8000dd2:	6023      	str	r3, [r4, #0]
 8000dd4:	bd38      	pop	{r3, r4, r5, pc}
 8000dd6:	bf00      	nop
 8000dd8:	200000ac 	.word	0x200000ac

08000ddc <_isatty_r>:
 8000ddc:	b538      	push	{r3, r4, r5, lr}
 8000dde:	4d06      	ldr	r5, [pc, #24]	; (8000df8 <_isatty_r+0x1c>)
 8000de0:	2300      	movs	r3, #0
 8000de2:	4604      	mov	r4, r0
 8000de4:	4608      	mov	r0, r1
 8000de6:	602b      	str	r3, [r5, #0]
 8000de8:	f7ff fad1 	bl	800038e <_isatty>
 8000dec:	1c43      	adds	r3, r0, #1
 8000dee:	d102      	bne.n	8000df6 <_isatty_r+0x1a>
 8000df0:	682b      	ldr	r3, [r5, #0]
 8000df2:	b103      	cbz	r3, 8000df6 <_isatty_r+0x1a>
 8000df4:	6023      	str	r3, [r4, #0]
 8000df6:	bd38      	pop	{r3, r4, r5, pc}
 8000df8:	200000ac 	.word	0x200000ac

08000dfc <_lseek_r>:
 8000dfc:	b538      	push	{r3, r4, r5, lr}
 8000dfe:	4d07      	ldr	r5, [pc, #28]	; (8000e1c <_lseek_r+0x20>)
 8000e00:	4604      	mov	r4, r0
 8000e02:	4608      	mov	r0, r1
 8000e04:	4611      	mov	r1, r2
 8000e06:	2200      	movs	r2, #0
 8000e08:	602a      	str	r2, [r5, #0]
 8000e0a:	461a      	mov	r2, r3
 8000e0c:	f7ff faca 	bl	80003a4 <_lseek>
 8000e10:	1c43      	adds	r3, r0, #1
 8000e12:	d102      	bne.n	8000e1a <_lseek_r+0x1e>
 8000e14:	682b      	ldr	r3, [r5, #0]
 8000e16:	b103      	cbz	r3, 8000e1a <_lseek_r+0x1e>
 8000e18:	6023      	str	r3, [r4, #0]
 8000e1a:	bd38      	pop	{r3, r4, r5, pc}
 8000e1c:	200000ac 	.word	0x200000ac

08000e20 <__malloc_lock>:
 8000e20:	4801      	ldr	r0, [pc, #4]	; (8000e28 <__malloc_lock+0x8>)
 8000e22:	f7ff be43 	b.w	8000aac <__retarget_lock_acquire_recursive>
 8000e26:	bf00      	nop
 8000e28:	200000a4 	.word	0x200000a4

08000e2c <__malloc_unlock>:
 8000e2c:	4801      	ldr	r0, [pc, #4]	; (8000e34 <__malloc_unlock+0x8>)
 8000e2e:	f7ff be3e 	b.w	8000aae <__retarget_lock_release_recursive>
 8000e32:	bf00      	nop
 8000e34:	200000a4 	.word	0x200000a4

08000e38 <_read_r>:
 8000e38:	b538      	push	{r3, r4, r5, lr}
 8000e3a:	4d07      	ldr	r5, [pc, #28]	; (8000e58 <_read_r+0x20>)
 8000e3c:	4604      	mov	r4, r0
 8000e3e:	4608      	mov	r0, r1
 8000e40:	4611      	mov	r1, r2
 8000e42:	2200      	movs	r2, #0
 8000e44:	602a      	str	r2, [r5, #0]
 8000e46:	461a      	mov	r2, r3
 8000e48:	f7ff fa4c 	bl	80002e4 <_read>
 8000e4c:	1c43      	adds	r3, r0, #1
 8000e4e:	d102      	bne.n	8000e56 <_read_r+0x1e>
 8000e50:	682b      	ldr	r3, [r5, #0]
 8000e52:	b103      	cbz	r3, 8000e56 <_read_r+0x1e>
 8000e54:	6023      	str	r3, [r4, #0]
 8000e56:	bd38      	pop	{r3, r4, r5, pc}
 8000e58:	200000ac 	.word	0x200000ac

08000e5c <_init>:
 8000e5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e5e:	bf00      	nop
 8000e60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e62:	bc08      	pop	{r3}
 8000e64:	469e      	mov	lr, r3
 8000e66:	4770      	bx	lr

08000e68 <_fini>:
 8000e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e6a:	bf00      	nop
 8000e6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e6e:	bc08      	pop	{r3}
 8000e70:	469e      	mov	lr, r3
 8000e72:	4770      	bx	lr
