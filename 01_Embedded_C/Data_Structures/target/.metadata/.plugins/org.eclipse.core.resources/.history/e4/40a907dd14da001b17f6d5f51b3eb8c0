/**
  ******************************************************************************
  * @file    main.c
  * @author  Auto-generated by STM32CubeIDE
  * @version V1.0
  * @brief   Default main function.
  ******************************************************************************
*/
#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>


struct shape{
	uint8_t type;
	int32_t x_coord;
	int32_t y_coord;
};

typedef struct shape shapeType;
/*
 1= rectangle
 2= square
 3= circle
 4= triangle
 */

int main(){

	shapeType button ={1, 5, -2};

	button.type = 1;
	button.x_coord = -10;
	button.y_coord = -30;

	printf("The button type is %d\r\n", button.type);
	printf("The button x_coordinate is  %ld \r\n", button.x_coord);
	printf("The button y_coordinate is  %ld  \r\n", button.y_coord);

	shapeType panel;
	shapeType *pnl;

	pnl = &panel;
	pnl->type = 2;
	pnl->x_coord = 500;
	pnl->y_coord = -500;

	printf("The panel type is %d\r\n", pnl->type);
	printf("The panel x_coordinate is  %ld \r\n", pnl->x_coord);
	printf("The panel y_coordinate is  %ld  \r\n", pnl->y_coord);

	shapeType *sq;
	sq = (shapeType *) malloc(sizeof(shapeType)); //dynamic structure in heap
	sq->type = 3;
	sq->x_coord = -900;
	sq->y_coord = 300;

	printf("The sq type is %d\r\n", sq->type);
	printf("The sq x_coordinate is  %ld \r\n", sq->x_coord);
	printf("The sq y_coordinate is  %ld  \r\n", sq->y_coord);


	for(;;);




}
